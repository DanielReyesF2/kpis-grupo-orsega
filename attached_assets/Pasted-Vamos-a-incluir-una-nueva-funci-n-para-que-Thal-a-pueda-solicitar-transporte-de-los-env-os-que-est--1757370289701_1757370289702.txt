Vamos a incluir una nueva función para que Thalía pueda solicitar transporte de los envíos que esté creando. Lo que tenemos pensado es:

Objetivo (en una línea)

Desde la tarjeta de un envío en Pendientes, abrir un modal precargado, elegir Proveedor / Fecha / ¿Lleva cita?, y al enviar mandar un correo al proveedor con la info en tabla. Sin Excel en esta fase.

Paso 0 — Piensa y confirma (antes de codificar)

Respóndeme primero con un plan breve que incluya:

Tu entendimiento del flujo.

Qué archivos vas a tocar (frontend y backend).

Campos de DB que usarás/crearás.

Servicio de correo que vas a usar (Resend/Postmark/SES/Gmail API) y variables de entorno.

Riesgos o dudas.
Espera mi OK para proceder.

Flujo del usuario

Crear nuevo envío → se guarda la tarjeta en Pendientes.

Click en Solicitar envío en la tarjeta.

Se abre modal precargado con los datos del envío (solo lectura).

El usuario elige Proveedor, puede ajustar Fecha, marca ¿Lleva cita? y escribe Notas (opcional).

Click Enviar solicitud → se manda el correo al proveedor.

Cuando el proveedor responda, Thalía arrastra la tarjeta a En Tránsito.

Lo que vas a implementar
Frontend

Botón Solicitar envío visible si status === "PENDIENTE" y no se ha enviado (request_status !== "requested").

Modal RequestShipmentModal:

Precargado (solo lectura): Cliente/Proyecto, Código, Origen (lugar/contacto/teléfono), Destino (si aplica), Carga (tipo/cantidad/peso/volumen), Observaciones, Fecha.

Editables mínimos:

Proveedor (select, requerido; default = último usado por ese cliente si existe),

Fecha de recolección (default = la del envío),

¿Lleva cita? (toggle) + Notas (textarea, opcional),

CC (chips/autocomplete, opcional).

Vista previa de Asunto + Cuerpo del correo (solo lectura).

Botones: Enviar solicitud, Copiar correo (fallback), Cancelar.

Backend

GET /api/shipments/:id/request-simple/prefill
Devuelve datos del envío, lista de proveedores, proveedor_sugerido y emails CC sugeridos.

POST /api/shipments/:id/request-simple
Body: { provider_id, pickup_date_override?, appointment_required, appointment_notes?, cc?[] }
Acciones: cargar envío+proveedor → generar Asunto y HTML (tabla) → enviar por el servicio elegido → guardar request_status="requested", requested_at, requested_by, request_message_id → responder {ok:true} o error.

Correo (plantillas mínimas)

Asunto: Solicitud de recolección – {{cliente}} – {{fecha_dd/mm}}

Cuerpo (HTML simple):

Saludo breve.

Línea: “Este servicio {{lleva|no lleva}} cita” {{+ notas si aplica}}.

Tabla con: Cliente/Código, Origen, Destino, Fecha/Ventana, Carga (tipo/cantidad/peso/volumen), Observaciones, Contactos.

Cierre y firma.

From: logistica@tu-dominio.com (dominio verificado).

Reply-To: correo de Thalía.

To/CC: del proveedor (DB) + CC proporcionados.

Datos (mínimo necesario)

Tabla providers: id, name, email_to text[], email_cc text[].

Tabla shipments (añadir si faltan): provider_id uuid null, request_status text, requested_at timestamptz, requested_by uuid, request_message_id text.

Criterios de aceptación (checklist)

 El modal abre precargado con la info correcta del envío.

 Se puede seleccionar Proveedor y enviar con 1 clic.

 El correo llega con tabla completa y la línea de cita/no cita correcta.

 request_status pasa a requested y aparece badge “Solicitud enviada”.

 Si falla el envío, aparece error y funciona Copiar correo (mailto con asunto/cuerpo en texto plano).