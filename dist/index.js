var Fr=Object.defineProperty;var se=(a,t)=>()=>(a&&(t=a(a=0)),t);var me=(a,t)=>{for(var e in t)Fr(a,e,{get:t[e],enumerable:!0})};var Ke={};me(Ke,{actionPlans:()=>ge,areas:()=>F,clients:()=>X,companies:()=>L,cycleTimeMetricsSchema:()=>tn,exchangeRates:()=>z,insertActionPlanSchema:()=>Br,insertAreaSchema:()=>We,insertClientSchema:()=>Qe,insertCompanySchema:()=>Ge,insertExchangeRateSchema:()=>an,insertJobProfileSchema:()=>Qr,insertKpiSchema:()=>Je,insertKpiValueSchema:()=>Me,insertNotificationSchema:()=>Yr,insertPaymentComplementSchema:()=>sn,insertPaymentReceiptSchema:()=>on,insertPaymentVoucherSchema:()=>cn,insertProductSchema:()=>rn,insertProviderSchema:()=>Ze,insertScheduledPaymentSchema:()=>nn,insertShipmentCycleTimesSchema:()=>en,insertShipmentItemSchema:()=>Jr,insertShipmentNotificationSchema:()=>Xr,insertShipmentSchema:()=>Ye,insertShipmentUpdateSchema:()=>Hr,insertUserActivationTokenSchema:()=>qr,insertUserSchema:()=>xe,jobProfileWithDetails:()=>Zr,jobProfiles:()=>ce,kpiValues:()=>N,kpis:()=>_,loginSchema:()=>zr,notifications:()=>O,paymentComplements:()=>Rt,paymentReceipts:()=>$t,paymentVouchers:()=>V,products:()=>_t,providers:()=>Nt,registerUserSchema:()=>Wr,scheduledPayments:()=>et,shipmentCycleTimes:()=>J,shipmentItems:()=>ie,shipmentNotifications:()=>At,shipmentStatusEnum:()=>ke,shipmentUpdates:()=>he,shipments:()=>Z,updateKpiSchema:()=>He,updateKpiValueSchema:()=>Gr,updateShipmentStatusSchema:()=>Xe,userActivationTokens:()=>pe,users:()=>M,voucherStatusEnum:()=>Ct});import{pgTable as G,text as v,serial as H,integer as j,boolean as ye,timestamp as R,json as Se,pgEnum as Tt,real as ae,varchar as Lr,uniqueIndex as xt}from"drizzle-orm/pg-core";import{sql as ze}from"drizzle-orm";import{createInsertSchema as W}from"drizzle-zod";import{z as T}from"zod";var ke,M,xe,pe,qr,L,Ge,F,We,_,Je,N,Me,ge,Br,zr,Gr,He,Wr,Z,Ye,ie,Jr,he,Hr,O,Yr,At,Xr,Xe,ce,Qr,Zr,J,en,tn,X,Qe,Nt,Ze,_t,rn,Ct,et,nn,$t,on,Rt,sn,z,an,V,cn,le=se(()=>{"use strict";ke=Tt("shipment_status",["pending","in_transit","delayed","delivered","cancelled"]),M=G("users",{id:H("id").primaryKey(),name:v("name").notNull(),email:v("email").notNull().unique(),password:v("password").notNull(),role:v("role").notNull().default("viewer"),companyId:j("company_id"),areaId:j("area_id"),lastLogin:R("last_login")}),xe=W(M).omit({id:!0,lastLogin:!0}),pe=G("user_activation_tokens",{id:H("id").primaryKey(),token:v("token").notNull().unique(),email:v("email").notNull(),expiresAt:R("expires_at").notNull(),used:ye("used").default(!1),createdAt:R("created_at").defaultNow()}),qr=W(pe).omit({id:!0,createdAt:!0}),L=G("companies",{id:H("id").primaryKey(),name:v("name").notNull(),description:v("description"),sector:v("sector"),logo:v("logo"),createdAt:R("created_at").defaultNow()}),Ge=W(L).omit({id:!0,createdAt:!0}),F=G("areas",{id:H("id").primaryKey(),name:v("name").notNull(),description:v("description"),companyId:j("company_id").notNull()}),We=W(F).omit({id:!0}),_=G("kpis",{id:H("id").primaryKey(),name:v("name").notNull(),description:v("description"),areaId:j("area_id").notNull(),companyId:j("company_id").notNull(),unit:v("unit").notNull(),target:v("target").notNull(),frequency:v("frequency").notNull(),calculationMethod:v("calculation_method"),responsible:v("responsible"),invertedMetric:ye("inverted_metric").default(!1)}),Je=W(_).omit({id:!0}),N=G("kpi_values",{id:H("id").primaryKey(),kpiId:j("kpi_id").notNull(),userId:j("user_id"),value:v("value").notNull(),date:R("date").defaultNow(),period:v("period").notNull(),compliancePercentage:v("compliance_percentage"),status:v("status"),comments:v("comments"),updatedBy:j("updated_by")},a=>({userKpiUnique:xt("user_kpi_unique").on(a.kpiId,a.userId,a.period).where(ze`${a.userId} IS NOT NULL`),companyKpiUnique:xt("company_kpi_unique").on(a.kpiId,a.period).where(ze`${a.userId} IS NULL`)})),Me=W(N).omit({id:!0,date:!0}),ge=G("action_plans",{id:H("id").primaryKey(),kpiId:j("kpi_id").notNull(),problemDescription:v("problem_description").notNull(),correctiveActions:v("corrective_actions").notNull(),responsible:v("responsible").notNull(),startDate:R("start_date").notNull(),endDate:R("end_date").notNull(),status:v("status").notNull(),results:v("results")}),Br=W(ge).omit({id:!0}),zr=T.object({username:T.string().min(3,"El nombre de usuario debe tener al menos 3 caracteres"),password:T.string().min(6,"La contrase\xF1a debe tener al menos 6 caracteres")}),Gr=Me.extend({compliancePercentage:T.string().optional(),status:T.string().optional()}),He=T.object({name:T.string().optional(),description:T.string().optional(),areaId:T.number().optional(),companyId:T.number().optional(),unit:T.string().optional(),target:T.union([T.string(),T.number()]).transform(a=>typeof a=="number"?a.toString():a).optional(),frequency:T.string().optional(),calculationMethod:T.string().optional(),responsible:T.string().optional(),invertedMetric:T.boolean().optional()}),Wr=xe.extend({password:T.string().min(6,"La contrase\xF1a debe tener al menos 6 caracteres"),confirmPassword:T.string().min(6,"La contrase\xF1a debe tener al menos 6 caracteres")}).refine(a=>a.password===a.confirmPassword,{message:"Las contrase\xF1as no coinciden",path:["confirmPassword"]}),Z=G("shipments",{id:H("id").primaryKey(),trackingCode:v("tracking_code").notNull().unique(),companyId:j("company_id").notNull(),customerId:j("customer_id"),customerName:v("customer_name").notNull(),purchaseOrder:v("purchase_order").notNull(),customerEmail:v("customer_email"),customerPhone:v("customer_phone"),invoiceNumber:v("invoice_number"),destination:v("destination").notNull(),origin:v("origin").notNull(),product:v("product").notNull(),quantity:v("quantity").notNull(),unit:v("unit").notNull(),departureDate:R("departure_date"),estimatedDeliveryDate:R("estimated_delivery_date"),actualDeliveryDate:R("actual_delivery_date"),status:ke("status").notNull().default("pending"),carrier:v("carrier"),vehicleInfo:v("vehicle_info"),vehicleType:v("vehicle_type"),fuelType:v("fuel_type"),distance:v("distance"),carbonFootprint:v("carbon_footprint"),driverName:v("driver_name"),driverPhone:v("driver_phone"),comments:v("comments"),createdAt:R("created_at").defaultNow(),updatedAt:R("updated_at").defaultNow(),destinationLat:ae("destination_lat"),destinationLng:ae("destination_lng"),originLat:ae("origin_lat"),originLng:ae("origin_lng"),purchaseOrderNumber:v("purchase_order_number"),notificationEmails:Se("notification_emails")}),Ye=W(Z).omit({id:!0,createdAt:!0,updatedAt:!0}),ie=G("shipment_items",{id:H("id").primaryKey(),shipmentId:j("shipment_id").notNull(),product:v("product").notNull(),quantity:v("quantity").notNull(),unit:v("unit").notNull(),description:v("description"),createdAt:R("created_at").defaultNow()}),Jr=W(ie).omit({id:!0,createdAt:!0}),he=G("shipment_updates",{id:H("id").primaryKey(),shipmentId:j("shipment_id").notNull(),status:ke("status").notNull(),location:v("location"),comments:v("comments"),updatedBy:j("updated_by"),timestamp:R("timestamp").defaultNow()}),Hr=W(he).omit({id:!0,timestamp:!0}),O=G("notifications",{id:H("id").primaryKey(),title:v("title").notNull(),message:v("message").notNull(),type:v("type").notNull().default("info"),fromUserId:j("from_user_id").notNull(),toUserId:j("to_user_id"),companyId:j("company_id"),areaId:j("area_id"),priority:v("priority").notNull().default("normal"),read:ye("read").default(!1),createdAt:R("created_at").defaultNow(),readAt:R("read_at")}),Yr=W(O).omit({id:!0,createdAt:!0}),At=G("shipment_notifications",{id:H("id").primaryKey(),shipmentId:j("shipment_id").notNull(),emailTo:v("email_to").notNull(),subject:v("subject").notNull(),status:v("status").notNull(),sentAt:R("sent_at").defaultNow(),sentBy:j("sent_by").notNull(),shipmentStatus:ke("shipment_status").notNull(),errorMessage:v("error_message")}),Xr=W(At).omit({id:!0,sentAt:!0}),Xe=T.object({status:T.enum(["pending","in_transit","delayed","delivered","cancelled"]),sendNotification:T.boolean().default(!0),comments:T.string().optional(),location:T.string().optional(),invoiceNumber:T.string().optional()}),ce=G("job_profiles",{id:H("id").primaryKey(),areaId:j("area_id").notNull(),companyId:j("company_id").notNull(),title:v("title").notNull(),description:v("description").notNull(),mainActivities:Se("main_activities").notNull(),responsibilities:Se("responsibilities").notNull(),kpiInstructions:Se("kpi_instructions").notNull(),tips:Se("tips").notNull(),processes:Se("processes").notNull(),updateFrequency:Se("update_frequency").notNull(),createdAt:R("created_at").defaultNow(),updatedAt:R("updated_at").defaultNow()}),Qr=W(ce).omit({id:!0,createdAt:!0,updatedAt:!0}),Zr=T.object({id:T.number(),areaId:T.number(),companyId:T.number(),title:T.string(),description:T.string(),mainActivities:T.array(T.string()),responsibilities:T.array(T.string()),kpiInstructions:T.array(T.object({kpiName:T.string(),description:T.string(),updateFrequency:T.string(),instructions:T.string()})),tips:T.array(T.object({category:T.string(),tip:T.string()})),processes:T.array(T.object({name:T.string(),description:T.string(),steps:T.array(T.string())})),updateFrequency:T.object({daily:T.array(T.string()),weekly:T.array(T.string()),monthly:T.array(T.string())}),areaName:T.string(),companyName:T.string(),userKpis:T.array(T.object({id:T.number(),name:T.string(),target:T.string(),frequency:T.string()}))}),J=G("shipment_cycle_times",{id:H("id").primaryKey(),shipmentId:j("shipment_id").notNull().unique(),companyId:j("company_id").notNull(),createdAt:R("created_at").notNull(),pendingAt:R("pending_at"),inTransitAt:R("in_transit_at"),deliveredAt:R("delivered_at"),closedAt:R("closed_at"),hoursPendingToTransit:v("hours_pending_to_transit"),hoursTransitToDelivered:v("hours_transit_to_delivered"),hoursDeliveredToClosed:v("hours_delivered_to_closed"),hoursTotalCycle:v("hours_total_cycle"),hoursToDelivery:v("hours_to_delivery"),computedAt:R("computed_at").defaultNow(),updatedAt:R("updated_at").defaultNow()}),en=W(J).omit({id:!0,computedAt:!0,updatedAt:!0}),tn=T.object({period:T.string(),startDate:T.string(),endDate:T.string(),companyId:T.number().optional(),avgPendingToTransit:T.number().nullable(),avgTransitToDelivered:T.number().nullable(),avgDeliveredToClosed:T.number().nullable(),avgTotalCycle:T.number().nullable(),avgToDelivery:T.number().nullable(),totalShipments:T.number(),completedShipments:T.number()}),X=G("clients",{id:H("id").primaryKey(),name:v("name").notNull(),email:v("email").notNull(),phone:v("phone"),contactPerson:v("contact_person"),company:v("company"),address:v("address"),paymentTerms:j("payment_terms"),createdAt:R("created_at").defaultNow(),updatedAt:R("updated_at").defaultNow(),requiresReceipt:ye("requires_receipt").default(!0),reminderFrequency:j("reminder_frequency"),isActive:ye("is_active").default(!0),notes:v("notes"),companyId:j("company_id"),clientCode:v("client_code"),secondaryEmail:v("secondary_email"),city:v("city"),state:v("state"),postalCode:v("postal_code"),country:v("country").default("M\xE9xico"),emailNotifications:ye("email_notifications").default(!0),customerType:v("customer_type"),requiresPaymentComplement:ye("requires_payment_complement").default(!1)}),Qe=W(X).omit({id:!0,createdAt:!0,updatedAt:!0}),Nt=G("provider",{id:Lr("id").primaryKey().default(ze`gen_random_uuid()`),name:v("name").notNull(),email:v("email"),phone:v("phone"),contactName:v("contact_name"),notes:v("notes"),rating:ae("rating"),isActive:ye("is_active").notNull().default(!0),createdAt:R("created_at").notNull().defaultNow(),updatedAt:R("updated_at").notNull().defaultNow()}),Ze=W(Nt).omit({id:!0,createdAt:!0,updatedAt:!0}),_t=G("products",{id:H("id").primaryKey(),name:v("name").notNull(),companyId:j("company_id").notNull(),isActive:ye("is_active").notNull().default(!0),createdAt:R("created_at").notNull().defaultNow(),updatedAt:R("updated_at").notNull().defaultNow()}),rn=W(_t).omit({id:!0,createdAt:!0,updatedAt:!0}),Ct=Tt("voucher_status",["factura_pagada","pendiente_complemento","complemento_recibido","cierre_contable"]),et=G("scheduled_payments",{id:H("id").primaryKey(),companyId:j("company_id").notNull(),supplierName:v("supplier_name").notNull(),amount:ae("amount").notNull(),currency:v("currency").notNull().default("MXN"),dueDate:R("due_date").notNull(),status:v("status").notNull().default("pending"),reference:v("reference"),notes:v("notes"),paidAt:R("paid_at"),paidBy:j("paid_by"),createdBy:j("created_by").notNull(),createdAt:R("created_at").notNull().defaultNow(),updatedAt:R("updated_at").notNull().defaultNow()}),nn=W(et).omit({id:!0,createdAt:!0,updatedAt:!0}),$t=G("payment_receipts",{id:H("id").primaryKey(),paymentId:j("payment_id").references(()=>et.id,{onDelete:"cascade"}),fileName:v("file_name").notNull(),fileUrl:v("file_url").notNull(),fileType:v("file_type").notNull(),uploadedBy:j("uploaded_by").notNull(),uploadedAt:R("uploaded_at").notNull().defaultNow(),sentTo:v("sent_to").array(),sentAt:R("sent_at")}),on=W($t).omit({id:!0,uploadedAt:!0}),Rt=G("payment_complements",{id:H("id").primaryKey(),companyId:j("company_id").notNull(),clientName:v("client_name").notNull(),invoiceReference:v("invoice_reference").notNull(),amount:ae("amount").notNull(),currency:v("currency").notNull().default("MXN"),complementUrl:v("complement_url"),status:v("status").notNull().default("pending"),generatedAt:R("generated_at"),sentAt:R("sent_at"),createdBy:j("created_by").notNull(),createdAt:R("created_at").notNull().defaultNow()}),sn=W(Rt).omit({id:!0,createdAt:!0}),z=G("exchange_rates",{id:H("id").primaryKey(),date:R("date").notNull().defaultNow(),buyRate:ae("buy_rate").notNull(),sellRate:ae("sell_rate").notNull(),source:v("source"),notes:v("notes"),createdBy:j("created_by").notNull(),createdAt:R("created_at").notNull().defaultNow()}),an=W(z).omit({id:!0,createdAt:!0}),V=G("payment_vouchers",{id:H("id").primaryKey(),companyId:j("company_id").notNull(),clientId:j("client_id").notNull(),clientName:v("client_name").notNull(),scheduledPaymentId:j("scheduled_payment_id"),status:Ct("status").notNull().default("factura_pagada"),voucherFileUrl:v("voucher_file_url").notNull(),voucherFileName:v("voucher_file_name").notNull(),voucherFileType:v("voucher_file_type").notNull(),invoiceFileUrl:v("invoice_file_url"),invoiceFileName:v("invoice_file_name"),invoiceFileType:v("invoice_file_type"),complementFileUrl:v("complement_file_url"),complementFileName:v("complement_file_name"),complementFileType:v("complement_file_type"),extractedAmount:ae("extracted_amount"),extractedDate:R("extracted_date"),extractedBank:v("extracted_bank"),extractedReference:v("extracted_reference"),extractedCurrency:v("extracted_currency"),ocrConfidence:ae("ocr_confidence"),notes:v("notes"),uploadedBy:j("uploaded_by").notNull(),createdAt:R("created_at").notNull().defaultNow(),updatedAt:R("updated_at").notNull().defaultNow(),lastReminderSent:R("last_reminder_sent"),reminderCount:j("reminder_count").default(0)}),cn=W(V).omit({id:!0,createdAt:!0,updatedAt:!0})});var jt={};me(jt,{db:()=>h,pool:()=>Dt});import{Pool as ln,neonConfig as dn}from"@neondatabase/serverless";import{drizzle as un}from"drizzle-orm/neon-serverless";import mn from"ws";var Dt,h,de=se(()=>{"use strict";le();dn.webSocketConstructor=mn;if(!process.env.DATABASE_URL)throw new Error("DATABASE_URL must be set. Did you forget to provision a database?");Dt=new ln({connectionString:process.env.DATABASE_URL}),h=un({client:Dt,schema:Ke})});import{eq as x,and as te,desc as ne,isNotNull as Ut,isNull as pn,sql as tt,gte as kt}from"drizzle-orm";var Ce,bo,Mt=se(()=>{"use strict";le();de();Ce=class{constructor(){}async getUser(t){try{let[e]=await h.select().from(M).where(x(M.id,t));return e}catch(e){console.error("Error getting user:",e);return}}async getUserByEmail(t){try{let[e]=await h.select().from(M).where(x(M.email,t));return e}catch(e){console.error("Error getting user by email:",e);return}}async getUserByUsername(t){try{if(t.includes("@")){let[s]=await h.select().from(M).where(x(M.email,t));return s}return(await h.select().from(M)).find(s=>{let c=s.email.toLowerCase().split("@");return c.length>0&&c[0]===t.toLowerCase()})}catch(e){console.error("Error getting user by username:",e);return}}async createUser(t){try{let[e]=await h.insert(M).values(t).returning();return e}catch(e){throw console.error("Error creating user:",e),e}}async updateUser(t,e){try{let[s]=await h.update(M).set(e).where(x(M.id,t)).returning();return s}catch(s){console.error("Error updating user:",s);return}}async getUsers(){try{return await h.select().from(M)}catch(t){return console.error("Error getting users:",t),[]}}async deleteUser(t){try{let e=await h.delete(M).where(x(M.id,t));return e.rowCount!==null&&e.rowCount>0}catch(e){return console.error("Error deleting user:",e),!1}}async getCompany(t){try{let[e]=await h.select().from(L).where(x(L.id,t));return e}catch(e){console.error("Error getting company:",e);return}}async getCompanies(){try{return await h.select().from(L)}catch(t){return console.error("Error getting companies:",t),[]}}async createCompany(t){try{let[e]=await h.insert(L).values(t).returning();return e}catch(e){throw console.error("Error creating company:",e),e}}async updateCompany(t,e){try{let[s]=await h.update(L).set(e).where(x(L.id,t)).returning();return s}catch(s){console.error("Error updating company:",s);return}}async getArea(t){try{let[e]=await h.select().from(F).where(x(F.id,t));return e}catch(e){console.error("Error getting area:",e);return}}async getAreas(){try{return await h.select().from(F)}catch(t){return console.error("Error getting areas:",t),[]}}async getAreasByCompany(t){try{return await h.select().from(F).where(x(F.companyId,t))}catch(e){return console.error("Error getting areas by company:",e),[]}}async createArea(t){try{let[e]=await h.insert(F).values(t).returning();return e}catch(e){throw console.error("Error creating area:",e),e}}async updateArea(t,e){try{let[s]=await h.update(F).set(e).where(x(F.id,t)).returning();return s}catch(s){console.error("Error updating area:",s);return}}async getKpi(t){try{let[e]=await h.select().from(_).where(x(_.id,t));return e}catch(e){console.error("Error getting KPI:",e);return}}async getKpis(){try{return await h.select().from(_)}catch(t){return console.error("Error getting KPIs:",t),[]}}async getKpisByCompany(t){try{return await h.select().from(_).where(x(_.companyId,t))}catch(e){return console.error("Error getting KPIs by company:",e),[]}}async getKpisByArea(t){try{return await h.select().from(_).where(x(_.areaId,t))}catch(e){return console.error("Error getting KPIs by area:",e),[]}}async getKpisByCompanyAndArea(t,e){try{return await h.select().from(_).where(te(x(_.companyId,t),x(_.areaId,e)))}catch(s){return console.error("Error getting KPIs by company and area:",s),[]}}async createKpi(t){try{let[e]=await h.insert(_).values(t).returning();return e}catch(e){throw console.error("Error creating KPI:",e),e}}async updateKpi(t,e){try{let[s]=await h.update(_).set(e).where(x(_.id,t)).returning();return s}catch(s){console.error("Error updating KPI:",s);return}}async deleteKpi(t){try{return await h.delete(N).where(x(N.kpiId,t)),((await h.delete(_).where(x(_.id,t))).rowCount??0)>0}catch(e){return console.error("Error deleting KPI:",e),!1}}async getKpiValue(t){try{let[e]=await h.select().from(N).where(x(N.id,t));return e}catch(e){console.error("Error getting KPI value:",e);return}}async getKpiValues(){try{return await h.select().from(N)}catch(t){return console.error("Error getting KPI values:",t),[]}}async getKpiValuesByKpi(t){try{return await h.select().from(N).where(x(N.kpiId,t))}catch(e){return console.error("Error getting KPI values by KPI:",e),[]}}async getKpiValuesByUser(t){try{return await h.select().from(N).where(x(N.userId,t))}catch(e){return console.error("Error getting KPI values by user:",e),[]}}async deleteKpiValuesByUser(t,e){try{return((await h.delete(N).where(te(x(N.userId,t),x(N.kpiId,e)))).rowCount??0)>0}catch(s){return console.error("Error deleting KPI values by user:",s),!1}}async getLatestKpiValues(t,e){try{return await h.select().from(N).where(x(N.kpiId,t)).orderBy(ne(N.date)).limit(e)}catch(s){return console.error("Error getting latest KPI values:",s),[]}}async createKpiValue(t){try{let e={...t,date:new Date},[s]=await h.insert(N).values(e).returning();return s}catch(e){throw console.error("Error creating KPI value:",e),e}}async getActionPlan(t){try{let[e]=await h.select().from(ge).where(x(ge.id,t));return e}catch(e){console.error("Error getting action plan:",e);return}}async getActionPlansByKpi(t){try{return await h.select().from(ge).where(x(ge.kpiId,t))}catch(e){return console.error("Error getting action plans by KPI:",e),[]}}async createActionPlan(t){try{let[e]=await h.insert(ge).values(t).returning();return e}catch(e){throw console.error("Error creating action plan:",e),e}}async updateActionPlan(t,e){try{let[s]=await h.update(ge).set(e).where(x(ge.id,t)).returning();return s}catch(s){console.error("Error updating action plan:",s);return}}async getShipment(t){try{let[e]=await h.select().from(Z).where(x(Z.id,t));return e}catch(e){console.error("Error getting shipment:",e);return}}async getShipmentByTrackingCode(t){try{let[e]=await h.select().from(Z).where(x(Z.trackingCode,t));return e}catch(e){console.error("Error getting shipment by tracking code:",e);return}}async getShipments(){try{let t=await h.select().from(Z);return await Promise.all(t.map(async s=>{let c=await this.getShipmentItems(s.id);return{...s,items:c}}))}catch(t){return console.error("Error getting shipments:",t),[]}}async getShipmentsByCompany(t){try{let e=await h.select().from(Z).where(x(Z.companyId,t));return await Promise.all(e.map(async c=>{let l=await this.getShipmentItems(c.id);return{...c,items:l}}))}catch(e){return console.error("Error getting shipments by company:",e),[]}}async createShipment(t){try{let[e]=await h.insert(Z).values(t).returning();return e}catch(e){throw console.error("Error creating shipment:",e),e}}async updateShipment(t,e){try{let[s]=await h.update(Z).set({...e,updatedAt:new Date}).where(x(Z.id,t)).returning();return s}catch(s){console.error("Error updating shipment:",s);return}}async getShipmentItems(t){try{return await h.select().from(ie).where(x(ie.shipmentId,t))}catch(e){return console.error("Error getting shipment items:",e),[]}}async createShipmentItem(t){try{let[e]=await h.insert(ie).values(t).returning();return e}catch(e){throw console.error("Error creating shipment item:",e),e}}async createShipmentItems(t){try{return t.length===0?[]:await h.insert(ie).values(t).returning()}catch(e){throw console.error("Error creating shipment items:",e),e}}async updateShipmentItem(t,e){try{let[s]=await h.update(ie).set(e).where(x(ie.id,t)).returning();return s}catch(s){console.error("Error updating shipment item:",s);return}}async deleteShipmentItem(t){try{return await h.delete(ie).where(x(ie.id,t)),!0}catch(e){return console.error("Error deleting shipment item:",e),!1}}async getShipmentUpdate(t){try{let[e]=await h.select().from(he).where(x(he.id,t));return e}catch(e){console.error("Error getting shipment update:",e);return}}async getShipmentUpdates(t){try{return await h.select().from(he).where(x(he.shipmentId,t)).orderBy(ne(he.timestamp))}catch(e){return console.error("Error getting shipment updates:",e),[]}}async createShipmentUpdate(t){try{let[e]=await h.insert(he).values(t).returning();return e}catch(e){throw console.error("Error creating shipment update:",e),e}}async getNotification(t){try{let[e]=await h.select().from(O).where(x(O.id,t));return e}catch(e){console.error("Error getting notification:",e);return}}async getNotificationsForUser(t){try{return await h.select({id:O.id,title:O.title,message:O.message,type:O.type,priority:O.priority,read:O.read,createdAt:O.createdAt,readAt:O.readAt,fromUserId:O.fromUserId,toUserId:O.toUserId,fromUserName:M.name,fromUserEmail:M.email}).from(O).leftJoin(M,x(O.fromUserId,M.id)).where(x(O.toUserId,t)).orderBy(ne(O.createdAt))}catch(e){return console.error("Error getting notifications for user:",e),[]}}async createNotification(t){try{let[e]=await h.insert(O).values(t).returning();return e}catch(e){throw console.error("Error creating notification:",e),e}}async markNotificationAsRead(t,e){try{let[s]=await h.update(O).set({read:!0,readAt:new Date}).where(te(x(O.id,t),x(O.toUserId,e))).returning();return s}catch(s){console.error("Error marking notification as read:",s);return}}async deleteNotification(t,e){try{return((await h.delete(O).where(te(x(O.id,t),x(O.toUserId,e)))).rowCount??0)>0}catch(s){return console.error("Error deleting notification:",s),!1}}async getLastKpiUpdateByUser(t){try{let[e]=await h.select({kpiName:_.name,updateDate:N.date}).from(N).leftJoin(_,x(N.kpiId,_.id)).where(x(N.updatedBy,t)).orderBy(ne(N.date)).limit(1);return e}catch(e){console.error("Error getting last KPI update by user:",e);return}}async getTeamActivitySummary(){try{let t=await h.select().from(M),e=[];for(let s of t){let c=await this.getLastKpiUpdateByUser(s.id);e.push({userId:s.id,lastLogin:s.lastLogin,lastKpiUpdate:c||null})}return e}catch(t){return console.error("Error getting team activity summary:",t),[]}}async getJobProfile(t){try{let[e]=await h.select().from(ce).where(x(ce.id,t));return e}catch(e){console.error("Error getting job profile:",e);return}}async getJobProfileByUserArea(t,e){try{let[s]=await h.select().from(ce).where(te(x(ce.areaId,t),x(ce.companyId,e)));return s}catch(s){console.error("Error getting job profile by area:",s);return}}async getJobProfileWithDetails(t){try{console.log(`[JobProfile] Getting profile for user ID: ${t}`);let e=await this.getUser(t);if(console.log("[JobProfile] User found:",e),!e||!e.areaId||!e.companyId){console.log(`[JobProfile] User or area/company missing for user ${t}`);return}let s=await this.getJobProfileByUserArea(e.areaId,e.companyId);if(console.log("[JobProfile] Profile found:",s),!s){console.log(`[JobProfile] No profile found for area ${e.areaId}, company ${e.companyId}`);return}let c=await this.getArea(e.areaId),l=await this.getCompany(e.companyId),m=await this.getUserKpis(t),p={id:s.id,areaId:s.areaId,companyId:s.companyId,title:s.title,description:s.description,mainActivities:s.mainActivities,responsibilities:s.responsibilities,kpiInstructions:s.kpiInstructions,tips:s.tips,processes:s.processes,updateFrequency:s.updateFrequency,areaName:c?.name||"",companyName:l?.name||"",userKpis:m.map(f=>({id:f.id,name:f.name,target:f.target,frequency:f.frequency}))};return console.log("[JobProfile] Returning profile with details:",p),p}catch(e){console.error("Error getting job profile with details:",e);return}}async createJobProfile(t){try{let[e]=await h.insert(ce).values(t).returning();return e}catch(e){throw console.error("Error creating job profile:",e),e}}async updateJobProfile(t,e){try{let[s]=await h.update(ce).set(e).where(x(ce.id,t)).returning();return s}catch(s){console.error("Error updating job profile:",s);return}}async getUserKpis(t){try{let e=await this.getUser(t);return!e||!e.areaId||!e.companyId?[]:await h.select().from(_).where(te(x(_.areaId,e.areaId),x(_.companyId,e.companyId)))}catch(e){return console.error("Error getting user KPIs:",e),[]}}async getKPIOverview(){try{let t=await h.select({userId:M.id,userName:M.name,userEmail:M.email,areaName:F.name,companyName:L.name,kpiId:_.id,kpiName:_.name,kpiTarget:_.target,kpiFrequency:_.frequency,kpiValue:N.value,lastUpdate:N.date}).from(M).innerJoin(F,x(M.areaId,F.id)).innerJoin(L,x(M.companyId,L.id)).innerJoin(_,te(x(_.areaId,F.id),x(_.companyId,L.id))).leftJoin(N,x(N.kpiId,_.id)).where(te(Ut(M.areaId),Ut(M.companyId))).orderBy(ne(N.date)),e=new Map;for(let s of t){let c=`${s.userId}-${s.kpiId}`;if(!e.has(c)){let l="non-compliant";if(s.kpiValue&&s.kpiTarget){let m=i=>{let o=i.replace(/[^\d.-]/g,"");return parseFloat(o)},p=m(s.kpiValue),f=m(s.kpiTarget);!isNaN(p)&&!isNaN(f)&&(this.isLowerBetterKPI(s.kpiName)?p<=f?l="compliant":p<=f*1.1?l="alert":l="non-compliant":p>=f?l="compliant":p>=f*.9?l="alert":l="non-compliant")}e.set(c,{...s,status:l,trend:"stable"})}}return Array.from(e.values())}catch(t){return console.error("Error getting KPI overview:",t),[]}}isLowerBetterKPI(t){let e=["d\xEDas de cobro","d\xEDas de pago","tiempo de entrega","huella de carbono","costos","gastos","tiempo de respuesta","defectos","errores","quejas","devoluciones","rotaci\xF3n","tiempo de inactividad"],s=t.toLowerCase();return e.some(c=>s.includes(c))}async getKPIHistory(t,e=12){try{let s=await h.select({id:N.id,value:N.value,date:N.date,period:N.period,compliancePercentage:N.compliancePercentage,status:N.status,comments:N.comments,updatedBy:N.updatedBy}).from(N).where(te(x(N.kpiId,t),pn(N.userId))).orderBy(ne(N.date)).limit(e);return console.log(`[getKPIHistory] KPI ${t} history:`,s),s}catch(s){return console.error("Error getting KPI history:",s),[]}}async getUserKPIHistory(t,e=6){try{let s=new Date;s.setMonth(s.getMonth()-e);let c=await h.select({kpiId:N.kpiId,kpiName:_.name,kpiTarget:_.target,kpiUnit:_.unit,kpiFrequency:_.frequency,companyId:_.companyId,companyName:L.name,areaName:F.name,valueId:N.id,value:N.value,date:N.date,period:N.period,compliancePercentage:N.compliancePercentage,status:N.status,comments:N.comments}).from(N).innerJoin(_,x(N.kpiId,_.id)).innerJoin(L,x(_.companyId,L.id)).innerJoin(F,x(_.areaId,F.id)).where(te(x(N.userId,t),kt(N.date,s))).orderBy(ne(N.date));return console.log(`[getUserKPIHistory] User ${t} history (${c.length} records) desde ${s.toISOString()}`),c}catch(s){return console.error("Error getting user KPI history:",s),[]}}async getKPIHistoryByUsers(t,e=6){try{let s=new Date;s.setMonth(s.getMonth()-e);let[c]=await h.select({id:_.id,name:_.name,target:_.target,unit:_.unit,frequency:_.frequency,companyId:_.companyId,companyName:L.name,areaId:_.areaId,areaName:F.name}).from(_).innerJoin(L,x(_.companyId,L.id)).innerJoin(F,x(_.areaId,F.id)).where(x(_.id,t));if(!c)return null;let l=await h.select({valueId:N.id,userId:M.id,userName:M.name,userEmail:M.email,value:N.value,date:N.date,period:N.period,compliancePercentage:N.compliancePercentage,status:N.status,comments:N.comments}).from(N).innerJoin(M,x(N.userId,M.id)).where(te(x(N.kpiId,t),kt(N.date,s))).orderBy(ne(N.date)),m=new Map;for(let p of l)m.has(p.userId)||m.set(p.userId,{userId:p.userId,userName:p.userName,userEmail:p.userEmail,values:[]}),m.get(p.userId).values.push({valueId:p.valueId,value:p.value,date:p.date,period:p.period,compliancePercentage:p.compliancePercentage,status:p.status,comments:p.comments});return console.log(`[getKPIHistoryByUsers] KPI ${t} history: ${m.size} users, ${l.length} total records desde ${s.toISOString()}`),{kpi:c,users:Array.from(m.values())}}catch(s){return console.error("Error getting KPI history by users:",s),null}}async getShipmentCycleTime(t){try{let[e]=await h.select().from(J).where(x(J.shipmentId,t));return e}catch(e){console.error("Error getting shipment cycle time:",e);return}}async upsertShipmentCycleTime(t){try{let[e]=await h.select().from(J).where(x(J.shipmentId,t.shipmentId));if(e){let[s]=await h.update(J).set({...t,updatedAt:new Date}).where(x(J.shipmentId,t.shipmentId)).returning();return s}else{let[s]=await h.insert(J).values(t).returning();return s}}catch(e){throw console.error("Error upserting shipment cycle time:",e),e}}async recalculateShipmentCycleTime(t){try{let e=await this.getShipment(t);if(!e)return;let s=await this.getShipmentUpdates(t),c=null,l=null,m=null,p=null;for(let g of s.reverse())switch(g.status){case"pending":c||(c=g.timestamp);break;case"in_transit":l||(l=g.timestamp);break;case"delivered":m||(m=g.timestamp);break;case"cancelled":p||(p=g.timestamp);break}let f=(g,I)=>!g||!I?null:((I.getTime()-g.getTime())/(1e3*60*60)).toFixed(2),i=f(c,l),o=f(l,m),r=f(m,p),n=f(e.createdAt,p),d=f(e.createdAt,m),u={shipmentId:e.id,companyId:e.companyId,createdAt:e.createdAt,pendingAt:c,inTransitAt:l,deliveredAt:m,closedAt:p,hoursPendingToTransit:i,hoursTransitToDelivered:o,hoursDeliveredToClosed:r,hoursTotalCycle:n,hoursToDelivery:d};return await this.upsertShipmentCycleTime(u)}catch(e){console.error("Error recalculating shipment cycle time:",e);return}}async getAggregateCycleTimes(t,e,s){try{let c=h.select({hoursPendingToTransit:J.hoursPendingToTransit,hoursTransitToDelivered:J.hoursTransitToDelivered,hoursDeliveredToClosed:J.hoursDeliveredToClosed,hoursTotalCycle:J.hoursTotalCycle,hoursToDelivery:J.hoursToDelivery,closedAt:J.closedAt,createdAt:J.createdAt,companyId:J.companyId}).from(J),l=[];if(t&&l.push(x(J.companyId,t)),e&&s){let u=new Date(e),g=new Date(s);l.push(tt`${J.createdAt} >= ${u} AND ${J.createdAt} <= ${g}`)}l.length>0&&(c=c.where(te(...l)));let m=await c;if(m.length===0)return[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:null,avgTransitToDelivered:null,avgDeliveredToClosed:null,avgTotalCycle:null,avgToDelivery:null,totalShipments:0,completedShipments:0}];let p=m.filter(u=>u.hoursPendingToTransit).map(u=>parseFloat(u.hoursPendingToTransit)),f=m.filter(u=>u.hoursTransitToDelivered).map(u=>parseFloat(u.hoursTransitToDelivered)),i=m.filter(u=>u.hoursDeliveredToClosed).map(u=>parseFloat(u.hoursDeliveredToClosed)),o=m.filter(u=>u.hoursTotalCycle).map(u=>parseFloat(u.hoursTotalCycle)),r=m.filter(u=>u.hoursToDelivery).map(u=>parseFloat(u.hoursToDelivery)),n=u=>u.length>0?u.reduce((g,I)=>g+I,0)/u.length:null,d=m.filter(u=>u.closedAt).length;return[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:n(p),avgTransitToDelivered:n(f),avgDeliveredToClosed:n(i),avgTotalCycle:n(o),avgToDelivery:n(r),totalShipments:m.length,completedShipments:d}]}catch(c){return console.error("Error getting aggregate cycle times:",c),[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:null,avgTransitToDelivered:null,avgDeliveredToClosed:null,avgTotalCycle:null,avgToDelivery:null,totalShipments:0,completedShipments:0}]}}async createShipmentNotification(t){try{return await this.createNotification({...t,type:"shipment"})}catch(e){throw console.error("Error creating shipment notification:",e),e}}async updateShipmentNotificationStatus(t,e,s){try{let[c]=await h.update(O).set({read:e==="sent",readAt:e==="sent"?new Date:null}).where(x(O.id,t)).returning();return c}catch(c){throw console.error("Error updating shipment notification status:",c),c}}async getShipmentNotificationsByShipment(t){try{return await h.select().from(O).where(tt`${O.message} LIKE '%shipment-${t}%' OR ${O.type} = 'shipment'`).orderBy(ne(O.createdAt))}catch(e){return console.error("Error getting shipment notifications:",e),[]}}async createActivationToken(t){try{let e=Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)+Date.now().toString(36),s=new Date;s.setHours(s.getHours()+24);let c={token:e,email:t,expiresAt:s,used:!1},[l]=await h.insert(pe).values(c).returning();return l}catch(e){throw console.error("Error creating activation token:",e),e}}async getActivationToken(t){try{let[e]=await h.select().from(pe).where(x(pe.token,t));return e}catch(e){console.error("Error getting activation token:",e);return}}async markTokenAsUsed(t){try{return((await h.update(pe).set({used:!0}).where(x(pe.token,t))).rowCount??0)>0}catch(e){return console.error("Error marking token as used:",e),!1}}async deleteExpiredTokens(){try{await h.delete(pe).where(tt`${pe.expiresAt} < NOW()`)}catch(t){console.error("Error deleting expired tokens:",t)}}async getClient(t){try{let[e]=await h.select().from(X).where(x(X.id,t));return e}catch(e){console.error("Error getting client:",e);return}}async getClients(){try{return await h.select().from(X).orderBy(X.name)}catch(t){return console.error("Error getting clients:",t),[]}}async getClientsByCompany(t){try{return await h.select().from(X).where(x(X.companyId,t)).orderBy(X.name)}catch(e){return console.error("Error getting clients by company:",e),[]}}async createClient(t){try{let[e]=await h.insert(X).values(t).returning();return e}catch(e){throw console.error("Error creating client:",e),e}}async updateClient(t,e){try{let[s]=await h.update(X).set({...e,updatedAt:new Date}).where(x(X.id,t)).returning();return s}catch(s){console.error("Error updating client:",s);return}}async getPaymentVoucher(t){try{let[e]=await h.select().from(V).where(x(V.id,t));return e}catch(e){console.error("Error getting payment voucher:",e);return}}async getPaymentVouchers(){try{return await h.select().from(V).orderBy(ne(V.createdAt))}catch(t){return console.error("Error getting payment vouchers:",t),[]}}async getPaymentVouchersByCompany(t){try{return await h.select().from(V).where(x(V.companyId,t)).orderBy(ne(V.createdAt))}catch(e){return console.error("Error getting payment vouchers by company:",e),[]}}async getPaymentVouchersByStatus(t,e){try{return e?await h.select().from(V).where(te(x(V.status,t),x(V.companyId,e))).orderBy(ne(V.createdAt)):await h.select().from(V).where(x(V.status,t)).orderBy(ne(V.createdAt))}catch(s){return console.error("Error getting payment vouchers by status:",s),[]}}async createPaymentVoucher(t){try{let[e]=await h.insert(V).values(t).returning();return e}catch(e){throw console.error("Error creating payment voucher:",e),e}}async createScheduledPayment(t){return console.log("Creating scheduled payment:",t),{id:Date.now(),...t}}async updatePaymentVoucher(t,e){try{let[s]=await h.update(V).set({...e,updatedAt:new Date}).where(x(V.id,t)).returning();return s}catch(s){console.error("Error updating payment voucher:",s);return}}async updatePaymentVoucherStatus(t,e){try{let[s]=await h.update(V).set({status:e,updatedAt:new Date}).where(x(V.id,t)).returning();return s}catch(s){console.error("Error updating payment voucher status:",s);return}}async getShipmentsByStatus(t){try{return await h.select().from(Z).where(x(Z.status,t))}catch(e){return console.error("Error getting shipments by status:",e),[]}}async getShipmentsByCompanyAndStatus(t,e){try{return await h.select().from(Z).where(te(x(Z.companyId,t),x(Z.status,e)))}catch(s){return console.error("Error getting shipments by company and status:",s),[]}}async getShipmentUpdatesByShipment(t){try{return[]}catch(e){return console.error("Error getting shipment updates:",e),[]}}async getShipmentNotification(t){try{return null}catch(e){return console.error("Error getting shipment notification:",e),null}}},bo=new Ce});var Kt={};me(Kt,{MemStorage:()=>rt,storage:()=>E});var rt,E,$e=se(()=>{"use strict";Mt();rt=class{users;companies;areas;kpis;kpiValues;actionPlans;shipments;shipmentUpdates;shipmentNotifications;notifications;jobProfiles;shipmentCycleTimes;userId;companyId;areaId;kpiId;kpiValueId;actionPlanId;shipmentId;shipmentUpdateId;shipmentNotificationId;notificationId;jobProfileId;cycleTimeId;constructor(){this.users=new Map,this.companies=new Map,this.areas=new Map,this.kpis=new Map,this.kpiValues=new Map,this.actionPlans=new Map,this.shipments=new Map,this.shipmentUpdates=new Map,this.shipmentNotifications=new Map,this.notifications=new Map,this.jobProfiles=new Map,this.shipmentCycleTimes=new Map,this.userId=1,this.companyId=1,this.areaId=1,this.kpiId=1,this.kpiValueId=1,this.actionPlanId=1,this.shipmentId=1,this.shipmentUpdateId=1,this.shipmentNotificationId=1,this.notificationId=1,this.jobProfileId=1,this.cycleTimeId=1,this.initializeData(),this.initializeShipmentData()}initializeData(){let t={id:this.userId++,name:"Admin",email:"admin@econova.com",password:"password123",role:"admin",companyId:null,areaId:null,lastLogin:new Date};this.users.set(t.id,t);let e={id:this.userId++,name:"Omar Navarro",email:"omar.navarro",password:"ventas2025",role:"user",companyId:null,areaId:null,lastLogin:null};this.users.set(e.id,e);let s={id:this.userId++,name:"Mario Reynoso",email:"mario.reynoso",password:"finanzas2025",role:"user",companyId:null,areaId:null,lastLogin:null};this.users.set(s.id,s);let c={id:this.userId++,name:"Thalia Rodriguez",email:"thalia.rodriguez",password:"logistica2025",role:"user",companyId:null,areaId:null,lastLogin:null};this.users.set(c.id,c);let l={id:this.companyId++,name:"Dura International",description:"Empresa l\xEDder en la industria qu\xEDmica",sector:"Qu\xEDmica",logo:null,createdAt:new Date};this.companies.set(l.id,l);let m={id:this.companyId++,name:"Grupo Orsega",description:"Empresa especializada en productos qu\xEDmicos",sector:"Qu\xEDmica",logo:null,createdAt:new Date};this.companies.set(m.id,m);let f=["Ventas","Log\xEDstica","Contabilidad y Finanzas"],i=new Map,o=new Map;f.forEach(r=>{let n={id:this.areaId++,name:r,description:`\xC1rea de ${r} para Dura International`,companyId:l.id};this.areas.set(n.id,n),i.set(r,n)}),f.forEach(r=>{let n={id:this.areaId++,name:r,description:`\xC1rea de ${r} para Grupo Orsega`,companyId:m.id};this.areas.set(n.id,n),o.set(r,n)}),i.has("Contabilidad y Finanzas")&&o.has("Contabilidad y Finanzas")&&[{name:"Precisi\xF3n en estados financieros",description:"Mide la exactitud de los estados financieros generados. Objetivo: cero errores en emisi\xF3n de informaci\xF3n financiera. Limitar las salvedades a menos de 5 al mes.",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"Conteo de errores y salvedades. Los datos son procesados por Julio.",responsible:"Mario Reynoso"},{name:"Velocidad de rotaci\xF3n de cuentas por cobrar",description:"Mide el tiempo promedio para cobrar cuentas pendientes. Considerando que para Orsega un cliente clave representa el 80% de ventas.",unit:"d\xEDas",duraTarget:"45 d\xEDas",orsegaTarget:"60 d\xEDas",frequency:"monthly",calculationMethod:"Promedio de d\xEDas para cobrar",responsible:"Mario Reynoso"},{name:"Cumplimiento de obligaciones fiscales",description:"Monitoreo mediante checklist para la presentaci\xF3n de impuestos. Objetivo de cumplimiento 100% para evitar confusiones.",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"Checklist de obligaciones fiscales. Mario enviar\xE1 el WordCat con la informaci\xF3n a Daniel.",responsible:"Mario Reynoso"},{name:"Facturaci\xF3n sin errores",description:"Mide la precisi\xF3n en la generaci\xF3n de facturas",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"weekly",calculationMethod:"(Facturas sin errores / Total de facturas) x 100",responsible:"Mario Reynoso"}].forEach(n=>{let d={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.duraTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:i.get("Contabilidad y Finanzas").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),[{value:n.name.includes("Precisi\xF3n")?"98.5%":n.name.includes("Rotaci\xF3n")?"48":n.name.includes("Cumplimiento")?"100%":n.name.includes("Facturaci\xF3n")?"97%":"+2.5%",period:"Q1 2023",status:n.name.includes("Precisi\xF3n")||n.name.includes("Rotaci\xF3n")?"alert":"complies",compliancePercentage:n.name.includes("Precisi\xF3n")?"95%":n.name.includes("Rotaci\xF3n")?"93.8%":"100%",comments:n.name.includes("Rotaci\xF3n")?"Ligeramente por encima del objetivo (45 d\xEDas). Mejorando plazo de cobro.":"Valor registrado para el periodo"},{value:n.name.includes("Precisi\xF3n")?"99.2%":n.name.includes("Rotaci\xF3n")?"42":n.name.includes("Cumplimiento")?"100%":n.name.includes("Facturaci\xF3n")?"98%":"+3.1%",period:"Q2 2023",status:(n.name.includes("Rotaci\xF3n"),"complies"),compliancePercentage:n.name.includes("Rotaci\xF3n")?"107.1%":"100%",comments:n.name.includes("Rotaci\xF3n")?"Por debajo del objetivo (45 d\xEDas). Excelente gesti\xF3n de cobros.":"Mejora respecto al periodo anterior"}].forEach(b=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)});let g={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.orsegaTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:o.get("Contabilidad y Finanzas").id,companyId:m.id,invertedMetric:!1};this.kpis.set(g.id,g),[{value:n.name.includes("Precisi\xF3n")?"99.0%":n.name.includes("Rotaci\xF3n")?"65":n.name.includes("Cumplimiento")?"98%":n.name.includes("Facturaci\xF3n")?"95%":"+1.8%",period:"Q1 2023",status:n.name.includes("Cumplimiento")||n.name.includes("Rotaci\xF3n")||n.name.includes("Facturaci\xF3n")?"alert":"complies",compliancePercentage:n.name.includes("Cumplimiento")?"98%":n.name.includes("Rotaci\xF3n")?"92%":n.name.includes("Facturaci\xF3n")?"95%":"100%",comments:n.name.includes("Rotaci\xF3n")?"Por encima del objetivo. Cliente clave (80% de ventas) paga a 65 d\xEDas":"Valor registrado para el periodo"},{value:n.name.includes("Precisi\xF3n")?"99.5%":n.name.includes("Rotaci\xF3n")?"58":n.name.includes("Cumplimiento")?"100%":n.name.includes("Facturaci\xF3n")?"98%":"+2.5%",period:"Q2 2023",status:(n.name.includes("Rotaci\xF3n"),"complies"),compliancePercentage:"100%",comments:n.name.includes("Rotaci\xF3n")?"Mejora en la rotaci\xF3n. Dentro del objetivo de 60 d\xEDas":"Mejora respecto al periodo anterior"}].forEach(b=>{let y={id:this.kpiValueId++,kpiId:g.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)})}),i.has("Compras")&&o.has("Compras")&&[{name:"Nivel de inventario \xF3ptimo",description:"Mantener los niveles \xF3ptimos de inventario para operaciones",unit:"unidades",duraTarget:"M\xE1x. 2 meses secantes",orsegaTarget:"M\xE1x. 6 ton metilato",frequency:"monthly",calculationMethod:"Medici\xF3n directa de inventario vs. objetivo",responsible:"Roberto M\xE9ndez"},{name:"Tiempo de respuesta a Ventas",description:"Mide el tiempo de respuesta a solicitudes de Ventas",unit:"horas",duraTarget:"M\xE1x. 4 horas",orsegaTarget:"M\xE1x. 4 horas",frequency:"weekly",calculationMethod:"Tiempo promedio de respuesta",responsible:"Elena Morales"},{name:"Tiempo de entrega de proveedores",description:"Mide el cumplimiento de tiempos de entrega de proveedores",unit:"%",duraTarget:"95% cumplimiento",orsegaTarget:"95% cumplimiento",frequency:"monthly",calculationMethod:"(Entregas a tiempo / Total de entregas) x 100",responsible:"Miguel \xC1ngel Soto"},{name:"Optimizaci\xF3n de costos de compra",description:"Mide la reducci\xF3n de costos en compras",unit:"%",duraTarget:"< 5%",orsegaTarget:"< 5%",frequency:"quarterly",calculationMethod:"(Costo actual - Costo previo) / Costo previo x 100",responsible:"Josefina Ram\xEDrez"}].forEach(n=>{let d={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.duraTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:i.get("Compras").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),[{value:n.name.includes("Nivel")?"1.8 meses":n.name.includes("Tiempo de respuesta")?"4.5 horas":n.name.includes("Tiempo de entrega")?"92%":"-3.5%",period:"Q1 2023",status:n.name.includes("Tiempo de respuesta")||n.name.includes("Tiempo de entrega")?"alert":"complies",compliancePercentage:n.name.includes("Tiempo de respuesta")?"90%":n.name.includes("Tiempo de entrega")?"92%":"100%",comments:"Valor registrado para el periodo"}].forEach(b=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)});let g={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.orsegaTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:o.get("Compras").id,companyId:m.id,invertedMetric:!1};this.kpis.set(g.id,g),[{value:n.name.includes("Nivel")?"5.8 ton":n.name.includes("Tiempo de respuesta")?"3.8 horas":n.name.includes("Tiempo de entrega")?"96%":"-4.2%",period:"Q1 2023",status:n.name.includes("Nivel")?"alert":"complies",compliancePercentage:n.name.includes("Nivel")?"95%":"100%",comments:"Valor registrado para el periodo"}].forEach(b=>{let y={id:this.kpiValueId++,kpiId:g.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)})}),i.has("Ventas")&&o.has("Ventas")&&[{name:"Volumen de ventas alcanzado",description:"Mide el volumen total de ventas mensual en kilogramos",unit:"KG",duraTarget:"55,620 KG",orsegaTarget:"775,735 unidades",frequency:"monthly",calculationMethod:"Suma del volumen de todas las ventas en KG/unidades",responsible:"Omar Navarro"},{name:"Porcentaje de crecimiento en ventas",description:"Mide el crecimiento en ventas respecto al a\xF1o anterior",unit:"%",duraTarget:"+10% vs a\xF1o anterior",orsegaTarget:"+10% vs a\xF1o anterior",frequency:"monthly",calculationMethod:"((Ventas actuales - Ventas a\xF1o anterior) / Ventas a\xF1o anterior) x 100",responsible:"Isabella Vega"},{name:"Nuevos clientes adquiridos",description:"Mide la adquisici\xF3n de nuevos clientes",unit:"clientes",duraTarget:"2 nuevos/mes",orsegaTarget:"2 nuevos/mes",frequency:"monthly",calculationMethod:"Conteo de nuevos clientes",responsible:"Omar Navarro"},{name:"Tasa de retenci\xF3n de clientes",description:"Mide el porcentaje de clientes que permanecen activos",unit:"%",duraTarget:"90%",orsegaTarget:"90%",frequency:"monthly",calculationMethod:"(Clientes activos que renuevan / Total de clientes activos) x 100",responsible:"Alejandra Dur\xE1n"},{name:"Satisfacci\xF3n interdepartamental",description:"Eval\xFAa la colaboraci\xF3n con otros departamentos",unit:"cualitativo",duraTarget:"Retroalimentaci\xF3n continua",orsegaTarget:"Retroalimentaci\xF3n continua",frequency:"quarterly",calculationMethod:"Encuestas de satisfacci\xF3n interdepartamental",responsible:"Sergio Montero"}].forEach(n=>{let d={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.duraTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:i.get("Ventas").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),(n.name.includes("Volumen")?[{value:"59,453 KG",period:"Enero 2025",status:"complies",compliancePercentage:"107%",comments:"Por encima del objetivo mensual de 55,620 KG"},{value:"46,450 KG",period:"Febrero 2025",status:"not_compliant",compliancePercentage:"83%",comments:"Por debajo del objetivo mensual, afectado por fallas en equipos"},{value:"43,602.24 KG",period:"Marzo 2025",status:"not_compliant",compliancePercentage:"78%",comments:"Por debajo del objetivo, plan de acci\xF3n en curso"}]:n.name.includes("Nuevos clientes")?[{value:"0",period:"Enero 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"},{value:"0",period:"Febrero 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"},{value:"0",period:"Marzo 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"}]:[{value:n.name.includes("Porcentaje de crecimiento")?"+8.5%":n.name.includes("Tasa de retenci\xF3n")?"92%":"Satisfactorio",period:"Enero 2025",status:n.name.includes("Porcentaje de crecimiento")?"alert":"complies",compliancePercentage:n.name.includes("Porcentaje de crecimiento")?"85%":"100%",comments:"Valor registrado para el periodo"}]).forEach(b=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)});let g={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.orsegaTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:o.get("Ventas").id,companyId:m.id,invertedMetric:!1};this.kpis.set(g.id,g),(n.name.includes("Volumen")?[{value:"812,340 unidades",period:"Enero 2025",status:"complies",compliancePercentage:"105%",comments:"Por encima del objetivo mensual de 775,735 unidades"},{value:"755,212 unidades",period:"Febrero 2025",status:"alert",compliancePercentage:"97%",comments:"Ligeramente por debajo del objetivo mensual"},{value:"780,430 unidades",period:"Marzo 2025",status:"complies",compliancePercentage:"101%",comments:"Recuperaci\xF3n y cumplimiento del objetivo"},{value:"237,464 unidades",period:"Abril 2025",status:"not_compliant",compliancePercentage:"31%",comments:"Muy por debajo del objetivo, posible error en los datos"}]:n.name.includes("Nuevos clientes")?[{value:"0",period:"Enero 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"},{value:"0",period:"Febrero 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"},{value:"0",period:"Marzo 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"}]:[{value:n.name.includes("Porcentaje de crecimiento")?"+11.2%":n.name.includes("Tasa de retenci\xF3n")?"88%":"Muy satisfactorio",period:"Enero 2025",status:n.name.includes("Tasa de retenci\xF3n")?"alert":"complies",compliancePercentage:n.name.includes("Tasa de retenci\xF3n")?"98%":"100%",comments:"Valor registrado para el periodo"}]).forEach(b=>{let y={id:this.kpiValueId++,kpiId:g.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)})}),i.has("Soporte de Ventas")&&o.has("Soporte de Ventas")&&[{name:"Actualizaci\xF3n del CRM",description:"Mide la actualizaci\xF3n oportuna de datos en el CRM",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"(Registros actualizados / Total de registros) x 100",responsible:"Gabriela Herrera"},{name:"Tiempo de respuesta a solicitudes",description:"Mide el tiempo de respuesta a solicitudes de clientes",unit:"horas",duraTarget:"< 24 horas",orsegaTarget:"< 24 horas",frequency:"weekly",calculationMethod:"Tiempo promedio de respuesta",responsible:"Daniel Ortega"},{name:"Precisi\xF3n en documentaci\xF3n de \xF3rdenes",description:"Mide la exactitud en la documentaci\xF3n de \xF3rdenes",unit:"%",duraTarget:"98%",orsegaTarget:"98%",frequency:"quarterly",calculationMethod:"(Documentos sin errores / Total de documentos) x 100",responsible:"Laura Reyes"},{name:"Eficiencia en reportes de soporte",description:"Mide la entrega oportuna de reportes",unit:"%",duraTarget:"100% en plazo",orsegaTarget:"100% en plazo",frequency:"monthly",calculationMethod:"(Reportes entregados a tiempo / Total de reportes) x 100",responsible:"Roberto Cruz"},{name:"Seguimiento a evaluaci\xF3n de muestras",description:"Mide el seguimiento a muestras enviadas a clientes",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"(Muestras con seguimiento / Total de muestras) x 100",responsible:"Mariana Fuentes"},{name:"Seguimiento a redes sociales",description:"Mide la actividad en redes sociales",unit:"posts",duraTarget:"2 posts/semana",orsegaTarget:"2 posts/semana",frequency:"weekly",calculationMethod:"Conteo de publicaciones",responsible:"Javier Castillo"},{name:"Recuperaci\xF3n de ventas de clientes",description:"Mide la reactivaci\xF3n de clientes inactivos",unit:"%",duraTarget:"% clientes reactivados",orsegaTarget:"% clientes reactivados",frequency:"bimonthly",calculationMethod:"(Clientes reactivados / Total de clientes inactivos) x 100",responsible:"Ver\xF3nica Torres"}].forEach(n=>{let d={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.duraTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:i.get("Soporte de Ventas").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),[{value:n.name.includes("Actualizaci\xF3n")?"95%":n.name.includes("Tiempo de respuesta")?"22 horas":n.name.includes("Precisi\xF3n")?"97.5%":n.name.includes("Eficiencia")?"98%":n.name.includes("Seguimiento a evaluaci\xF3n")?"100%":n.name.includes("Seguimiento a redes")?"1.5/semana":"15%",period:"Q1 2023",status:n.name.includes("Actualizaci\xF3n")||n.name.includes("Precisi\xF3n")||n.name.includes("Eficiencia")||n.name.includes("Seguimiento a redes")?"alert":"complies",compliancePercentage:n.name.includes("Actualizaci\xF3n")?"95%":n.name.includes("Precisi\xF3n")?"97%":n.name.includes("Eficiencia")?"98%":n.name.includes("Seguimiento a redes")?"75%":"100%",comments:"Valor registrado para el periodo"}].forEach(b=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)});let g={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.orsegaTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:o.get("Soporte de Ventas").id,companyId:m.id,invertedMetric:!1};this.kpis.set(g.id,g),[{value:n.name.includes("Actualizaci\xF3n")?"98%":n.name.includes("Tiempo de respuesta")?"20 horas":n.name.includes("Precisi\xF3n")?"98.5%":n.name.includes("Eficiencia")?"100%":n.name.includes("Seguimiento a evaluaci\xF3n")?"98%":n.name.includes("Seguimiento a redes")?"2/semana":"20%",period:"Q1 2023",status:n.name.includes("Seguimiento a evaluaci\xF3n")?"alert":"complies",compliancePercentage:n.name.includes("Seguimiento a evaluaci\xF3n")?"98%":"100%",comments:"Valor registrado para el periodo"}].forEach(b=>{let y={id:this.kpiValueId++,kpiId:g.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)})}),i.has("Log\xEDstica")&&o.has("Log\xEDstica")&&[{name:"Precisi\xF3n de inventarios",description:"Mide la exactitud del inventario f\xEDsico vs. sistema",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"quarterly",calculationMethod:"(Inventario correcto / Total de inventario) x 100",responsible:"Ricardo Vargas"},{name:"Cumplimiento de tiempos de entrega",description:"Mide el cumplimiento de los tiempos de entrega a clientes",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"(Entregas a tiempo / Total de entregas) x 100",responsible:"Patricia Lara"},{name:"Costos de transporte",description:"Mide la optimizaci\xF3n de costos de transporte",unit:"%",duraTarget:"< Inflaci\xF3n anual",orsegaTarget:"< Inflaci\xF3n anual",frequency:"yearly",calculationMethod:"Comparaci\xF3n con la inflaci\xF3n anual",responsible:"H\xE9ctor Navarro"},{name:"Satisfacci\xF3n de clientes internos",description:"Mide la satisfacci\xF3n de otros departamentos con Log\xEDstica",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"semiannually",calculationMethod:"Encuestas de satisfacci\xF3n",responsible:"Carmen Delgado"},{name:"Tiempo de recuperaci\xF3n de evidencias",description:"Mide el tiempo para recuperar evidencias de entrega",unit:"horas",duraTarget:"< 24 horas",orsegaTarget:"< 24 horas",frequency:"monthly",calculationMethod:"Tiempo promedio de recuperaci\xF3n",responsible:"Arturo Guzm\xE1n"}].forEach(n=>{let d={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.duraTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:i.get("Log\xEDstica").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),[{value:n.name.includes("Precisi\xF3n de inventarios")?"98.5%":n.name.includes("Cumplimiento de tiempos")?"95%":n.name.includes("Costos de transporte")?"-2% vs inflaci\xF3n":n.name.includes("Satisfacci\xF3n")?"92%":"28 horas",period:"Q1 2023",status:n.name.includes("Precisi\xF3n de inventarios")||n.name.includes("Cumplimiento de tiempos")||n.name.includes("Satisfacci\xF3n")||n.name.includes("Tiempo de recuperaci\xF3n")?"alert":"complies",compliancePercentage:n.name.includes("Precisi\xF3n de inventarios")?"98%":n.name.includes("Cumplimiento de tiempos")?"95%":n.name.includes("Satisfacci\xF3n")?"92%":n.name.includes("Tiempo de recuperaci\xF3n")?"85%":"100%",comments:"Valor registrado para el periodo"}].forEach(b=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)});let g={id:this.kpiId++,name:n.name,description:n.description,unit:n.unit,target:n.orsegaTarget,frequency:n.frequency,calculationMethod:n.calculationMethod,responsible:n.responsible,areaId:o.get("Log\xEDstica").id,companyId:m.id,invertedMetric:!1};this.kpis.set(g.id,g),[{value:n.name.includes("Precisi\xF3n de inventarios")?"99.2%":n.name.includes("Cumplimiento de tiempos")?"97%":n.name.includes("Costos de transporte")?"-1.5% vs inflaci\xF3n":n.name.includes("Satisfacci\xF3n")?"95%":"22 horas",period:"Q1 2023",status:n.name.includes("Cumplimiento de tiempos")||n.name.includes("Satisfacci\xF3n")?"alert":"complies",compliancePercentage:n.name.includes("Cumplimiento de tiempos")?"97%":n.name.includes("Satisfacci\xF3n")?"95%":"100%",comments:"Valor registrado para el periodo"}].forEach(b=>{let y={id:this.kpiValueId++,kpiId:g.id,userId:1,updatedBy:null,...b,date:new Date};this.kpiValues.set(y.id,y)})})}async getUser(t){return this.users.get(t)}async getUserByEmail(t){return Array.from(this.users.values()).find(e=>e.email.toLowerCase()===t.toLowerCase())}async getUserByUsername(t){try{return t.includes("@")?this.getUserByEmail(t):t.toLowerCase()==="admin"?Array.from(this.users.values()).find(e=>e.name.toLowerCase()==="admin"):Array.from(this.users.values()).find(e=>{let s=e.email.toLowerCase().split("@");return s.length>0&&s[0]===t.toLowerCase()})}catch(e){console.error("Error en getUserByUsername:",e);return}}async createUser(t){let e=this.userId++,s={...t,id:e,lastLogin:null,role:t.role||"viewer",companyId:t.companyId||null,areaId:t.areaId||null};return this.users.set(e,s),s}async updateUser(t,e){let s=this.users.get(t);if(!s)return;let c={...s,...e};return this.users.set(t,c),c}async getUsers(){return Array.from(this.users.values())}async getCompany(t){return this.companies.get(t)}async getCompanies(){return Array.from(this.companies.values())}async createCompany(t){let e=this.companyId++,s={...t,id:e,createdAt:new Date,description:t.description||null,sector:t.sector||null,logo:t.logo||null};return this.companies.set(e,s),s}async updateCompany(t,e){let s=this.companies.get(t);if(!s)return;let c={...s,...e};return this.companies.set(t,c),c}async getArea(t){return this.areas.get(t)}async getAreas(){return Array.from(this.areas.values())}async getAreasByCompany(t){return Array.from(this.areas.values()).filter(e=>e.companyId===t)}async createArea(t){let e=this.areaId++,s={...t,id:e,description:t.description||null};return this.areas.set(e,s),s}async updateArea(t,e){let s=this.areas.get(t);if(!s)return;let c={...s,...e};return this.areas.set(t,c),c}async getKpi(t){return this.kpis.get(t)}async getKpis(){return Array.from(this.kpis.values())}async getKpisByCompany(t){return Array.from(this.kpis.values()).filter(e=>e.companyId===t)}async getKpisByArea(t){return Array.from(this.kpis.values()).filter(e=>e.areaId===t)}async createKpi(t){let e=this.kpiId++,s={...t,id:e,description:t.description||null,calculationMethod:t.calculationMethod||null,responsible:t.responsible||null,invertedMetric:t.invertedMetric||!1};return this.kpis.set(e,s),s}async updateKpi(t,e){let s=this.kpis.get(t);if(!s)return;let c={...s,...e};return this.kpis.set(t,c),c}async getKpiValue(t){return this.kpiValues.get(t)}async getKpiValues(){return Array.from(this.kpiValues.values())}async getKpiValuesByKpi(t){return Array.from(this.kpiValues.values()).filter(e=>e.kpiId===t).sort((e,s)=>{let c=e.date?new Date(e.date).getTime():0;return(s.date?new Date(s.date).getTime():0)-c})}async getLatestKpiValues(t,e){return Array.from(this.kpiValues.values()).filter(s=>s.kpiId===t).sort((s,c)=>{let l=s.date?new Date(s.date).getTime():0;return(c.date?new Date(c.date).getTime():0)-l}).slice(0,e)}async createKpiValue(t){let e=this.kpiValueId++,s=t.period;if(!s||s==="monthly"){let l=new Date;s=`${["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"][l.getMonth()]} ${l.getFullYear()}`}let c={...t,id:e,date:new Date,period:s,status:t.status||null,compliancePercentage:t.compliancePercentage||null,comments:t.comments||null,updatedBy:t.updatedBy||null};return this.kpiValues.set(e,c),c}async getActionPlan(t){return this.actionPlans.get(t)}async getActionPlansByKpi(t){return Array.from(this.actionPlans.values()).filter(e=>e.kpiId===t)}async createActionPlan(t){let e=this.actionPlanId++,s={...t,id:e,results:t.results||null};return this.actionPlans.set(e,s),s}async updateActionPlan(t,e){let s=this.actionPlans.get(t);if(!s)return;let c={...s,...e};return this.actionPlans.set(t,c),c}async getShipment(t){return this.shipments.get(t)}async getShipmentByTrackingCode(t){for(let e of Array.from(this.shipments.values()))if(e.trackingCode===t)return e}enrichShipmentWithCycleTimes(t){let e=this.shipmentCycleTimes.get(t.id);return e?{...t,cycleTimes:{hoursTotalCycle:e.hoursTotalCycle,hoursPendingToTransit:e.hoursPendingToTransit,hoursTransitToDelivered:e.hoursTransitToDelivered,hoursDeliveredToClosed:e.hoursDeliveredToClosed,hoursToDelivery:e.hoursToDelivery,computedAt:e.computedAt||void 0,updatedAt:e.updatedAt||void 0}}:{...t,cycleTimes:null}}async getShipments(){return Array.from(this.shipments.values()).map(e=>this.enrichShipmentWithCycleTimes(e))}async getShipmentsByCompany(t){return Array.from(this.shipments.values()).filter(s=>s.companyId===t).map(s=>this.enrichShipmentWithCycleTimes(s))}async getShipmentsByStatus(t){return Array.from(this.shipments.values()).filter(e=>e.status===t)}async getShipmentsByCompanyAndStatus(t,e){return Array.from(this.shipments.values()).filter(s=>s.companyId===t&&s.status===e)}async createShipment(t){let e=this.shipmentId++,s=t.trackingCode;if(!s){let p=t.companyId===1?"DUR":"ORS",f=new Date,i=f.getFullYear().toString().slice(2),o=(f.getMonth()+1).toString().padStart(2,"0"),r=e.toString().padStart(4,"0");s=`${p}-${i}${o}-${r}`}let c=new Date,l=new Date,m={id:e,...t,trackingCode:s,status:t.status||"pending",createdAt:c,updatedAt:l,comments:t.comments||null,customerEmail:t.customerEmail||null,customerPhone:t.customerPhone||null,departureDate:t.departureDate||null,estimatedDeliveryDate:t.estimatedDeliveryDate||null,actualDeliveryDate:t.actualDeliveryDate||null,carrier:t.carrier||null,vehicleInfo:t.vehicleInfo||null,vehicleType:t.vehicleType||null,fuelType:t.fuelType||null,distance:t.distance||null,carbonFootprint:t.carbonFootprint||null,driverName:t.driverName||null,driverPhone:t.driverPhone||null};return this.shipments.set(e,m),m}async updateShipment(t,e){let s=this.shipments.get(t);if(!s)return;let c={...s,...e,updatedAt:new Date};return this.shipments.set(t,c),c}async getShipmentUpdate(t){return this.shipmentUpdates.get(t)}async getShipmentUpdatesByShipment(t){return Array.from(this.shipmentUpdates.values()).filter(e=>e.shipmentId===t).sort((e,s)=>{let c=e.timestamp?new Date(e.timestamp).getTime():0;return(s.timestamp?new Date(s.timestamp).getTime():0)-c})}async createShipmentUpdate(t){let e=this.shipmentUpdateId++,s=new Date,c={id:e,...t,timestamp:s,comments:t.comments||null,updatedBy:t.updatedBy||null,location:t.location||null};this.shipmentUpdates.set(e,c);let l=await this.getShipment(t.shipmentId);return l&&await this.updateShipment(l.id,{status:t.status,updatedAt:s}),c}initializeShipmentData(){let t=[{trackingCode:"DUR-2404-0001",companyId:1,customerName:"Distribuidora Qu\xEDmica del Pac\xEDfico",purchaseOrder:"PO-2025-001",destination:"Mazatl\xE1n, Sinaloa",origin:"Monterrey, Nuevo Le\xF3n",product:"Sosa C\xE1ustica",quantity:"5000",unit:"KG",departureDate:new Date("2025-04-19"),estimatedDeliveryDate:new Date("2025-04-22"),status:"in_transit",carrier:"TransQuimicos SA",vehicleInfo:"Cisterna especializada C-3540",vehicleType:"Cisterna",fuelType:"Diesel",distance:"957",carbonFootprint:"2104",driverName:"Juan P\xE9rez",driverPhone:"+52 555 123 4567",customerEmail:"compras@disquimpac.com",customerPhone:"+52 669 987 6543",comments:"Pedido urgente, cliente prioritario"},{trackingCode:"DUR-2404-0002",companyId:1,customerName:"Qu\xEDmica Industrial del Norte",purchaseOrder:"PO-2025-002",destination:"Torre\xF3n, Coahuila",origin:"Monterrey, Nuevo Le\xF3n",product:"\xC1cido Sulf\xFArico",quantity:"3500",unit:"KG",departureDate:new Date("2025-04-22"),estimatedDeliveryDate:new Date("2025-04-25"),status:"pending",carrier:"TransQuimicos SA",vehicleInfo:"Tanque especializado T-8721",vehicleType:"Tanque",fuelType:"Diesel",distance:"435",carbonFootprint:"953",driverName:"Roberto Mart\xEDnez",driverPhone:"+52 555 765 4321",customerEmail:"operaciones@quinor.mx",customerPhone:"+52 871 234 5678",comments:"Carga peligrosa, requiere documentaci\xF3n especial"},{trackingCode:"DUR-2404-0003",companyId:1,customerName:"Agroqu\xEDmicos del Baj\xEDo",purchaseOrder:"PO-2025-003",destination:"Le\xF3n, Guanajuato",origin:"Monterrey, Nuevo Le\xF3n",product:"Formaldeh\xEDdo",quantity:"2800",unit:"KG",departureDate:new Date("2025-04-15"),estimatedDeliveryDate:new Date("2025-04-18"),actualDeliveryDate:new Date("2025-04-18"),status:"delivered",carrier:"LogiChem",vehicleInfo:"Cami\xF3n L-9234",vehicleType:"Cami\xF3n",fuelType:"Diesel",distance:"632",carbonFootprint:"1390",driverName:"Miguel \xC1ngel Soto",driverPhone:"+52 555 987 6543",customerEmail:"compras@agrobajio.com",customerPhone:"+52 477 345 6789",comments:"Entrega completada satisfactoriamente"}],e=[{trackingCode:"ORS-2404-0001",companyId:2,customerName:"Productos Qu\xEDmicos Industriales",purchaseOrder:"PO-ORS-2025-001",destination:"Guadalajara, Jalisco",origin:"Ciudad de M\xE9xico",product:"Acetona",quantity:"250000",unit:"unidades",departureDate:new Date("2025-04-20"),estimatedDeliveryDate:new Date("2025-04-21"),status:"delayed",carrier:"QuimiTransportes",vehicleInfo:"Trailer QT-5623",vehicleType:"Trailer",fuelType:"Diesel",distance:"549",carbonFootprint:"1208",driverName:"Fernando Ruiz",driverPhone:"+52 555 432 1098",customerEmail:"logistica@pqi.com.mx",customerPhone:"+52 333 456 7890",comments:"Retraso por bloqueo carretero en Jalisco"},{trackingCode:"ORS-2404-0002",companyId:2,customerName:"Laboratorios Qu\xEDmicos de Occidente",purchaseOrder:"PO-ORS-2025-002",destination:"Tepic, Nayarit",origin:"Ciudad de M\xE9xico",product:"Per\xF3xido de Hidr\xF3geno",quantity:"180000",unit:"unidades",departureDate:new Date("2025-04-23"),estimatedDeliveryDate:new Date("2025-04-25"),status:"in_transit",carrier:"QuimiTransportes",vehicleInfo:"Cami\xF3n refrigerado QT-3318",vehicleType:"Cami\xF3n refrigerado",fuelType:"Diesel",distance:"832",carbonFootprint:"1984",driverName:"Alberto Mendoza",driverPhone:"+52 555 678 9012",customerEmail:"compras@lqo.mx",customerPhone:"+52 311 234 5678",comments:"Producto requiere cadena de fr\xEDo"},{trackingCode:"ORS-2404-0003",companyId:2,customerName:"Adhesivos Especializados",purchaseOrder:"PO-ORS-2025-003",destination:"Quer\xE9taro, Quer\xE9taro",origin:"Ciudad de M\xE9xico",product:"Metilato de Sodio",quantity:"125000",unit:"unidades",departureDate:new Date("2025-04-18"),estimatedDeliveryDate:new Date("2025-04-19"),actualDeliveryDate:new Date("2025-04-19"),status:"delivered",carrier:"LogiChem",vehicleInfo:"Cami\xF3n L-7891",vehicleType:"Cami\xF3n",fuelType:"Diesel",distance:"218",carbonFootprint:"475",driverName:"Rafael Torres",driverPhone:"+52 555 890 1234",customerEmail:"insumos@adhesivosesp.com",customerPhone:"+52 442 567 8901",comments:"Cliente confirm\xF3 recepci\xF3n completa"}];t.forEach(s=>{let c={id:this.shipmentId++,...s,actualDeliveryDate:s.actualDeliveryDate||null,createdAt:new Date(Date.now()-Math.floor(Math.random()*10)*24*60*60*1e3),updatedAt:new Date};this.shipments.set(c.id,c),this.createInitialShipmentUpdates(c)}),e.forEach(s=>{let c={id:this.shipmentId++,...s,actualDeliveryDate:s.actualDeliveryDate||null,createdAt:new Date(Date.now()-Math.floor(Math.random()*10)*24*60*60*1e3),updatedAt:new Date};this.shipments.set(c.id,c),this.createInitialShipmentUpdates(c)})}createInitialShipmentUpdates(t){let e={id:this.shipmentUpdateId++,shipmentId:t.id,status:"pending",location:t.origin,comments:"Env\xEDo registrado en sistema",updatedBy:1,timestamp:new Date(t.createdAt?t.createdAt.getTime():Date.now())};if(this.shipmentUpdates.set(e.id,e),t.departureDate&&t.departureDate<=new Date){let s={id:this.shipmentUpdateId++,shipmentId:t.id,status:"in_transit",location:t.origin,comments:"Env\xEDo despachado desde almac\xE9n",updatedBy:1,timestamp:new Date(t.departureDate.getTime())};this.shipmentUpdates.set(s.id,s)}if(t.status==="delayed"){let s={id:this.shipmentUpdateId++,shipmentId:t.id,status:"delayed",location:"En ruta",comments:t.comments||"Env\xEDo retrasado",updatedBy:1,timestamp:new Date(Date.now()-864e5)};this.shipmentUpdates.set(s.id,s)}if(t.status==="delivered"&&t.actualDeliveryDate){let s={id:this.shipmentUpdateId++,shipmentId:t.id,status:"delivered",location:t.destination,comments:"Env\xEDo entregado al cliente",updatedBy:1,timestamp:new Date(t.actualDeliveryDate.getTime())};this.shipmentUpdates.set(s.id,s)}}async getLastKpiUpdateByUser(t){let e=Array.from(this.kpiValues.values()).filter(l=>l.updatedBy===t).sort((l,m)=>{let p=l.date?new Date(l.date).getTime():0;return(m.date?new Date(m.date).getTime():0)-p});if(e.length===0)return;let s=e[0],c=this.kpis.get(s.kpiId);if(c)return s.date?{kpiName:c.name,updateDate:s.date}:void 0}async getTeamActivitySummary(){let t=Array.from(this.users.values()),e=[];for(let s of t){let c=await this.getLastKpiUpdateByUser(s.id);e.push({userId:s.id,lastLogin:s.lastLogin,lastKpiUpdate:c||null})}return e}async getShipmentNotification(t){return this.shipmentNotifications.get(t)}async getShipmentNotificationsByShipment(t){return Array.from(this.shipmentNotifications.values()).filter(e=>e.shipmentId===t)}async createShipmentNotification(t){let e={...t,id:this.shipmentNotificationId++,sentAt:new Date,errorMessage:t.errorMessage||null};return this.shipmentNotifications.set(e.id,e),e}async updateShipmentNotificationStatus(t,e,s){let c=this.shipmentNotifications.get(t);if(!c)return;let l={...c,status:e,errorMessage:s||null};return this.shipmentNotifications.set(t,l),l}async deleteUser(t){return this.users.delete(t)}async getNotification(t){return this.notifications.get(t)}async getNotificationsForUser(t){return Array.from(this.notifications.values()).filter(e=>e.toUserId===t||e.toUserId===null)}async createNotification(t){let e=this.notificationId++,s={...t,companyId:t.companyId??null,areaId:t.areaId??null,toUserId:t.toUserId??null,type:t.type??"info",priority:t.priority??"normal",id:e,read:!1,readAt:null,createdAt:new Date};return this.notifications.set(e,s),s}async markNotificationAsRead(t,e){let s=this.notifications.get(t);if(!s||s.toUserId&&s.toUserId!==e)return;let c={...s,read:!0,readAt:new Date};return this.notifications.set(t,c),c}async deleteNotification(t,e){let s=this.notifications.get(t);return!s||s.toUserId&&s.toUserId!==e?!1:this.notifications.delete(t)}async getJobProfile(t){return this.jobProfiles.get(t)}async getJobProfileByUserArea(t,e){return Array.from(this.jobProfiles.values()).find(s=>s.areaId===t&&s.companyId===e)}async getJobProfileWithDetails(t){let e=await this.getUser(t);if(!e||!e.areaId)return;let s=await this.getJobProfileByUserArea(e.areaId,e.companyId||1);if(!s)return;let c=await this.getArea(e.areaId),l=e.companyId?await this.getCompany(e.companyId):null,m=await this.getUserKpis(t);return{id:s.id,companyId:s.companyId,areaId:s.areaId,title:s.title,description:s.description,mainActivities:s.mainActivities,responsibilities:s.responsibilities,kpiInstructions:s.kpiInstructions,tips:s.tips,processes:s.processes,updateFrequency:s.updateFrequency,areaName:c?.name||"",companyName:l?.name||"",userKpis:m.map(p=>({id:p.id,name:p.name,description:p.description||"",target:p.target,frequency:p.frequency,unit:p.unit}))}}async createJobProfile(t){let e=this.jobProfileId++,s={...t,id:e,createdAt:new Date,updatedAt:new Date};return this.jobProfiles.set(e,s),s}async updateJobProfile(t,e){let s=this.jobProfiles.get(t);if(!s)return;let c={...s,...e,updatedAt:new Date};return this.jobProfiles.set(t,c),c}async getUserKpis(t){let e=await this.getUser(t);return!e||!e.areaId?[]:this.getKpisByArea(e.areaId)}async getShipmentCycleTime(t){return this.shipmentCycleTimes.get(t)}async upsertShipmentCycleTime(t){let e=this.cycleTimeId++,c={id:this.shipmentCycleTimes.get(t.shipmentId)?.id||e,...t,pendingAt:t.pendingAt??null,inTransitAt:t.inTransitAt??null,deliveredAt:t.deliveredAt??null,closedAt:t.closedAt??null,hoursPendingToTransit:t.hoursPendingToTransit??null,hoursTransitToDelivered:t.hoursTransitToDelivered??null,hoursDeliveredToClosed:t.hoursDeliveredToClosed??null,hoursTotalCycle:t.hoursTotalCycle??null,hoursToDelivery:t.hoursToDelivery??null,computedAt:new Date,updatedAt:new Date};return this.shipmentCycleTimes.set(t.shipmentId,c),c}async recalculateShipmentCycleTime(t){let e=this.shipments.get(t);if(!e)return;let s=Array.from(this.shipmentUpdates.values()).filter(b=>b.shipmentId===t).sort((b,y)=>b.timestamp.getTime()-y.timestamp.getTime()),c={};for(let b of s)c[b.status]||(c[b.status]=b.timestamp);let l=e.createdAt,m=c.pending||l,p=c.in_transit,f=c.delivered||e.actualDeliveryDate,i=c.cancelled,o=(b,y)=>!b||!y?null:((y.getTime()-b.getTime())/(1e3*60*60)).toFixed(2),r=o(m,p),n=o(p,f),d=o(f,i),u=o(l,i),g=o(l,f),I={shipmentId:t,companyId:e.companyId,createdAt:l,pendingAt:m,inTransitAt:p,deliveredAt:f,closedAt:i,hoursPendingToTransit:r,hoursTransitToDelivered:n,hoursDeliveredToClosed:d,hoursTotalCycle:u,hoursToDelivery:g};return await this.upsertShipmentCycleTime(I)}async getAggregateCycleTimes(t,e,s){let c=Array.from(this.shipmentCycleTimes.values());if(t&&(c=c.filter(n=>n.companyId===t)),e&&s){let n=new Date(e),d=new Date(s);c=c.filter(u=>{let g=new Date(u.createdAt);return g>=n&&g<=d})}if(c.length===0)return[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:null,avgTransitToDelivered:null,avgDeliveredToClosed:null,avgTotalCycle:null,avgToDelivery:null,totalShipments:0,completedShipments:0}];let l=c.filter(n=>n.hoursPendingToTransit).map(n=>parseFloat(n.hoursPendingToTransit)),m=c.filter(n=>n.hoursTransitToDelivered).map(n=>parseFloat(n.hoursTransitToDelivered)),p=c.filter(n=>n.hoursDeliveredToClosed).map(n=>parseFloat(n.hoursDeliveredToClosed)),f=c.filter(n=>n.hoursTotalCycle).map(n=>parseFloat(n.hoursTotalCycle)),i=c.filter(n=>n.hoursToDelivery).map(n=>parseFloat(n.hoursToDelivery)),o=n=>n.length>0?n.reduce((d,u)=>d+u,0)/n.length:null,r=c.filter(n=>n.closedAt).length;return[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:o(l),avgTransitToDelivered:o(m),avgDeliveredToClosed:o(p),avgTotalCycle:o(f),avgToDelivery:o(i),totalShipments:c.length,completedShipments:r}]}},E=new Ce});var pr={};me(pr,{sendShipmentStatusNotification:()=>Un,sendTransportRequest:()=>ut});import dt from"@sendgrid/mail";async function ut(a){if(!process.env.SENDGRID_API_KEY){console.log("Email would be sent:",a);return}let t=process.env.NODE_ENV==="production"?"https://your-domain.replit.app":"http://localhost:5000",e=`${t}/api/shipments/${a.shipment.id}/confirm?token=${a.confirmToken}&pickupAt=${encodeURIComponent(a.pickupWindow||"")}`,s=`${t}/api/shipments/${a.shipment.id}/reject?token=${a.rejectToken}`,c=`
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; text-align: center;">
        <h1 style="margin: 0;">Solicitud de Transporte</h1>
        <p style="margin: 5px 0 0 0;">Sistema Log\xEDstico DIGO</p>
      </div>
      
      <div style="padding: 30px; background: #f8f9fa;">
        <p>Estimado proveedor,</p>
        
        <p>Tenemos una nueva solicitud de transporte que requiere su atenci\xF3n:</p>
        
        <div style="background: white; border-radius: 8px; padding: 20px; margin: 20px 0; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
          <h3 style="color: #333; margin-top: 0;">Detalles del Env\xEDo</h3>
          <table style="width: 100%; border-collapse: collapse;">
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Referencia:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.reference}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Cliente:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.client_name}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Origen:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.origin}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Destino:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.destination}</td>
            </tr>
            ${a.shipment.incoterm?`
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Incoterm:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.incoterm}</td>
            </tr>`:""}
            ${a.pickupWindow?`
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Ventana de Recolecci\xF3n:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.pickupWindow}</td>
            </tr>`:""}
          </table>
          
          ${a.notes?`
          <div style="margin-top: 15px; padding: 15px; background: #f8f9fa; border-radius: 4px;">
            <strong>Notas adicionales:</strong><br>
            ${a.notes}
          </div>`:""}
        </div>
        
        <p><strong>\xBFPuede realizar este transporte?</strong></p>
        
        <div style="text-align: center; margin: 30px 0;">
          <a href="${e}" 
             style="display: inline-block; background: #28a745; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 0 10px; font-weight: bold;">
            \u2705 CONFIRMAR TRANSPORTE
          </a>
          
          <a href="${s}" 
             style="display: inline-block; background: #dc3545; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 0 10px; font-weight: bold;">
            \u274C RECHAZAR
          </a>
        </div>
        
        <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; font-size: 12px; color: #666;">
          <p>Este correo fue enviado autom\xE1ticamente por el Sistema Log\xEDstico DIGO.</p>
          <p>Si tiene preguntas, responda directamente a este correo.</p>
        </div>
      </div>
    </div>
  `,l={to:a.to,from:"logistics@digo.mx",subject:`Solicitud de Transporte - ${a.shipment.reference}`,html:c};await dt.send(l),console.log(`Transport request email sent to: ${a.to}`)}async function Un(a){if(!process.env.SENDGRID_API_KEY)return console.log("[Simulation] Email notification would be sent:",{to:a.to,status:a.status,trackingCode:a.shipment.tracking_code||a.shipment.trackingCode}),{messageId:"simulated",provider:"sendgrid"};let t=jn[a.status],e=a.shipment.tracking_code||a.shipment.trackingCode||"N/A",s=a.shipment.estimated_delivery_date||a.shipment.estimatedDeliveryDate,c=`
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <div style="background: ${t.color}; color: white; padding: 20px; text-align: center;">
        <h1 style="margin: 0;">${t.title}</h1>
        <p style="margin: 5px 0 0 0;">Sistema de Seguimiento Econova</p>
      </div>
      
      <div style="padding: 30px; background: #f8f9fa;">
        <p style="font-size: 16px; color: #333;">Estimado cliente,</p>
        
        <p style="font-size: 16px; color: #333;">${t.message}</p>
        
        <div style="background: white; border-radius: 8px; padding: 20px; margin: 20px 0; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
          <h3 style="color: #333; margin-top: 0;">Detalles del Env\xEDo</h3>
          <table style="width: 100%; border-collapse: collapse;">
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">C\xF3digo de Seguimiento:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee; font-family: monospace;">${e}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Origen:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.origin||"N/A"}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Destino:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.destination||"N/A"}</td>
            </tr>
            ${a.shipment.product?`
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Producto:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.product}</td>
            </tr>`:""}
            ${s?`
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Fecha Estimada de Entrega:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${new Date(s).toLocaleDateString("es-MX",{year:"numeric",month:"long",day:"numeric"})}</td>
            </tr>`:""}
            <tr>
              <td style="padding: 8px; font-weight: bold;">Estado Actual:</td>
              <td style="padding: 8px; color: ${t.color}; font-weight: bold;">${t.title.replace(/[📦🚚⚠️✅❌]/g,"").trim()}</td>
            </tr>
          </table>
        </div>
        
        <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; font-size: 12px; color: #666;">
          <p>Este correo fue enviado autom\xE1ticamente por el Sistema de Seguimiento Econova.</p>
          <p>Si tiene preguntas sobre su env\xEDo, por favor cont\xE1ctenos respondiendo a este correo.</p>
        </div>
      </div>
    </div>
  `,l={to:a.to,from:"logistics@digo.mx",subject:`${t.subject} - ${e}`,html:c};try{let m=await dt.send(l);return console.log(`Shipment status notification sent to: ${a.to} (status: ${a.status})`),{messageId:m[0]?.headers?.["x-message-id"]||"sent",provider:"sendgrid"}}catch(m){throw console.error("[Email Error] Failed to send shipment notification:",m),m}}var jn,mt=se(()=>{"use strict";process.env.SENDGRID_API_KEY?dt.setApiKey(process.env.SENDGRID_API_KEY):console.warn("SENDGRID_API_KEY not found - email functionality disabled");jn={pending:{subject:"Env\xEDo Registrado",title:"\u{1F4E6} Env\xEDo Registrado",message:"Su env\xEDo ha sido registrado en nuestro sistema y est\xE1 pendiente de despacho.",color:"#6c757d"},in_transit:{subject:"Env\xEDo en Tr\xE1nsito",title:"\u{1F69A} Su Env\xEDo Est\xE1 en Camino",message:"Su env\xEDo ha sido despachado y est\xE1 en tr\xE1nsito hacia su destino.",color:"#0066cc"},delayed:{subject:"Env\xEDo Retrasado",title:"\u26A0\uFE0F Actualizaci\xF3n de Env\xEDo",message:"Queremos informarle que su env\xEDo ha experimentado un retraso. Estamos trabajando para entregarlo lo antes posible.",color:"#ffc107"},delivered:{subject:"Env\xEDo Entregado",title:"\u2705 Env\xEDo Entregado Exitosamente",message:"\xA1Excelentes noticias! Su env\xEDo ha sido entregado exitosamente.",color:"#28a745"},cancelled:{subject:"Env\xEDo Cancelado",title:"\u274C Env\xEDo Cancelado",message:"Su env\xEDo ha sido cancelado. Si tiene preguntas, por favor cont\xE1ctenos.",color:"#dc3545"}}});var yr={};me(yr,{seedClients:()=>gr});async function gr(){try{console.log("\u{1F465} Creando clientes de prueba...");let a=await h.select().from(X);if(console.log(`\u{1F4CA} Clientes existentes: ${a.length}`),a.length>0)return console.log("\u2705 Ya hay clientes en la base de datos"),{success:!0,message:"Clients already exist",count:a.length};let t=[{name:"Distribuidora Qu\xEDmica del Pac\xEDfico",email:"contacto@distribuidoraquimica.com",phone:"+52-667-123-4567",address:"Av. del Mar 123, Mazatl\xE1n, Sinaloa",companyId:1,requires_payment_complement:!0,isActive:!0,clientCode:"DUR-CLI-001",city:"Mazatl\xE1n",state:"Sinaloa"},{name:"Qu\xEDmica Industrial del Norte",email:"ventas@quimicanorte.com",phone:"+52-871-234-5678",address:"Blvd. Independencia 456, Torre\xF3n, Coahuila",companyId:1,requires_payment_complement:!1,isActive:!0,clientCode:"DUR-CLI-002",city:"Torre\xF3n",state:"Coahuila"},{name:"Agroqu\xEDmicos del Baj\xEDo",email:"compras@agroquimicosbajio.com",phone:"+52-477-345-6789",address:"Calle Industrial 789, Le\xF3n, Guanajuato",companyId:1,requires_payment_complement:!0,isActive:!0,clientCode:"DUR-CLI-003",city:"Le\xF3n",state:"Guanajuato"}],e=[{name:"Productos Qu\xEDmicos Industriales",email:"contacto@pqi.com.mx",phone:"+52-33-456-7890",address:"Av. L\xF3pez Mateos 321, Guadalajara, Jalisco",companyId:2,requires_payment_complement:!0,isActive:!0,clientCode:"ORS-CLI-001",city:"Guadalajara",state:"Jalisco"},{name:"Laboratorios Qu\xEDmicos de Occidente",email:"compras@labquimicos.com",phone:"+52-311-567-8901",address:"Calle Tecnol\xF3gica 654, Tepic, Nayarit",companyId:2,requires_payment_complement:!1,isActive:!0,clientCode:"ORS-CLI-002",city:"Tepic",state:"Nayarit"},{name:"Adhesivos Especializados",email:"ventas@adhesivos.com.mx",phone:"+52-442-678-9012",address:"Zona Industrial 987, Quer\xE9taro, Quer\xE9taro",companyId:2,requires_payment_complement:!0,isActive:!0,clientCode:"ORS-CLI-003",city:"Quer\xE9taro",state:"Quer\xE9taro"},{name:"Proveedor de Servicios Qu\xEDmicos",email:"servicios@proveedorquimico.com",phone:"+52-55-789-0123",address:"Av. Insurgentes 147, Ciudad de M\xE9xico",companyId:2,requires_payment_complement:!1,isActive:!0,clientCode:"ORS-CLI-004",city:"Ciudad de M\xE9xico",state:"CDMX"}],s=[...t,...e];return await h.insert(X).values(s),console.log(`\u2705 ${s.length} clientes creados exitosamente!`),console.log(`\u{1F4CA} Dura International: ${t.length} clientes`),console.log(`\u{1F4CA} Grupo Orsega: ${e.length} clientes`),{success:!0,message:"Clients created successfully",total:s.length,dura:t.length,orsega:e.length}}catch(a){return console.error("\u274C Error creando clientes:",a),{success:!1,message:"Failed to create clients",error:a instanceof Error?a.message:String(a)}}}var hr=se(()=>{"use strict";de();le();import.meta.url===`file://${process.argv[1]}`&&gr().then(a=>{console.log(a),process.exit(a.success?0:1)})});var Oe={};me(Oe,{TreasuryAutomation:()=>gt});import{eq as Ae}from"drizzle-orm";import pt from"@sendgrid/mail";var gt,Ve=se(()=>{"use strict";de();le();pt.setApiKey(process.env.SENDGRID_API_KEY);gt=class{static async sendPaymentReceiptToSupplier(t,e,s){try{let c=await h.query.paymentVouchers.findFirst({where:Ae(V.id,t)});if(!c)return{success:!1,message:"Comprobante no encontrado"};let l=await h.query.clients.findFirst({where:Ae(X.id,e)});if(!l||!l.email)return{success:!1,message:"Cliente sin email configurado"};let m=c.analysis||{},p=m.extractedAmount||"N/A",f=m.extractedCurrency||"MXN",i=m.extractedReference||"N/A",o=m.extractedBank||"N/A",r={to:l.email,from:"noreply@econova.com.mx",subject:`\u2705 Comprobante de Pago - ${l.name}`,html:`
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;">
              <h1 style="color: white; margin: 0; font-size: 24px;">\u{1F3E6} EcoNova - Comprobante de Pago</h1>
            </div>
            
            <div style="padding: 30px; background: #f8f9fa;">
              <h2 style="color: #333; margin-bottom: 20px;">Hola ${l.name},</h2>
              
              <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
                Te confirmamos que hemos realizado el pago correspondiente. Adjunto encontrar\xE1s el comprobante bancario.
              </p>
              
              <div style="background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); margin: 20px 0;">
                <h3 style="color: #333; margin-top: 0;">\u{1F4CB} Detalles del Pago</h3>
                <table style="width: 100%; border-collapse: collapse;">
                  <tr>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">Monto:</td>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; color: #333;">${f} $${p?.toLocaleString()}</td>
                  </tr>
                  <tr>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">Referencia:</td>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; color: #333;">${i}</td>
                  </tr>
                  <tr>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">Banco:</td>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; color: #333;">${o}</td>
                  </tr>
                  <tr>
                    <td style="padding: 8px 0; font-weight: bold; color: #555;">Fecha:</td>
                    <td style="padding: 8px 0; color: #333;">${new Date().toLocaleDateString("es-MX")}</td>
                  </tr>
                </table>
              </div>

              ${l.requiresPaymentComplement?`
                <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 8px; margin: 20px 0;">
                  <h4 style="color: #856404; margin-top: 0;">\u26A0\uFE0F Complemento de Pago Requerido</h4>
                  <p style="color: #856404; margin-bottom: 0;">
                    Para completar el proceso, necesitamos que nos env\xEDes el complemento de pago correspondiente.
                    Te enviaremos un recordatorio en caso de que no lo recibamos.
                  </p>
                </div>
              `:`
                <div style="background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 8px; margin: 20px 0;">
                  <h4 style="color: #155724; margin-top: 0;">\u2705 Pago Completado</h4>
                  <p style="color: #155724; margin-bottom: 0;">
                    Este pago no requiere complemento adicional. El proceso ha sido completado exitosamente.
                  </p>
                </div>
              `}

              <div style="text-align: center; margin-top: 30px;">
                <p style="color: #666; font-size: 14px;">
                  Si tienes alguna pregunta, no dudes en contactarnos.
                </p>
                <p style="color: #999; font-size: 12px; margin-top: 20px;">
                  Este es un mensaje autom\xE1tico del sistema EcoNova.
                </p>
              </div>
            </div>
          </div>
        `};return await pt.send(r),await h.update(V).set({status:l.requiresPaymentComplement?"pendiente_complemento":"factura_pagada",updatedAt:new Date}).where(Ae(V.id,t)),l.requiresPaymentComplement&&await this.scheduleComplementReminder(t,e),{success:!0,message:`Comprobante enviado a ${l.email}. ${l.requiresPaymentComplement?"Recordatorio programado.":"Pago completado."}`}}catch(c){return console.error("[Treasury Automation] Error sending receipt:",c),{success:!1,message:"Error al enviar comprobante"}}}static async scheduleComplementReminder(t,e){try{let s=[3,7,14];for(let c of s){let l=new Date;l.setDate(l.getDate()+c),console.log(`[Treasury Automation] Recordatorio programado para ${l.toISOString()}`)}}catch(s){console.error("[Treasury Automation] Error scheduling reminder:",s)}}static async sendComplementReminder(t,e){try{let s=await h.query.clients.findFirst({where:Ae(X.id,e)});if(!s||!s.email)return{success:!1,message:"Cliente sin email configurado"};let c=await h.query.paymentVouchers.findFirst({where:Ae(V.id,t)});if(!c)return{success:!1,message:"Comprobante no encontrado"};if(c.status!=="pendiente_complemento")return{success:!1,message:"El complemento ya fue recibido"};let l={to:s.email,from:"noreply@econova.com.mx",subject:`\u23F0 Recordatorio: Complemento de Pago Pendiente - ${s.name}`,html:`
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <div style="background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); padding: 20px; text-align: center;">
              <h1 style="color: white; margin: 0; font-size: 24px;">\u23F0 Recordatorio - Complemento de Pago</h1>
            </div>
            
            <div style="padding: 30px; background: #f8f9fa;">
              <h2 style="color: #333; margin-bottom: 20px;">Hola ${s.name},</h2>
              
              <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
                Te recordamos que a\xFAn necesitamos el complemento de pago para completar el proceso.
              </p>
              
              <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 20px; border-radius: 8px; margin: 20px 0;">
                <h3 style="color: #856404; margin-top: 0;">\u{1F4CB} Acci\xF3n Requerida</h3>
                <p style="color: #856404; margin-bottom: 15px;">
                  Por favor, env\xEDa el complemento de pago correspondiente para que podamos finalizar el proceso.
                </p>
                <p style="color: #856404; margin-bottom: 0; font-weight: bold;">
                  Puedes enviarlo respondiendo a este correo o contact\xE1ndonos directamente.
                </p>
              </div>

              <div style="text-align: center; margin-top: 30px;">
                <p style="color: #666; font-size: 14px;">
                  Gracias por tu colaboraci\xF3n.
                </p>
                <p style="color: #999; font-size: 12px; margin-top: 20px;">
                  Este es un recordatorio autom\xE1tico del sistema EcoNova.
                </p>
              </div>
            </div>
          </div>
        `};return await pt.send(l),{success:!0,message:`Recordatorio enviado a ${s.email}`}}catch(s){return console.error("[Treasury Automation] Error sending reminder:",s),{success:!1,message:"Error al enviar recordatorio"}}}static async processAutomaticFlow(t,e,s){try{console.log(`\u{1F916} [TreasuryAutomation] Iniciando flujo autom\xE1tico para voucher ${t}, empresa ${s}`);let c=await h.query.clients.findFirst({where:Ae(X.id,e)});if(!c)return{success:!1,message:"Cliente no encontrado",nextStatus:"error"};if(c.companyId!==s)return console.error(`\u274C [TreasuryAutomation] Cliente ${e} no pertenece a empresa ${s}`),{success:!1,message:"Cliente no pertenece a la empresa seleccionada",nextStatus:"error"};let l=await this.sendPaymentReceiptToSupplier(t,e,s);if(!l.success)return{success:!1,message:l.message,nextStatus:"error"};let m=c.requiresPaymentComplement?"pendiente_complemento":"factura_pagada";return console.log(`\u2705 [TreasuryAutomation] Flujo autom\xE1tico completado para voucher ${t}, empresa ${s}`),{success:!0,message:`Comprobante enviado autom\xE1ticamente a ${c.name}. ${c.requiresPaymentComplement?"Recordatorios programados.":"Proceso completado."}`,nextStatus:m}}catch(c){return console.error("[Treasury Automation] Error in automatic flow:",c),{success:!1,message:"Error en el flujo autom\xE1tico",nextStatus:"error"}}}}});var fr={};me(fr,{seedProductionData:()=>Mn});async function Mn(){try{console.log("\u{1F331} Iniciando seeding de datos de producci\xF3n...");let a=await h.select().from(L),t=await h.select().from(F),e=await h.select().from(_);if(console.log(`\u{1F4CA} Estado actual: companies=${a.length}, areas=${t.length}, kpis=${e.length}`),a.length>=2&&t.length>=12&&e.length>=5)return console.log("\u2705 Base de datos ya tiene datos completos"),{success:!0,message:"Database already seeded",companies:a.length,areas:t.length,kpis:e.length};let s=a;if(a.length<2){console.log("\u{1F4CA} Insertando companies faltantes...");let p=a.some(o=>o.id===1),f=a.some(o=>o.id===2),i=[];p||i.push({id:1,name:"Dura International",description:"Empresa l\xEDder en la industria qu\xEDmica",sector:"Qu\xEDmica"}),f||i.push({id:2,name:"Grupo Orsega",description:"Empresa especializada en productos qu\xEDmicos",sector:"Qu\xEDmica"}),i.length>0&&await h.insert(L).values(i),s=await h.select().from(L)}if(t.length<12){console.log("\u{1F3E2} Insertando areas faltantes...");let p=[{id:1,name:"Ventas",description:"\xC1rea de Ventas para Dura International",companyId:1},{id:2,name:"Log\xEDstica",description:"\xC1rea de Log\xEDstica para Dura International",companyId:1},{id:3,name:"Contabilidad y Finanzas",description:"\xC1rea de Contabilidad y Finanzas para Dura International",companyId:1},{id:4,name:"Ventas",description:"\xC1rea de Ventas para Grupo Orsega",companyId:2},{id:5,name:"Log\xEDstica",description:"\xC1rea de Log\xEDstica para Grupo Orsega",companyId:2},{id:6,name:"Contabilidad y Finanzas",description:"\xC1rea de Contabilidad y Finanzas para Grupo Orsega",companyId:2},{id:7,name:"Compras",description:"\xC1rea de Compras para Dura International",companyId:1},{id:8,name:"Almac\xE9n",description:"\xC1rea de Almac\xE9n para Dura International",companyId:1},{id:9,name:"Tesorer\xEDa",description:"\xC1rea de Tesorer\xEDa para Dura International",companyId:1},{id:10,name:"Compras",description:"\xC1rea de Compras para Grupo Orsega",companyId:2},{id:11,name:"Almac\xE9n",description:"\xC1rea de Almac\xE9n para Grupo Orsega",companyId:2},{id:12,name:"Tesorer\xEDa",description:"\xC1rea de Tesorer\xEDa para Grupo Orsega",companyId:2}],f=t.map(o=>o.id),i=p.filter(o=>!f.includes(o.id));i.length>0&&await h.insert(F).values(i)}if(e.length<5){console.log("\u{1F4C8} Insertando KPIs faltantes de Grupo Orsega...");let p=[{id:2,name:"Precisi\xF3n en estados financieros",description:"Mide la exactitud de los estados financieros generados. Objetivo: cero errores en emisi\xF3n de informaci\xF3n financiera.",areaId:6,companyId:2,unit:"%",target:"100%",frequency:"monthly",calculationMethod:"Conteo de errores y salvedades",responsible:"Mario Reynoso",invertedMetric:!1},{id:4,name:"Velocidad de rotaci\xF3n de cuentas por cobrar",description:"Mide el tiempo promedio para cobrar cuentas pendientes",areaId:6,companyId:2,unit:"d\xEDas",target:"60 d\xEDas",frequency:"monthly",calculationMethod:"Promedio de d\xEDas para cobrar",responsible:"Mario Reynoso",invertedMetric:!0},{id:6,name:"Cumplimiento de obligaciones fiscales",description:"Monitoreo mediante checklist para la presentaci\xF3n de impuestos",areaId:6,companyId:2,unit:"%",target:"100%",frequency:"monthly",calculationMethod:"Checklist de obligaciones fiscales",responsible:"Mario Reynoso",invertedMetric:!1},{id:8,name:"Facturaci\xF3n sin errores",description:"Mide la precisi\xF3n en la generaci\xF3n de facturas",areaId:6,companyId:2,unit:"%",target:"100%",frequency:"weekly",calculationMethod:"(Facturas sin errores / Total de facturas) x 100",responsible:"Mario Reynoso",invertedMetric:!1},{id:10,name:"Volumen de ventas alcanzado",description:"Volumen de ventas en unidades",areaId:4,companyId:2,unit:"unidades",target:"10.300.476 unidades",frequency:"monthly",calculationMethod:"Suma de unidades vendidas en el per\xEDodo",responsible:"Omar Navarro",invertedMetric:!1}],f=e.map(o=>o.id),i=p.filter(o=>!f.includes(o.id));i.length>0&&await h.insert(_).values(i)}let c=await h.select().from(L),l=await h.select().from(F),m=await h.select().from(_);return console.log("\u2705 Seeding completado exitosamente!"),{success:!0,message:"Production database seeded successfully",companies:c.length,areas:l.length,kpis:m.length}}catch(a){return console.error("\u274C Error durante el seeding:",a),{success:!1,message:"Seeding failed",error:a instanceof Error?a.message:String(a)}}}var vr=se(()=>{"use strict";de();le()});var br={};me(br,{analyzePaymentDocument:()=>On});import Kn from"openai";async function On(a,t){let e=process.env.OPENAI_API_KEY;if(!e)throw new Error("OPENAI_API_KEY no est\xE1 configurado");let s=new Kn({apiKey:e});console.log(`\u{1F50D} [Document Analyzer] Analizando documento tipo: ${t}`);try{let c=a.toString("base64"),l="image/jpeg";t.includes("png")&&(l="image/png"),t.includes("pdf")&&(l="application/pdf");let m=`data:${l};base64,${c}`,i=(await s.chat.completions.create({model:"gpt-4o",messages:[{role:"user",content:[{type:"text",text:`Analiza este comprobante de pago bancario y extrae la siguiente informaci\xF3n en formato JSON:

{
  "amount": n\xFAmero del monto total (solo n\xFAmero, sin s\xEDmbolos de moneda),
  "date": fecha del comprobante en formato ISO 8601 (YYYY-MM-DD),
  "bank": nombre del banco emisor,
  "reference": n\xFAmero de referencia, folio o n\xFAmero de operaci\xF3n,
  "currency": c\xF3digo de moneda (MXN, USD, etc.)
}

Si no puedes encontrar alg\xFAn dato, usa null para ese campo.
Responde SOLO con el JSON, sin texto adicional.`},{type:"image_url",image_url:{url:m}}]}],max_tokens:500,temperature:.1})).choices[0]?.message?.content||"";console.log("\u{1F4C4} [Document Analyzer] Respuesta de OpenAI:",i);let o;try{let n=i.match(/\{[\s\S]*\}/),d=n?n[0]:i;o=JSON.parse(d)}catch(n){console.error("\u274C [Document Analyzer] Error parseando JSON:",n);let d=i.match(/\$?[\d,]+\.?\d*/),u=i.match(/(banco|bank|bbva|santander|hsbc|banorte|banamex)/i),g=i.match(/(referencia|ref|folio|no\.?\s*\d+)/i);return{extractedAmount:d?parseFloat(d[0].replace(/[$,]/g,"")):null,extractedDate:null,extractedBank:u?u[0]:null,extractedReference:g?g[0]:null,extractedCurrency:"MXN",ocrConfidence:.3,rawResponse:i}}let r={extractedAmount:o.amount?parseFloat(o.amount):null,extractedDate:o.date?new Date(o.date):null,extractedBank:o.bank||null,extractedReference:o.reference||null,extractedCurrency:o.currency||null,ocrConfidence:Vn(o),rawResponse:i};return console.log("\u2705 [Document Analyzer] An\xE1lisis completado:",{amount:r.extractedAmount,bank:r.extractedBank,confidence:r.ocrConfidence}),r}catch(c){throw console.error("\u274C [Document Analyzer] Error en an\xE1lisis:",c),new Error(`Error al analizar documento: ${c}`)}}function Vn(a){let t=0,e=5;return a.amount!==null&&a.amount!==void 0&&t++,a.date!==null&&a.date!==void 0&&t++,a.bank!==null&&a.bank!==void 0&&t++,a.reference!==null&&a.reference!==void 0&&t++,a.currency!==null&&a.currency!==void 0&&t++,t/e}var Ir=se(()=>{"use strict"});var yt={};me(yt,{importBanxicoHistoricalData:()=>Sr,importSeptemberOctober2025:()=>Ln});async function Sr(a,t){let e=process.env.BANXICO_TOKEN;if(!e)throw new Error("BANXICO_TOKEN no est\xE1 configurado");let s=`${Fn}/series/${Er}/datos/${a}/${t}`;console.log(`\u{1F4E5} [Banxico Import] Importando datos desde ${a} hasta ${t}...`);try{let c=await fetch(s,{headers:{"Bmx-Token":e}});if(!c.ok)throw new Error(`Error en API Banxico: ${c.status} ${c.statusText}`);let m=(await c.json()).bmx.series[0]?.datos||[];console.log(`\u{1F4CA} [Banxico Import] Recibidos ${m.length} registros`);let p=0,f=0;for(let i of m){let[o,r,n]=i.fecha.split("/"),d=`${n}-${r}-${o}`,u=parseFloat(i.dato),g=u.toFixed(4),I=u.toFixed(4);if(await h.query.exchangeRates.findFirst({where:(y,{and:P,eq:S})=>P(S(y.source,"DOF"),S(y.date,new Date(`${d}T09:00:00`)))})){f++;continue}await h.insert(z).values({buyRate:Number(g),sellRate:Number(I),source:"DOF",notes:`Importado de Banxico (Serie ${Er})`,date:new Date(`${d}T09:00:00`),createdBy:23}),p++}return console.log(`\u2705 [Banxico Import] Importados: ${p}, Omitidos (ya exist\xEDan): ${f}`),{success:!0,imported:p,skipped:f,total:m.length}}catch(c){throw console.error("\u274C [Banxico Import] Error:",c),c}}async function Ln(){console.log("\u{1F680} [Banxico Import] Iniciando importaci\xF3n de Sept-Oct 2025...");let a=await Sr("2025-09-01","2025-10-31");return console.log("\u{1F389} [Banxico Import] Importaci\xF3n completada:",a),a}var Fn,Er,ht=se(()=>{"use strict";de();le();Fn="https://www.banxico.org.mx/SieAPIRest/service/v1",Er="SF43718"});var wr={};me(wr,{IdrallParser:()=>ft});import*as Fe from"xlsx";import{z as ee}from"zod";var qn,ft,Pr=se(()=>{"use strict";qn=ee.object({fecha:ee.string().optional(),fecha_pago:ee.string().optional(),monto:ee.number().optional(),importe:ee.number().optional(),proveedor:ee.string().optional(),cliente:ee.string().optional(),concepto:ee.string().optional(),descripcion:ee.string().optional(),referencia:ee.string().optional(),banco:ee.string().optional(),cuenta:ee.string().optional(),moneda:ee.string().optional(),factura:ee.string().optional(),folio:ee.string().optional(),vencimiento:ee.string().optional(),status:ee.string().optional()}),ft=class{static async parseExcel(t){try{console.log(`\u{1F4CA} [IdrallParser] Procesando archivo: ${t}`);let e=Fe.readFile(t),s=e.SheetNames[0],c=e.Sheets[s],l=Fe.utils.sheet_to_json(c,{header:1});if(l.length<2)return{success:!1,payments:[],errors:["El archivo Excel est\xE1 vac\xEDo o no tiene datos"],totalRows:0};let m=l[0];console.log("\u{1F4CB} [IdrallParser] Headers encontrados:",m);let p=this.mapHeaders(m);console.log("\u{1F504} [IdrallParser] Mapeo de headers:",p);let f=[],i=[],o=0;for(let r=1;r<l.length;r++){let n=l[r];if(!(!n||n.length===0))try{let d=this.mapRowData(n,p,m),u=qn.parse(d);(u.monto||u.importe)&&(f.push(u),o++)}catch(d){let u=`Fila ${r+1}: ${d instanceof Error?d.message:"Error desconocido"}`;i.push(u),console.warn(`\u26A0\uFE0F [IdrallParser] ${u}`)}}return console.log(`\u2705 [IdrallParser] Procesamiento completado: ${o} pagos v\xE1lidos, ${i.length} errores`),{success:o>0,payments:f,errors:i,totalRows:l.length-1}}catch(e){return console.error("\u274C [IdrallParser] Error procesando Excel:",e),{success:!1,payments:[],errors:[`Error procesando archivo: ${e instanceof Error?e.message:"Error desconocido"}`],totalRows:0}}}static mapHeaders(t){let e={};return t.forEach((s,c)=>{if(!s)return;let l=s.toLowerCase().trim();l.includes("fecha")&&l.includes("pago")?e[`col_${c}`]="fecha_pago":l.includes("fecha")?e[`col_${c}`]="fecha":l.includes("monto")||l.includes("importe")?e[`col_${c}`]="monto":l.includes("proveedor")||l.includes("supplier")?e[`col_${c}`]="proveedor":l.includes("cliente")||l.includes("client")?e[`col_${c}`]="cliente":l.includes("concepto")||l.includes("concept")?e[`col_${c}`]="concepto":l.includes("descripcion")||l.includes("description")?e[`col_${c}`]="descripcion":l.includes("referencia")||l.includes("reference")?e[`col_${c}`]="referencia":l.includes("banco")||l.includes("bank")?e[`col_${c}`]="banco":l.includes("cuenta")||l.includes("account")?e[`col_${c}`]="cuenta":l.includes("moneda")||l.includes("currency")?e[`col_${c}`]="moneda":l.includes("factura")||l.includes("invoice")?e[`col_${c}`]="factura":l.includes("folio")?e[`col_${c}`]="folio":l.includes("vencimiento")||l.includes("due")?e[`col_${c}`]="vencimiento":(l.includes("status")||l.includes("estado"))&&(e[`col_${c}`]="status")}),e}static mapRowData(t,e,s){let c={};return t.forEach((l,m)=>{let p=`col_${m}`,f=e[p];if(f&&l!==void 0&&l!==null&&l!=="")if(f==="monto"||f==="importe"){let i=parseFloat(String(l).replace(/[^0-9.-]/g,""));isNaN(i)||(c[f]=i)}else c[f]=String(l).trim()}),c}static async findMatchingClient(t,e){try{let{db:s}=await Promise.resolve().then(()=>(de(),jt)),{clients:c}=await Promise.resolve().then(()=>(le(),Ke)),{eq:l,and:m,or:p,ilike:f}=await import("drizzle-orm"),i=[t.proveedor,t.cliente,t.concepto,t.descripcion].filter(Boolean);if(i.length===0)return{found:!1,matchType:"none"};for(let o of i){let r=await s.query.clients.findFirst({where:m(l(c.companyId,e),f(c.name,`%${o}%`))});if(r)return{found:!0,client:r,matchType:"exact"}}for(let o of i){let r=await s.query.clients.findFirst({where:m(l(c.companyId,e),p(f(c.name,`%${o.split(" ")[0]}%`),f(c.email,`%${o}%`)))});if(r)return{found:!0,client:r,matchType:"partial"}}return{found:!1,matchType:"none"}}catch(s){return console.error("\u274C [IdrallParser] Error buscando cliente:",s),{found:!1,matchType:"none"}}}}});import"dotenv/config";import Be from"express";import{createServer as to}from"http";import{fileURLToPath as ro}from"url";$e();import{z as K}from"zod";import vt from"express-rate-limit";import Le from"bcrypt";$e();import Ot from"jsonwebtoken";import gn from"bcrypt";if(!process.env.JWT_SECRET)throw new Error("FATAL: JWT_SECRET environment variable must be set. This is a critical security requirement. Application cannot start without it.");var Vt=process.env.JWT_SECRET,yn="7d";function hn(a){return Ot.sign({id:a.id,name:a.name,email:a.email,role:a.role,companyId:a.companyId},Vt,{expiresIn:yn})}function fn(a){try{return Ot.verify(a,Vt)}catch(t){return console.error("[JWT] Error al verificar token:",t),null}}function w(a,t,e){let s=a.headers.authorization,c=s&&s.split(" ")[1];if(console.log("[JWT Auth] Checking token:",!!c),!c)return t.status(401).json({message:"Unauthorized",details:"No authentication token provided"});let l=fn(c);if(!l)return t.status(401).json({message:"Unauthorized",details:"Invalid or expired token"});a.user=l,console.log(`[JWT Auth] Authenticated user: ID=${l.id}, Role=${l.role}`),e()}function Te(a,t,e){let s=a.user;if(!s||s.role!=="admin")return t.status(403).json({message:"Forbidden: Admin access required"});e()}async function vn(a,t){try{return t.startsWith("$2b$")?await gn.compare(a,t):a===t}catch(e){return console.error("[Auth] Error comparando contrase\xF1as:",e),!1}}async function Ft(a,t){try{let e=await E.getUserByUsername(a);if(!e)return console.log(`[Auth] Usuario no encontrado: ${a}`),null;if(!await vn(t,e.password))return console.log(`[Auth] Contrase\xF1a incorrecta para usuario: ${a}`),null;await E.updateUser(e.id,{lastLogin:new Date});let c=hn({id:e.id,name:e.name,email:e.email,role:e.role,companyId:e.companyId});console.log(`[Auth] Login exitoso para usuario: ${a}`);let{password:l,...m}=e;return{token:c,user:m}}catch(e){return console.error("[Auth] Error en login:",e),null}}le();de();import{eq as Bn}from"drizzle-orm";de();le();import{gte as Lt,eq as qt,and as Bt}from"drizzle-orm";async function zt(a,t=30){let e=new Date;e.setDate(e.getDate()-t);let s=await h.select({date:z.date,buy:z.buyRate,sell:z.sellRate}).from(z).where(Bt(qt(z.source,a),Lt(z.date,e))).orderBy(z.date),c=s.map(m=>({date:m.date.toISOString().split("T")[0],buy:m.buy,sell:m.sell})),l=s.length>0?s[s.length-1].date.toISOString().split("T")[0]:null;return{source:a,series:c,last_update:l}}function bn(a,t="sell"){if(a.length<2)return"N/D";let e=a[a.length-1],s=new Date(e.date);s.setDate(s.getDate()-7);let c=null,l=1/0;for(let p of a){let f=Math.abs(p.date.getTime()-s.getTime());f<l&&(l=f,c=p)}if(!c||c===e)return"N/D";let m=(e[t]-c[t])/c[t]*100;return m>=.5?"Alcista":m<=-.5?"Bajista":"Estable"}function In(a,t="sell"){if(a.length<3)return"N/D";let e=a.slice(-6);if(e.length<3)return"N/D";let s=[];for(let l=1;l<e.length;l++){let m=e[l-1][t],p=e[l][t];if(m!==0){let f=Math.abs((p-m)/m)*100;s.push(f)}}if(s.length<3)return"N/D";let c=s.reduce((l,m)=>l+m,0)/s.length;return c>1?"Alta":c>=.5?"Media":"Baja"}function En(a){if(a.length<10)return"Datos insuficientes";let e=a.slice(-30).map(f=>f.sell-f.buy),s=e[e.length-1],c=e.reduce((f,i)=>f+i,0)/e.length,m=e.map(f=>Math.pow(f-c,2)).reduce((f,i)=>f+i,0)/e.length,p=Math.sqrt(m);return p===0?"Spread estable":s>c+2*p?"Por encima del promedio 30d":s<c-2*p?"Por debajo del promedio 30d":"Dentro del rango normal"}async function Gt(a=30,t=25e3){let e=new Date;e.setDate(e.getDate()-a);let s=["MONEX","Santander","DOF"],c={};for(let I of s){let b=await h.select({date:z.date,buy:z.buyRate,sell:z.sellRate}).from(z).where(Bt(qt(z.source,I),Lt(z.date,e))).orderBy(z.date);c[I]=b.map(y=>({date:y.date,buy:y.buy,sell:y.sell}))}let l={},m=null;for(let I of s){let b=c[I];if(b.length>0){let y=b[b.length-1];l[I]={buy:y.buy,sell:y.sell},(!m||y.date>m)&&(m=y.date)}else l[I]=null}let p=Object.entries(l).filter(([I,b])=>b!==null),f={source:"N/D",rate:0},i={source:"N/D",rate:0};if(p.length>0){let I=p.map(([y,P])=>({source:y,rate:P.buy})),b=p.map(([y,P])=>({source:y,rate:P.sell}));f=I.reduce((y,P)=>P.rate<y.rate?P:y),i=b.reduce((y,P)=>P.rate>y.rate?P:y)}let o=l.DOF,r=o?.buy??0,n=o?.sell??0;if(!o&&p.length>0){let I=p.reduce((y,[P,S])=>y+S.buy,0)/p.length,b=p.reduce((y,[P,S])=>y+S.sell,0)/p.length;r=I,n=b}let d=r>0?(r-f.rate)*t:0,u=n>0?(i.rate-n)*t:0,g=s.map(I=>{let b=c[I],y=l[I];if(!y||b.length===0)return{source:I,buy:0,sell:0,spread:0,spread_status:"Sin datos",trend_7d:"N/D",trend_pct:0,volatility_5d:"N/D"};let P=y.sell-y.buy,S=bn(b),$=In(b),C=En(b),A=(()=>{if(b.length<2)return 0;let D=b[b.length-1],k=new Date(D.date);k.setDate(k.getDate()-7);let Y=null,Ee=1/0;for(let Ue of b){let Pt=Math.abs(Ue.date.getTime()-k.getTime());Pt<Ee&&(Ee=Pt,Y=Ue)}return!Y||Y===D?0:(D.sell-Y.sell)/Y.sell*100})();return{source:I,buy:y.buy,sell:y.sell,spread:parseFloat(P.toFixed(4)),spread_status:C,trend_7d:S,trend_pct:parseFloat(A.toFixed(2)),volatility_5d:$}});return{as_of:m?m.toISOString():new Date().toISOString(),rates:l,best_buy:f,best_sell:i,baseline:{source:o?"DOF":"Promedio",buy:parseFloat(r.toFixed(4)),sell:parseFloat(n.toFixed(4))},savings_calculator:{if_buy_at_best_vs_baseline:parseFloat(d.toFixed(2)),if_sell_at_best_vs_baseline:parseFloat(u.toFixed(2))},spreads_analysis:g}}import{Resend as Sn}from"resend";import nt from"fs";import Wt from"path";var ot=class{logDir;constructor(){this.logDir=Wt.join(process.cwd(),"logs"),this.ensureLogDirectory()}ensureLogDirectory(){nt.existsSync(this.logDir)||nt.mkdirSync(this.logDir,{recursive:!0})}formatMessage(t,e,s){let c=new Date().toISOString(),l=s?` | ${JSON.stringify(s)}`:"";return`[${c}] ${t}: ${e}${l}`}writeToFile(t,e,s){let c=Wt.join(this.logDir,`${t.toLowerCase()}.log`),l=this.formatMessage(t,e,s)+`
`;nt.appendFileSync(c,l)}shouldLog(t){let e=process.env.LOG_LEVEL||"INFO",s=["ERROR","WARN","INFO","DEBUG"],c=s.indexOf(e);return s.indexOf(t)<=c}error(t,e){this.shouldLog("ERROR")&&(console.error(`\u{1F534} ${t}`,e||""),this.writeToFile("ERROR",t,e))}warn(t,e){this.shouldLog("WARN")&&(console.warn(`\u{1F7E1} ${t}`,e||""),this.writeToFile("WARN",t,e))}info(t,e){this.shouldLog("INFO")&&(console.log(`\u{1F535} ${t}`,e||""),this.writeToFile("INFO",t,e))}debug(t,e){this.shouldLog("DEBUG")&&(console.log(`\u{1F7E2} ${t}`,e||""),this.writeToFile("DEBUG",t,e))}auth(t,e){this.info(`[AUTH] ${t}`,e)}upload(t,e){this.info(`[UPLOAD] ${t}`,e)}treasury(t,e){this.info(`[TREASURY] ${t}`,e)}security(t,e){this.warn(`[SECURITY] ${t}`,e)}},oe=new ot;var st=class{resend=null;isConfigured=!1;constructor(){this.initialize()}initialize(){let t=process.env.RESEND_API_KEY;if(!t||t==="your-resend-api-key-here"){oe.warn("RESEND_API_KEY no est\xE1 configurada. Emails deshabilitados."),this.isConfigured=!1;return}try{this.resend=new Sn(t),this.isConfigured=!0,oe.info("Email service inicializado con Resend")}catch(e){oe.error("Error inicializando email service:",{error:e}),this.isConfigured=!1}}async sendEmail(t,e="treasury"){if(!this.isConfigured||!this.resend)return oe.warn("Email service no configurado. Simulando env\xEDo..."),{success:!0,messageId:"simulated-"+Date.now(),error:"Email service no configurado - modo simulaci\xF3n"};let s=process.env.CLIENT_DOMAIN||"grupoorsega.com.mx",c=e==="treasury"?`Lolita - Tesorer\xEDa <lolita@${s}>`:`Thalia - Log\xEDstica <thalia@${s}>`;try{let l=await this.resend.emails.send({from:t.from||c,to:t.to,subject:t.subject,html:t.html});return oe.info("Email enviado exitosamente",{to:t.to,messageId:l.data?.id}),{success:!0,messageId:l.data?.id}}catch(l){return oe.error("Error enviando email:",{error:l instanceof Error?l.message:String(l),to:t.to}),{success:!1,error:l instanceof Error?l.message:String(l)}}}async sendPaymentReminder(t,e,s,c){let l=`Recordatorio de Pago - ${e}`,m=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #2563eb;">Recordatorio de Pago</h2>
        <p>Estimado/a ${e},</p>
        <p>Le recordamos que tiene un pago pendiente por procesar:</p>
        <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <p><strong>Monto:</strong> $${s.toLocaleString("es-MX")} MXN</p>
          <p><strong>Fecha l\xEDmite:</strong> ${c}</p>
        </div>
        <p>Por favor, proceda con el pago correspondiente.</p>
        <p>Saludos cordiales,<br><strong>Lolita</strong><br>Equipo de Tesorer\xEDa - Econova</p>
      </div>
    `;return this.sendEmail({to:t,subject:l,html:m},"treasury")}async sendComplementRequest(t,e,s){let c=`Solicitud de Complemento de Pago - ${e}`,l=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #dc2626;">Solicitud de Complemento de Pago</h2>
        <p>Estimado/a ${e},</p>
        <p>Se requiere complemento de pago para el comprobante:</p>
        <div style="background-color: #fef2f2; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #dc2626;">
          <p><strong>ID de Comprobante:</strong> ${s}</p>
          <p><strong>Estado:</strong> Pendiente de complemento</p>
        </div>
        <p>Por favor, proporcione la documentaci\xF3n adicional requerida.</p>
        <p>Saludos cordiales,<br><strong>Lolita</strong><br>Equipo de Tesorer\xEDa - Econova</p>
      </div>
    `;return this.sendEmail({to:t,subject:c,html:l},"treasury")}async sendPaymentConfirmation(t,e,s,c){let l=`Confirmaci\xF3n de Pago - ${e}`,m=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #059669;">Pago Confirmado</h2>
        <p>Estimado/a ${e},</p>
        <p>Su pago ha sido procesado exitosamente:</p>
        <div style="background-color: #f0fdf4; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #059669;">
          <p><strong>Monto:</strong> $${s.toLocaleString("es-MX")} MXN</p>
          <p><strong>Referencia:</strong> ${c}</p>
          <p><strong>Estado:</strong> Procesado</p>
        </div>
        <p>Gracias por su pago puntual.</p>
        <p>Saludos cordiales,<br>Equipo de Tesorer\xEDa</p>
      </div>
    `;return this.sendEmail({to:t,subject:l,html:m})}async sendShipmentUpdate(t,e,s,c,l){let m=`Actualizaci\xF3n de Env\xEDo - ${e}`,p=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #059669;">Actualizaci\xF3n de Env\xEDo</h2>
        <p>Estimado/a ${e},</p>
        <p>Le informamos sobre el estado actual de su env\xEDo:</p>
        <div style="background-color: #f0fdf4; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #059669;">
          <p><strong>ID de Env\xEDo:</strong> ${s}</p>
          <p><strong>Estado:</strong> ${c}</p>
          ${l?`<p><strong>N\xFAmero de Rastreo:</strong> ${l}</p>`:""}
        </div>
        <p>Gracias por confiar en nuestros servicios log\xEDsticos.</p>
        <p>Saludos cordiales,<br><strong>Thalia</strong><br>Equipo de Log\xEDstica - Econova</p>
      </div>
    `;return this.sendEmail({to:t,subject:m,html:p},"logistics")}async sendDeliveryNotification(t,e,s,c){let l=`Notificaci\xF3n de Entrega - ${e}`,m=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #2563eb;">Notificaci\xF3n de Entrega</h2>
        <p>Estimado/a ${e},</p>
        <p>Su paquete est\xE1 programado para entrega:</p>
        <div style="background-color: #eff6ff; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #2563eb;">
          <p><strong>Fecha de Entrega:</strong> ${s}</p>
          <p><strong>Horario:</strong> ${c}</p>
        </div>
        <p>Por favor, aseg\xFArese de que alguien est\xE9 disponible para recibir el paquete.</p>
        <p>Saludos cordiales,<br><strong>Thalia</strong><br>Equipo de Log\xEDstica - Econova</p>
      </div>
    `;return this.sendEmail({to:t,subject:l,html:m},"logistics")}isEmailConfigured(){return this.isConfigured}},Jt=new st;$e();function wn(){let a=new Date,t=a.getDate(),e=Math.ceil(t/7),c=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"][a.getMonth()],l=a.getFullYear(),m=`Semana ${e}`,p=`${m} - ${c} ${l}`;return{weekNumber:e,weekText:m,month:c,year:l,period:p}}async function Ht(a){try{if(!a||!a.value||!a.companyId)throw new Error("Faltan datos obligatorios: value y companyId son requeridos");console.log("[UpdateWeeklySales] Iniciando actualizaci\xF3n con datos:",a);let t;a.adminOverride&&a.weekNumber&&a.month&&a.year?(t={weekNumber:parseInt(a.weekNumber.replace("Semana ","")),weekText:a.weekNumber,month:a.month,year:a.year,period:`${a.weekNumber} - ${a.month} ${a.year}`},console.log("[UpdateWeeklySales] Modo ADMINISTRADOR - Per\xEDodo manual:",t)):(t=wn(),console.log("[UpdateWeeklySales] Modo NORMAL - Per\xEDodo autom\xE1tico:",t));let e=await E.getKpis(),s=a.companyId,c=e.find(k=>k.name.includes("Volumen de ventas")&&k.companyId===s);if(!c)throw new Error(`No se encontr\xF3 el KPI de volumen de ventas para la compa\xF1\xEDa ID: ${s}`);console.log(`[UpdateWeeklySales] Encontrado KPI: ${c.name} (ID: ${c.id})`);let p=!!(await E.getKpiValuesByKpi(c.id)).find(k=>k.period===t.period);console.log(`[UpdateWeeklySales] ${p?"Actualizando":"Creando"} registro para: ${t.period}`);let f=parseFloat(c.target.replace(/[^0-9.,]/g,"").replace(",","")),i=Math.round(f/12),o=Math.round(i/4);console.log(`[UpdateWeeklySales] Objetivos - Anual: ${f}, Mensual: ${i}, Semanal: ${o}`);let r=new Intl.NumberFormat("es-MX").format(a.value),n=s===1?"KG":"unidades",d=`${r} ${n}`,u=a.value/o*100,g=u>=95?"complies":u>=85?"alert":"not_compliant",I={kpiId:c.id,userId:a.userId||1,value:d,period:t.period,compliancePercentage:`${u.toFixed(1)}%`,status:g,comments:`${p?"Actualizaci\xF3n":"Registro"} semanal autom\xE1tico`,updatedBy:a.userId||1};console.log("[UpdateWeeklySales] Creando nuevo registro semanal");let b=await E.createKpiValue(I),P=(await E.getKpiValuesByKpi(c.id)).filter(k=>k.period.includes(t.month)&&k.period.includes(t.year.toString())&&k.period.includes("Semana")),S=0;P.forEach(k=>{let Y=parseFloat(k.value.replace(/[^0-9.,]+/g,"").replace(",","."));isNaN(Y)||(S+=Y)});let $=new Intl.NumberFormat("es-MX").format(S);console.log(`[UpdateWeeklySales] Total mensual recalculado: ${$} ${n} (${P.length} semanas)`);let C=S/i*100,A=C>=95?"complies":C>=85?"alert":"not_compliant",D=`Total mensual: ${$} ${n} de ${P.length} semanas (${C.toFixed(1)}% del objetivo)`;return console.log(`[UpdateWeeklySales] M\xE9tricas mensuales - Compliance: ${C.toFixed(1)}%, Status: ${A}`),console.log("[UpdateWeeklySales] \u2705 Proceso completado exitosamente"),{success:!0,message:`${p?"Actualizaci\xF3n":"Registro"} semanal completado exitosamente`,weeklyRecord:b,currentPeriod:t,monthlyPreview:{totalValue:S,formattedValue:`${$} ${n}`,compliancePercentage:`${C.toFixed(1)}%`,status:A,weekCount:P.length,comment:D}}}catch(t){return console.error("[UpdateWeeklySales] \u274C Error al procesar actualizaci\xF3n:",t),{success:!1,message:t?.message||"Error desconocido al actualizar ventas semanales"}}}async function at(a,t,e){try{let s=new Date,c=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],l=t||(s.getMonth()===0?"Diciembre":c[s.getMonth()-1]),m=e||(s.getMonth()===0?s.getFullYear()-1:s.getFullYear());console.log(`[AutoCloseMonth] Cerrando mes ${l} ${m} para empresa ${a}`);let f=(await E.getKpis()).find(P=>P.name.includes("Volumen de ventas")&&P.companyId===a);if(!f)return console.error(`[AutoCloseMonth] No se encontr\xF3 KPI de volumen de ventas para empresa ${a}`),!1;let o=(await E.getKpiValuesByKpi(f.id)).filter(P=>P.period.includes(l)&&P.period.includes(m.toString())&&P.period.includes("Semana"));if(o.length===0)return console.log(`[AutoCloseMonth] No hay registros semanales para ${l} ${m}`),!1;let r=0;o.forEach(P=>{let S=parseFloat(P.value.replace(/[^0-9.,]+/g,"").replace(",","."));isNaN(S)||(r+=S)});let n=parseFloat(f.target.replace(/[^0-9.,]+/g,"").replace(",","")),d=Math.round(n/12),u=r/d*100,g=u>=95?"complies":u>=85?"alert":"not_compliant",I=a===1?"KG":"unidades",b=new Intl.NumberFormat("es-MX").format(r),y={kpiId:f.id,userId:o[o.length-1]?.userId||1,value:`${b} ${I}`,period:`${l} ${m}`,compliancePercentage:`${u.toFixed(1)}%`,status:g,comments:`Cierre autom\xE1tico mensual - suma de ${o.length} semanas`,updatedBy:null};return await E.createKpiValue(y),console.log(`[AutoCloseMonth] \u2705 Mes ${l} ${m} cerrado - Total: ${b} ${I}`),!0}catch(s){return console.error("[AutoCloseMonth] \u274C Error al cerrar mes:",s),!1}}import Yt from"@sendgrid/mail";if(!process.env.SENDGRID_API_KEY)throw new Error("SENDGRID_API_KEY environment variable must be set");Yt.setApiKey(process.env.SENDGRID_API_KEY);async function it(a){try{return await Yt.send({to:a.to,from:a.from,subject:a.subject,text:a.text,html:a.html}),console.log(`[Email] Correo enviado exitosamente a ${a.to}`),!0}catch(t){return console.error("[Email] Error al enviar correo:",t),!1}}function Xt(a,t,e,s,c,l){let m=l==="urgent"?"#ef4444":l==="high"?"#f59e0b":l==="normal"?"#3b82f6":"#6b7280",p=c==="success"?"\u2705":c==="warning"?"\u26A0\uFE0F":c==="error"?"\u274C":"\u2139\uFE0F",f=`
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Mensaje del Equipo - Econova</title>
      <style>
        body {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
          line-height: 1.6;
          color: #333;
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
          background-color: #f8fafc;
        }
        .container {
          background: white;
          border-radius: 12px;
          padding: 30px;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          border: 1px solid #e2e8f0;
        }
        .header {
          text-align: center;
          margin-bottom: 30px;
          padding-bottom: 20px;
          border-bottom: 2px solid #273949;
        }
        .logo {
          font-size: 24px;
          font-weight: bold;
          color: #273949;
          margin-bottom: 10px;
        }
        .subtitle {
          color: #64748b;
          font-size: 14px;
        }
        .message-header {
          display: flex;
          align-items: center;
          margin-bottom: 20px;
          padding: 15px;
          background: #f1f5f9;
          border-radius: 8px;
          border-left: 4px solid ${m};
        }
        .message-icon {
          font-size: 24px;
          margin-right: 15px;
        }
        .message-info {
          flex: 1;
        }
        .message-title {
          font-size: 18px;
          font-weight: 600;
          color: #1e293b;
          margin-bottom: 5px;
        }
        .message-meta {
          font-size: 14px;
          color: #64748b;
        }
        .message-content {
          background: #fefefe;
          padding: 25px;
          border-radius: 8px;
          border: 1px solid #e2e8f0;
          margin: 20px 0;
          font-size: 16px;
          line-height: 1.7;
        }
        .sender-info {
          margin-top: 25px;
          padding-top: 20px;
          border-top: 1px solid #e2e8f0;
          text-align: center;
        }
        .sender-name {
          font-weight: 600;
          color: #273949;
          margin-bottom: 5px;
        }
        .company-info {
          color: #64748b;
          font-size: 14px;
        }
        .footer {
          margin-top: 30px;
          padding-top: 20px;
          border-top: 1px solid #e2e8f0;
          text-align: center;
          color: #64748b;
          font-size: 12px;
        }
        .priority-badge {
          display: inline-block;
          padding: 4px 8px;
          border-radius: 12px;
          font-size: 12px;
          font-weight: 500;
          background: ${m};
          color: white;
          margin-left: 10px;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <div class="logo">ECONOVA</div>
          <div class="subtitle">Sistema de Gesti\xF3n de KPIs</div>
        </div>
        
        <div class="message-header">
          <div class="message-icon">${p}</div>
          <div class="message-info">
            <div class="message-title">
              ${e}
              <span class="priority-badge">${l==="urgent"?"Urgente":l==="high"?"Alta":l==="normal"?"Normal":"Baja"}</span>
            </div>
            <div class="message-meta">Mensaje del equipo para ${t}</div>
          </div>
        </div>
        
        <div class="message-content">
          ${s.replace(/\n/g,"<br>")}
        </div>
        
        <div class="sender-info">
          <div class="sender-name">Enviado por: Mario Reynoso (Gerente General)</div>
          <div class="company-info">Econova - Dura International & Grupo Orsega</div>
        </div>
        
        <div class="footer">
          <p>Este mensaje fue enviado desde el sistema de gesti\xF3n de KPIs de Econova.</p>
          <p>Para responder, inicia sesi\xF3n en el sistema o contacta directamente al remitente.</p>
        </div>
      </div>
    </body>
    </html>
  `,i=`
ECONOVA - Sistema de Gesti\xF3n de KPIs

${p} ${e}
Prioridad: ${l==="urgent"?"Urgente":l==="high"?"Alta":l==="normal"?"Normal":"Baja"}

Para: ${t}
De: Mario Reynoso (Gerente General)

Mensaje:
${s}

---
Este mensaje fue enviado desde el sistema de gesti\xF3n de KPIs de Econova.
Para responder, inicia sesi\xF3n en el sistema o contacta directamente al remitente.
  `.trim();return{html:f,text:i}}import{MailService as Pn}from"@sendgrid/mail";if(!process.env.SENDGRID_API_KEY)throw new Error("SENDGRID_API_KEY environment variable must be set");var Qt=new Pn;Qt.setApiKey(process.env.SENDGRID_API_KEY);async function Zt(a){try{let t={to:a.to,from:a.from,subject:a.subject};return a.text&&(t.text=a.text),a.html&&(t.html=a.html),a.attachments&&(t.attachments=a.attachments),await Qt.send(t),!0}catch(t){return console.error("SendGrid email error:",t),!1}}function er(a,t){let e=`Comprobantes de Pago - ${a.supplier_name}`,s=t.map(m=>`<li>${m.file_name} (${m.file_type.toUpperCase()})</li>`).join(""),c=`
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #273949; color: white; padding: 20px; text-align: center; }
        .content { background: #f9f9f9; padding: 20px; }
        .details { background: white; padding: 15px; margin: 15px 0; border-radius: 4px; }
        .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>Comprobantes de Pago</h1>
        </div>
        <div class="content">
          <p>Estimado proveedor,</p>
          <p>Le enviamos los siguientes comprobantes de pago:</p>
          <div class="details">
            <p><strong>Proveedor:</strong> ${a.supplier_name}</p>
            <p><strong>Monto:</strong> ${a.currency} ${a.amount}</p>
            <p><strong>Referencia:</strong> ${a.reference||"N/A"}</p>
          </div>
          <p><strong>Archivos adjuntos:</strong></p>
          <ul>
            ${s}
          </ul>
          <p>Saludos cordiales,<br>Equipo de Tesorer\xEDa ECONOVA</p>
        </div>
        <div class="footer">
          <p>Este es un correo autom\xE1tico. No responder.</p>
        </div>
      </div>
    </body>
    </html>
  `,l=`Comprobantes de Pago

Proveedor: ${a.supplier_name}
Monto: ${a.currency} ${a.amount}
Referencia: ${a.reference||"N/A"}

Archivos adjuntos:
${t.map(m=>`- ${m.file_name}`).join(`
`)}

Saludos,
Equipo de Tesorer\xEDa ECONOVA`;return{subject:e,html:c,text:l}}import{Router as Dn}from"express";import{randomUUID as lt}from"node:crypto";import{Pool as xn}from"pg";var Re=process.env.DATABASE_URL;if(!Re)throw new Error("DATABASE_URL no est\xE1 definida");var Tn=Re.includes("sslmode=")?Re:Re+(Re.includes("?")?"&":"?")+"sslmode=require",An=new xn({connectionString:Tn,ssl:{rejectUnauthorized:!1},idleTimeoutMillis:3e4,connectionTimeoutMillis:1e4,max:8});async function q(a,t){let e=await An.connect();try{return await e.query(a,t)}finally{e.release()}}import{z as U}from"zod";var re=()=>U.string().uuid(),ct=U.string().email().optional().or(U.literal("").transform(()=>{})),Nn=U.enum(["pendiente","asignando_transporte","confirmado","en_camino","retenido","entregado","cerrado"]),_n=U.enum(["pickup","customs","delay","delivery","note"]),tr=U.object({id:re(),name:U.string().min(2),rfc:U.string().optional(),email:ct,phone:U.string().optional(),billingAddr:U.string().optional(),shippingAddr:U.string().optional(),isActive:U.boolean().default(!0)}),rr=tr.omit({id:!0}),nr=tr.partial().extend({id:re()}),or=U.object({id:re(),name:U.string().min(2),email:ct,phone:U.string().optional(),contactName:U.string().optional(),notes:U.string().optional(),rating:U.number().min(0).max(5).optional(),isActive:U.boolean().default(!0)}),sr=or.omit({id:!0}),ar=or.partial().extend({id:re()}),Cn=U.object({id:re(),providerId:re(),type:U.enum(["email","api","portal"]),value:U.string().min(3),isDefault:U.boolean().default(!1)}),ir=Cn.omit({id:!0}),cr=U.object({id:re(),reference:U.string().min(2),clientId:re(),providerId:re().optional(),origin:U.string().min(2),destination:U.string().min(2),incoterm:U.string().optional(),status:Nn.default("pendiente"),etd:U.string().datetime().optional(),eta:U.string().datetime().optional()}),lr=cr.omit({id:!0,status:!0}).extend({notifyClient:U.boolean().default(!1),customerEmail:ct}),dr=cr.partial().extend({id:re()}),$n=U.object({id:re(),shipmentId:re(),type:_n,at:U.string().datetime(),lat:U.number().optional(),lng:U.number().optional(),notes:U.string().optional()}),ur=$n.omit({id:!0}),Rn=U.object({id:re(),shipmentId:re(),kind:U.enum(["bl","factura","foto","otro"]),fileUrl:U.string().url(),uploadedAt:U.string().datetime().optional(),uploadedBy:U.string().optional()}),mr=Rn.omit({id:!0});var fe=Dn();fe.get("/clients",async(a,t)=>{try{let e=await q(`
      SELECT id, name, rfc, email, phone, billing_addr, shipping_addr, is_active, created_at, updated_at 
      FROM client 
      WHERE is_active = TRUE 
      ORDER BY name
    `);t.json(e.rows)}catch(e){console.error("Error fetching clients:",e),t.status(500).json({error:"Failed to fetch clients"})}});fe.post("/clients",async(a,t)=>{try{let e=rr.parse(a.body),s=lt(),c=await q(`
      INSERT INTO client (id, name, rfc, email, phone, billing_addr, shipping_addr, is_active)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
      RETURNING *
    `,[s,e.name,e.rfc,e.email,e.phone,e.billingAddr,e.shippingAddr,e.isActive]);t.status(201).json(c.rows[0])}catch(e){console.error("Error creating client:",e),t.status(400).json({error:"Failed to create client"})}});fe.patch("/clients/:id",async(a,t)=>{try{let e=nr.parse({...a.body,id:a.params.id}),s=[],c=[],l=1;if(Object.entries(e).forEach(([p,f])=>{if(p!=="id"&&f!==void 0){let i=p==="billingAddr"?"billing_addr":p==="shippingAddr"?"shipping_addr":p==="isActive"?"is_active":p;s.push(`${i} = $${l}`),c.push(f),l++}}),s.length===0)return t.status(400).json({error:"No fields to update"});c.push(a.params.id);let m=await q(`
      UPDATE client SET ${s.join(", ")}, updated_at = NOW()
      WHERE id = $${l}
      RETURNING *
    `,c);if(m.rows.length===0)return t.status(404).json({error:"Client not found"});t.json(m.rows[0])}catch(e){console.error("Error updating client:",e),t.status(400).json({error:"Failed to update client"})}});fe.get("/providers",async(a,t)=>{try{let e=await q(`
      SELECT p.*, 
        array_agg(
          json_build_object(
            'id', pc.id,
            'type', pc.type,
            'value', pc.value,
            'isDefault', pc.is_default
          )
        ) FILTER (WHERE pc.id IS NOT NULL) as channels
      FROM provider p
      LEFT JOIN provider_channel pc ON p.id = pc.provider_id
      WHERE p.is_active = TRUE
      GROUP BY p.id
      ORDER BY p.name
    `);t.json(e.rows)}catch(e){console.error("Error fetching providers:",e),t.status(500).json({error:"Failed to fetch providers"})}});fe.post("/providers",async(a,t)=>{try{let e=sr.parse(a.body),s=lt(),c=await q(`
      INSERT INTO provider (id, name, email, phone, contact_name, notes, rating, is_active)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
      RETURNING *
    `,[s,e.name,e.email,e.phone,e.contactName,e.notes,e.rating,e.isActive]);t.status(201).json(c.rows[0])}catch(e){console.error("Error creating provider:",e),t.status(400).json({error:"Failed to create provider"})}});fe.patch("/providers/:id",async(a,t)=>{try{let e=ar.parse({...a.body,id:a.params.id}),s=[],c=[],l=1;if(Object.entries(e).forEach(([p,f])=>{if(p!=="id"&&f!==void 0){let i=p==="contactName"?"contact_name":p==="isActive"?"is_active":p;s.push(`${i} = $${l}`),c.push(f),l++}}),s.length===0)return t.status(400).json({error:"No fields to update"});c.push(a.params.id);let m=await q(`
      UPDATE provider SET ${s.join(", ")}, updated_at = NOW()
      WHERE id = $${l}
      RETURNING *
    `,c);if(m.rows.length===0)return t.status(404).json({error:"Provider not found"});t.json(m.rows[0])}catch(e){console.error("Error updating provider:",e),t.status(400).json({error:"Failed to update provider"})}});fe.post("/providers/:id/channels",async(a,t)=>{try{let e=ir.parse({...a.body,providerId:a.params.id}),s=lt(),c=await q(`
      INSERT INTO provider_channel (id, provider_id, type, value, is_default)
      VALUES ($1, $2, $3, $4, $5)
      RETURNING *
    `,[s,e.providerId,e.type,e.value,e.isDefault]);t.status(201).json(c.rows[0])}catch(e){console.error("Error creating provider channel:",e),t.status(400).json({error:"Failed to create provider channel"})}});import{Router as kn}from"express";import{randomUUID as ve}from"node:crypto";mt();var ue=kn();ue.get("/shipments",async(a,t)=>{try{let{status:e,q:s,clientId:c,providerId:l,page:m="1",limit:p="20"}=a.query,f="1=1",i=[],o=1;e&&(f+=` AND s.status = $${o}`,i.push(e),o++),c&&(f+=` AND s.client_id = $${o}`,i.push(c),o++),l&&(f+=` AND s.provider_id = $${o}`,i.push(l),o++),s&&(f+=` AND (s.reference ILIKE $${o} OR s.origin ILIKE $${o} OR s.destination ILIKE $${o})`,i.push(`%${s}%`),o++);let r=(parseInt(m)-1)*parseInt(p);i.push(parseInt(p),r);let n=await q(`
      SELECT s.*,
        c.name as client_name,
        c.email as client_email,
        p.name as provider_name,
        p.email as provider_email
      FROM shipment s
      LEFT JOIN client c ON s.client_id = c.id
      LEFT JOIN provider p ON s.provider_id = p.id
      WHERE ${f}
      ORDER BY s.created_at DESC
      LIMIT $${o} OFFSET $${o+1}
    `,i);t.json(n.rows)}catch(e){console.error("Error fetching shipments:",e),t.status(500).json({error:"Failed to fetch shipments"})}});ue.get("/shipments/:id",async(a,t)=>{try{let e=await q(`
      SELECT s.*,
        c.name as client_name, c.email as client_email,
        p.name as provider_name, p.email as provider_email
      FROM shipment s
      LEFT JOIN client c ON s.client_id = c.id
      LEFT JOIN provider p ON s.provider_id = p.id
      WHERE s.id = $1
    `,[a.params.id]);if(e.rows.length===0)return t.status(404).json({error:"Shipment not found"});let s=await q(`
      SELECT * FROM shipment_event 
      WHERE shipment_id = $1 
      ORDER BY at DESC
    `,[a.params.id]),c=await q(`
      SELECT * FROM shipment_doc 
      WHERE shipment_id = $1 
      ORDER BY uploaded_at DESC
    `,[a.params.id]),l=e.rows[0];l.events=s.rows,l.documents=c.rows,t.json(l)}catch(e){console.error("Error fetching shipment:",e),t.status(500).json({error:"Failed to fetch shipment"})}});ue.post("/shipments",async(a,t)=>{try{let e=lr.parse(a.body),s=ve(),c=await q(`
      INSERT INTO shipment (id, reference, client_id, provider_id, origin, destination, incoterm, etd, eta)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
      RETURNING *
    `,[s,e.reference,e.clientId,e.providerId,e.origin,e.destination,e.incoterm,e.etd,e.eta]);t.status(201).json(c.rows[0])}catch(e){console.error("Error creating shipment:",e),t.status(400).json({error:"Failed to create shipment"})}});ue.patch("/shipments/:id",async(a,t)=>{try{let e=dr.parse({...a.body,id:a.params.id}),s=[],c=[],l=1;if(Object.entries(e).forEach(([p,f])=>{if(p!=="id"&&f!==void 0){let i=p==="clientId"?"client_id":p==="providerId"?"provider_id":p;s.push(`${i} = $${l}`),c.push(f),l++}}),s.length===0)return t.status(400).json({error:"No fields to update"});c.push(a.params.id);let m=await q(`
      UPDATE shipment SET ${s.join(", ")}, updated_at = NOW()
      WHERE id = $${l}
      RETURNING *
    `,c);if(m.rows.length===0)return t.status(404).json({error:"Shipment not found"});t.json(m.rows[0])}catch(e){console.error("Error updating shipment:",e),t.status(400).json({error:"Failed to update shipment"})}});ue.post("/shipments/:id/events",async(a,t)=>{try{let e=ur.parse({...a.body,shipmentId:a.params.id}),s=ve(),c=await q(`
      INSERT INTO shipment_event (id, shipment_id, type, at, lat, lng, notes, created_by)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
      RETURNING *
    `,[s,e.shipmentId,e.type,e.at,e.lat,e.lng,e.notes,"system"]);t.status(201).json(c.rows[0])}catch(e){console.error("Error creating shipment event:",e),t.status(400).json({error:"Failed to create shipment event"})}});ue.post("/shipments/:id/docs",async(a,t)=>{try{let e=mr.parse({...a.body,shipmentId:a.params.id}),s=ve(),c=await q(`
      INSERT INTO shipment_doc (id, shipment_id, kind, file_url, uploaded_by)
      VALUES ($1, $2, $3, $4, $5)
      RETURNING *
    `,[s,e.shipmentId,e.kind,e.fileUrl,e.uploadedBy]);t.status(201).json(c.rows[0])}catch(e){console.error("Error creating shipment document:",e),t.status(400).json({error:"Failed to create shipment document"})}});ue.post("/shipments/:id/request-transport",async(a,t)=>{try{let{providerId:e,pickupWindow:s,notes:c}=a.body,l=a.params.id;await q(`
      UPDATE shipment 
      SET status = 'asignando_transporte', provider_id = $1, updated_at = NOW()
      WHERE id = $2
    `,[e,l]);let m=await q(`
      SELECT s.*, c.name as client_name, p.name as provider_name, p.email as provider_email
      FROM shipment s
      JOIN client c ON s.client_id = c.id
      JOIN provider p ON s.provider_id = p.id
      WHERE s.id = $1
    `,[l]);if(m.rows.length===0)return t.status(404).json({error:"Shipment not found"});let p=m.rows[0],f=ve(),i=ve();try{await ut({to:p.provider_email,shipment:p,confirmToken:f,rejectToken:i,pickupWindow:s,notes:c}),await q(`
        INSERT INTO shipment_event (id, shipment_id, type, at, notes, created_by)
        VALUES ($1, $2, 'note', NOW(), $3, 'system')
      `,[ve(),l,`Solicitud de transporte enviada a ${p.provider_name}`]),t.json({success:!0,message:"Transport request sent successfully"})}catch(o){console.error("Error sending email:",o),t.status(500).json({error:"Failed to send transport request"})}}catch(e){console.error("Error requesting transport:",e),t.status(500).json({error:"Failed to request transport"})}});ue.post("/shipments/:id/confirm",async(a,t)=>{try{let{token:e,pickupAt:s}=a.query,c=a.params.id;if(!e)return t.status(400).json({error:"Invalid token"});await q(`
      UPDATE shipment 
      SET status = 'confirmado', updated_at = NOW()
      WHERE id = $1
    `,[c]),await q(`
      INSERT INTO shipment_event (id, shipment_id, type, at, notes, created_by)
      VALUES ($1, $2, 'pickup', $3, 'Transporte confirmado por proveedor', 'provider')
    `,[ve(),c,s||new Date().toISOString()]),t.json({success:!0,message:"Transport confirmed successfully"})}catch(e){console.error("Error confirming transport:",e),t.status(500).json({error:"Failed to confirm transport"})}});ue.post("/shipments/:id/reject",async(a,t)=>{try{let{token:e,reason:s}=a.query,c=a.params.id;if(!e)return t.status(400).json({error:"Invalid token"});await q(`
      UPDATE shipment 
      SET status = 'pendiente', provider_id = NULL, updated_at = NOW()
      WHERE id = $1
    `,[c]),await q(`
      INSERT INTO shipment_event (id, shipment_id, type, at, notes, created_by)
      VALUES ($1, $2, 'note', NOW(), $3, 'provider')
    `,[ve(),c,`Transporte rechazado: ${s||"Sin raz\xF3n especificada"}`]),t.json({success:!0,message:"Transport rejected"})}catch(e){console.error("Error rejecting transport:",e),t.status(500).json({error:"Failed to reject transport"})}});import Ne from"path";import be from"fs";import{neon as qe}from"@neondatabase/serverless";import _e from"multer";function B(a){if(!a.user)throw new Error("Unauthorized");return a.user}var Ms=qe(process.env.DATABASE_URL);function we(a){if(!a)return a;let{password:t,...e}=a;return e}function zn(a){return a.map(we)}function Pe(a){if(!a||typeof a!="object")return a;let t=["password","token","authorization","apiKey","secret","jwt"],e=Array.isArray(a)?[]:{};for(let[s,c]of Object.entries(a))t.some(l=>s.toLowerCase().includes(l))?e[s]="[REDACTED]":typeof c=="object"&&c!==null?e[s]=Pe(c):e[s]=c;return e}function xr(a){if(typeof a=="number")return a;if(typeof a!="string")return NaN;let t=a.replace(/[^0-9.-]/g,"");return parseFloat(t)}function Gn(a){let t=["rotaci\xF3n de cuentas por cobrar","velocidad de rotaci\xF3n","tiempo de","d\xEDas de","plazo de","demora"],e=a.toLowerCase();return t.some(s=>e.includes(s)&&!e.includes("entrega"))}async function Wn(a,t,e,s,c){try{if([{from:"complies",to:"not_compliant"},{from:"alert",to:"not_compliant"},{from:"not_compliant",to:"complies"}].some(p=>p.from===e&&p.to===s)){let p={complies:"En cumplimiento",alert:"En alerta",not_compliant:"No cumple"},f={userId:t.id,title:`Cambio de estado en KPI: ${a.name}`,message:`El KPI "${a.name}" ha cambiado de "${p[e]}" a "${p[s]}"`,type:s==="complies"?"success":"warning",isRead:!1};await c.createNotification(f),console.log(`[KPI Notification] Notificaci\xF3n creada para cambio de estado: ${a.name}`)}}catch(l){console.error("Error creating KPI status change notification:",l)}}function Tr(a){let t=a.listen,e=vt({windowMs:15*60*1e3,max:5,message:"Demasiados intentos de login. Por favor, intenta de nuevo en 15 minutos.",standardHeaders:!0,legacyHeaders:!1}),s=vt({windowMs:60*60*1e3,max:3,message:"Demasiados intentos de registro. Por favor, intenta m\xE1s tarde.",standardHeaders:!0,legacyHeaders:!1}),c=vt({windowMs:60*60*1e3,max:20,message:"L\xEDmite de uploads alcanzado. Por favor, intenta en 1 hora.",standardHeaders:!0,legacyHeaders:!1});a.get("/health",w,Te,(i,o)=>{let r=process.env.NODE_ENV||"undefined",n=a.get("env"),d={status:"ok",timestamp:new Date().toISOString(),environment:{NODE_ENV:r,express_env:n,is_production:n==="production"},server:{uptime:process.uptime(),memory:process.memoryUsage(),port:5e3}};o.json(d)}),a.get("/env-check",w,Te,(i,o)=>{let r=process.env.NODE_ENV||"undefined",n=a.get("env"),d={cwd:process.cwd(),script_dir:import.meta.dirname,dist_index:Ne.resolve(import.meta.dirname,"index.js"),dist_public:Ne.resolve(import.meta.dirname,"public"),dist_public_index:Ne.resolve(import.meta.dirname,"public","index.html")},u={dist_index_exists:!1,dist_public_exists:!1,dist_public_index_exists:!1};try{u.dist_index_exists=be.existsSync(d.dist_index),u.dist_public_exists=be.existsSync(d.dist_public),u.dist_public_index_exists=be.existsSync(d.dist_public_index)}catch{}let g=["DATABASE_URL","JWT_SECRET","SENDGRID_API_KEY","REPL_ID","REPL_SLUG"],I={};g.forEach(y=>{let P=!!process.env[y],S=process.env[y]?.length||0;I[y]={exists:P,length:P?S:0,status:P?"SET":"MISSING"}});let b={timestamp:new Date().toISOString(),environment:{NODE_ENV:r,express_env:n,is_production:n==="production"},paths:d,file_checks:u,env_variables:I,critical_issues:[]};I.JWT_SECRET?.exists||b.critical_issues.push("JWT_SECRET missing - auth will fail"),n==="production"&&!u.dist_public_index_exists&&b.critical_issues.push("dist/public/index.html missing in production"),o.json(b)}),a.get("/api/healthz",w,Te,(i,o)=>{o.json({status:"ok",environment:process.env.NODE_ENV,timestamp:new Date().toISOString()})}),a.post("/api/admin/seed-clients",w,Te,async(i,o)=>{try{let{seedClients:r}=await Promise.resolve().then(()=>(hr(),yr)),n=await r();o.json(n)}catch(r){console.error("[Admin] Error seeding clients:",r),o.status(500).json({success:!1,message:"Error seeding clients",error:r instanceof Error?r.message:String(r)})}}),a.post("/api/treasury/send-reminder",w,async(i,o)=>{try{let{voucherId:r,clientId:n}=i.body;if(!r||!n)return o.status(400).json({error:"voucherId y clientId son requeridos"});let{TreasuryAutomation:d}=await Promise.resolve().then(()=>(Ve(),Oe)),u=await d.sendComplementReminder(r,n);u.success?o.json({success:!0,message:u.message}):o.status(400).json({error:u.message})}catch(r){console.error("[Treasury] Error sending reminder:",r),o.status(500).json({error:"Error interno del servidor"})}}),a.post("/api/treasury/resend-receipt",w,async(i,o)=>{try{let{voucherId:r,clientId:n,companyId:d}=i.body;if(!r||!n||!d)return o.status(400).json({error:"voucherId, clientId y companyId son requeridos"});let{TreasuryAutomation:u}=await Promise.resolve().then(()=>(Ve(),Oe)),g=await u.sendPaymentReceiptToSupplier(r,n,d);g.success?o.json({success:!0,message:g.message}):o.status(400).json({error:g.message})}catch(r){console.error("[Treasury] Error resending receipt:",r),o.status(500).json({error:"Error interno del servidor"})}}),a.get("/api/spa-check",w,Te,(i,o)=>{let r=Ne.resolve(import.meta.dirname,"public","index.html"),n=be.existsSync(r);o.json({spaFallback:n?"OK":"FAIL",indexPath:r,exists:n})}),a.post("/api/login",e,async(i,o)=>{try{let{username:r,password:n}=i.body;if(!r||!n)return o.status(400).json({message:"Username and password are required"});let d=await Ft(r,n);if(!d)return o.status(401).json({message:"Invalid username or password"});o.json(d)}catch(r){console.error("[POST /api/login] Error:",r),o.status(500).json({message:"Internal server error"})}}),a.get("/api/user",w,async(i,o)=>{try{let r=B(i);o.json(r)}catch(r){console.error("Error getting user:",r),o.status(500).json({error:"Error interno del servidor"})}}),a.post("/api/register",s,async(i,o)=>{try{console.log("[POST /api/register] Datos recibidos:",JSON.stringify(Pe(i.body),null,2));let{area:r,...n}=i.body,d=n.companyId!=null?Number(n.companyId):void 0,u=null;r&&d&&(u={Sales:{1:1,2:4},Logistics:{1:2,2:5},Purchasing:{1:7,2:10},Accounting:{1:3,2:6}}[r]?.[d]||null,console.log(`[POST /api/register] \xC1rea mapeada: ${r} + Company ${d} = areaId ${u}`));let g=xe.safeParse({...n,companyId:d,areaId:u,email:n.email?.toLowerCase()});if(!g.success)return console.log("[POST /api/register] Error de validaci\xF3n:",g.error.issues),o.status(400).json({message:"Error de validaci\xF3n",code:"VALIDATION_ERROR",errors:g.error.issues});let I=g.data;console.log("[POST /api/register] Datos validados:",JSON.stringify(Pe(I),null,2));try{if(await E.getUserByUsername(I.email))return o.status(409).json({message:"El email ya est\xE1 registrado"})}catch{console.log("[POST /api/register] Email disponible")}if(!I.password)return o.status(400).json({message:"La contrase\xF1a es obligatoria"});I.password=await Le.hash(I.password,10),I.role||(I.role="collaborator"),console.log("[POST /api/register] Datos despu\xE9s del hash:",JSON.stringify({...I,password:"[HASHED]"},null,2));let b=await E.createUser(I);console.log("[POST /api/register] Usuario registrado exitosamente:",we(b)),o.status(201).json({message:"Usuario registrado exitosamente",user:we(b)})}catch(r){if(console.error("[POST /api/register] Error completo:",r),r instanceof Error&&(console.error("[POST /api/register] Stack trace:",r.stack),r.message.includes("duplicate key")||r.message.includes("unique constraint")))return o.status(409).json({message:"El email ya est\xE1 registrado",code:"EMAIL_EXISTS"});if(r instanceof K.ZodError)return console.error("[POST /api/register] Errores de validaci\xF3n:",r.errors),o.status(400).json({message:"Error de validaci\xF3n",code:"VALIDATION_ERROR",errors:r.errors});o.status(500).json({message:"Error interno del servidor",code:"INTERNAL_ERROR",details:r instanceof Error?r.message:"Unknown error"})}}),a.get("/api/user",w,async(i,o)=>{try{let r=i.user,n=await E.getUser(r.id);if(!n)return o.status(404).json({message:"User not found"});let{password:d,...u}=n;o.json(u)}catch{o.status(500).json({message:"Internal server error"})}}),a.get("/api/users",w,async(i,o)=>{try{let r=await E.getUsers();o.json(zn(r))}catch{o.status(500).json({message:"Internal server error"})}}),a.post("/api/users",w,async(i,o)=>{try{console.log("[POST /api/users] Datos recibidos:",JSON.stringify(Pe(i.body),null,2));let r=xe.parse(i.body);console.log("[POST /api/users] Datos validados:",JSON.stringify(Pe(r),null,2)),r.password&&(r.password=await Le.hash(r.password,10)),console.log("[POST /api/users] Datos despu\xE9s del hash:",JSON.stringify({...r,password:"[HASHED]"},null,2));let n=await E.createUser(r);console.log("[POST /api/users] Usuario creado:",n),o.status(201).json(we(n))}catch(r){if(console.error("[POST /api/users] Error completo:",r),r instanceof Error&&console.error("[POST /api/users] Stack trace:",r.stack),r instanceof K.ZodError)return console.error("[POST /api/users] Errores de validaci\xF3n:",r.errors),o.status(400).json({message:"Validation error",errors:r.errors});o.status(500).json({message:"Internal server error",details:r instanceof Error?r.message:"Unknown error"})}}),a.put("/api/users/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id);console.log("[PUT /api/users/:id] Datos recibidos:",Pe(i.body));let n=xe.partial().parse(i.body);n.password&&(n.password=await Le.hash(n.password,10)),console.log("[PUT /api/users/:id] Datos validados:",Pe(n));let d=await E.updateUser(r,n);if(!d)return o.status(404).json({message:"User not found"});console.log("[PUT /api/users/:id] Usuario actualizado:",d),o.json(we(d))}catch(r){if(console.error("[PUT /api/users/:id] Error:",r),r instanceof K.ZodError)return o.status(400).json({message:"Validation error",errors:r.errors});o.status(500).json({message:"Internal server error"})}}),a.delete("/api/users/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id);if(!await E.deleteUser(r))return o.status(404).json({message:"User not found"});o.json({message:"User deleted successfully"})}catch{o.status(500).json({message:"Internal server error"})}}),a.get("/api/companies",w,async(i,o)=>{try{let r=await E.getCompanies();o.json(r)}catch{o.status(500).json({message:"Internal server error"})}}),a.get("/api/companies/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.getCompany(r);if(!n)return o.status(404).json({message:"Company not found"});console.log(`[GET /api/companies/:id] Buscando empresa con ID: ${r}`),console.log(`[GET /api/companies/:id] Empresa encontrada: ${n?"S\xED":"No"}`),console.log(`[GET /api/companies/:id] Enviando empresa: { id: ${n.id}, name: '${n.name}' }`),o.json(n)}catch{o.status(500).json({message:"Internal server error"})}}),a.post("/api/companies",w,async(i,o)=>{try{let r=Ge.parse(i.body),n=await E.createCompany(r);o.status(201).json(n)}catch(r){if(r instanceof K.ZodError)return o.status(400).json({message:r.errors});o.status(500).json({message:"Internal server error"})}}),a.get("/api/areas",w,async(i,o)=>{try{if(i.query.companyId&&i.query.companyId!=="undefined"&&i.query.companyId!=="null"){let r=parseInt(i.query.companyId);if(!isNaN(r)&&r>0){let n=await E.getAreasByCompany(r);o.json(n)}else{console.warn(`Invalid companyId received: ${i.query.companyId}`);let n=await E.getAreas();o.json(n)}}else{let r=await E.getAreas();o.json(r)}}catch(r){console.error("Error getting areas:",r),o.status(500).json({message:"Internal server error"})}}),a.get("/api/areas/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.getArea(r);if(!n)return o.status(404).json({message:"Area not found"});o.json(n)}catch{o.status(500).json({message:"Internal server error"})}}),a.post("/api/areas",w,async(i,o)=>{try{let r=We.parse(i.body),n=await E.createArea(r);o.status(201).json(n)}catch(r){if(r instanceof K.ZodError)return o.status(400).json({message:r.errors});o.status(500).json({message:"Internal server error"})}}),a.get("/api/kpis",w,async(i,o)=>{try{let r=B(i),n=i.query.companyId?parseInt(i.query.companyId):null,d;n?d=await E.getKpisByCompany(n):d=await E.getKpis(),o.json(d)}catch{o.status(500).json({message:"Internal server error"})}}),a.get("/api/kpis/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.getKpi(r);if(!n)return o.status(404).json({message:"KPI not found"});let d=n.name.includes("Rotaci\xF3n de cuentas por cobrar")||n.name.includes("Velocidad de rotaci\xF3n")||n.name.includes("Tiempo")&&!n.name.includes("entrega");console.log(`[GET KPI/${r}] Calculando para "${n.name}". \xBFEs invertido?: ${d}`),o.json({...n,isLowerBetter:d})}catch{o.status(500).json({message:"Internal server error"})}}),a.post("/api/kpis",w,async(i,o)=>{try{let r=i;if(r.user?.role!=="admin"&&r.user?.role!=="manager")return o.status(403).json({message:"No tienes permisos para crear KPIs"});let n=Je.parse(i.body),d=await E.createKpi(n);o.status(201).json(d)}catch(r){if(r instanceof K.ZodError)return o.status(400).json({message:r.errors});o.status(500).json({message:"Internal server error"})}}),a.put("/api/kpis/:id",w,async(i,o)=>{try{let r=i;if(r.user?.role!=="admin"&&r.user?.role!=="manager")return o.status(403).json({message:"No tienes permisos para actualizar KPIs"});let n=parseInt(i.params.id),d=He.parse(i.body);console.log(`[PUT /api/kpis/${n}] Datos validados:`,d);let u=await E.updateKpi(n,d);if(!u)return o.status(404).json({message:"KPI not found"});console.log(`[PUT /api/kpis/${n}] KPI actualizado:`,u),o.json(u)}catch(r){if(r instanceof K.ZodError)return console.error("[PUT /api/kpis] Error de validaci\xF3n:",r.errors),o.status(400).json({message:r.errors});console.error("[PUT /api/kpis] Error interno:",r),o.status(500).json({message:"Internal server error"})}}),a.delete("/api/kpis/:id",w,async(i,o)=>{try{let r=i;if(r.user?.role!=="admin"&&r.user?.role!=="manager")return o.status(403).json({message:"No tienes permisos para eliminar KPIs"});let n=parseInt(i.params.id);if(!await E.deleteKpi(n))return o.status(404).json({message:"KPI not found"});o.json({message:"KPI eliminado exitosamente"})}catch{o.status(500).json({message:"Internal server error"})}}),a.delete("/api/user-kpis/:kpiId",w,async(i,o)=>{try{let r=B(i),n=parseInt(i.params.kpiId);if(!await E.getKpi(n))return o.status(404).json({message:"KPI not found"});if(!await E.deleteKpiValuesByUser(r.id,n))return o.json({message:"No hab\xEDa valores de KPI para este usuario (ya estaba eliminado)"});o.json({message:"KPI eliminado para el usuario espec\xEDfico"})}catch(r){console.error("Error eliminating user-specific KPI:",r),o.status(500).json({message:"Internal server error"})}}),a.get("/api/top-performers",w,async(i,o)=>{try{let{companyId:r}=i.query;if(!r)return o.status(400).json({message:"companyId es requerido"});let d=await l(`
        SELECT 
          a.name as area_name,
          a.id as area_id,
          COUNT(k.id) as total_kpis,
          COUNT(CASE WHEN kv.status = 'complies' THEN 1 END) as compliant_kpis,
          COALESCE(ROUND(COUNT(CASE WHEN kv.status = 'complies' THEN 1 END) * 100.0 / NULLIF(COUNT(k.id), 0), 2), 0) as compliance_percentage
        FROM areas a 
        LEFT JOIN kpis k ON a.id = k.area_id 
        LEFT JOIN kpi_values kv ON k.id = kv.kpi_id 
        WHERE k.company_id = $1
        GROUP BY a.id, a.name 
        HAVING COUNT(k.id) > 0
        ORDER BY compliance_percentage DESC, total_kpis DESC
        LIMIT 5
      `,[r]);o.json(d)}catch(r){console.error("Error fetching top performers:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/kpi-values",w,async(i,o)=>{try{let r=B(i);if(i.query.kpiId){let n=parseInt(i.query.kpiId);if(!await E.getKpi(n))return o.status(404).json({message:"KPI not found"});if(r.role==="collaborator"){let g=(await E.getKpiValuesByKpi(n)).filter(I=>I.userId===r.id);o.json(g)}else{let u=await E.getKpiValuesByKpi(n);o.json(u)}}else if(r.role==="collaborator"){let n=await E.getKpiValuesByUser(r.id);o.json(n)}else{let n=await E.getKpiValues();o.json(n)}}catch{o.status(500).json({message:"Internal server error"})}}),a.post("/api/kpi-values",w,async(i,o)=>{try{let r=B(i),n=Me.parse({...i.body,userId:r.id}),d=await E.getKpi(n.kpiId);if(!d)return o.status(404).json({message:"KPI not found"});let u=await E.getLatestKpiValues(n.kpiId,1),g=u.length>0?u[0].status:null;if(d.target){let y=n.value,P=d.target,S=xr(y),$=xr(P);if(!isNaN(S)&&!isNaN($)){let C,A=Gn(d.name);console.log(`[KPI Calculation] Calculando para "${d.name}". \xBFEs invertido?: ${A}`),A?(C=Math.min($/S*100,100),S<=$?n.status="complies":S<=$*1.1?n.status="alert":n.status="not_compliant"):(C=Math.min(S/$*100,100),S>=$?n.status="complies":S>=$*.9?n.status="alert":n.status="not_compliant"),n.compliancePercentage=`${C.toFixed(1)}%`}}let I={...n,updatedBy:r.id},b=await E.createKpiValue(I);g&&n.status&&g!==n.status&&await Wn(d,r,g,n.status,E),o.status(201).json(b)}catch(r){if(r instanceof K.ZodError)return o.status(400).json({message:r.errors});console.error("Error creating KPI value:",r),o.status(500).json({message:"Internal server error"})}}),a.post("/api/sales/weekly-update",w,async(i,o)=>{try{console.log("[POST /api/sales/weekly-update] SIMPLIFICADO - Recibida solicitud:",i.body);let{value:r,companyId:n,weekNumber:d,month:u,year:g,adminOverride:I}=i.body,b=B(i);if(!r||!n)return o.status(400).json({message:"Datos insuficientes. Se requiere value y companyId"});let y={value:parseFloat(r),companyId:parseInt(n||"1"),userId:b.id};b.role==="admin"&&I&&d&&u&&g?(y.adminOverride=!0,y.weekNumber=d,y.month=u,y.year=parseInt(g),console.log(`[POST /api/sales/weekly-update] ADMIN OVERRIDE - Per\xEDodo manual: ${d} - ${u} ${g}`)):console.log("[POST /api/sales/weekly-update] Modo normal - detecci\xF3n autom\xE1tica");let P,S;if(y.adminOverride&&y.month&&y.year)P=y.month,S=y.year;else{let A=new Date;P=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"][A.getMonth()],S=A.getFullYear()}if(!(b.role==="admin"&&y.adminOverride)){let D=(await E.getKpis()).find(k=>k.name.includes("Volumen de ventas")&&k.companyId===y.companyId);if(D){let Y=(await E.getKpiValuesByKpi(D.id)).find(Ee=>Ee.period===`${P} ${S}`&&!Ee.period.includes("Semana"));if(Y)return console.log(`[POST /api/sales/weekly-update] \u274C ACCESO DENEGADO - Mes ${P} ${S} ya est\xE1 cerrado`),o.status(409).json({success:!1,message:`El mes ${P} ${S} ya est\xE1 cerrado y no se pueden hacer m\xE1s actualizaciones.`,monthStatus:{closed:!0,period:`${P} ${S}`,closedValue:Y.value,closedDate:Y.date},suggestion:"Contacta a un administrador si necesitas actualizar este per\xEDodo."})}}else console.log(`[POST /api/sales/weekly-update] \u{1F513} ADMIN OVERRIDE - Permitiendo actualizaci\xF3n en per\xEDodo ${P} ${S}`);let C=await Ht(y);C.success?(console.log("[POST /api/sales/weekly-update] \u2705 Actualizaci\xF3n exitosa:",{period:C.currentPeriod?.period,monthlyPreview:C.monthlyPreview?.formattedValue}),o.status(200).json({success:!0,message:C.message||"Ventas actualizadas exitosamente",weeklyRecord:C.weeklyRecord,currentPeriod:C.currentPeriod,monthlyPreview:C.monthlyPreview})):(console.error("[POST /api/sales/weekly-update] \u274C Error:",C.message),o.status(400).json({success:!1,message:C.message||"Error al actualizar datos de ventas"}))}catch(r){console.error("[POST /api/sales/weekly-update] \u274C Error cr\xEDtico:",r),o.status(500).json({success:!1,message:"Error interno del servidor"})}}),a.post("/api/sales/update-month",w,async(i,o)=>{try{console.log("[POST /api/sales/update-month] Recibida solicitud:",i.body);let{value:r,companyId:n,month:d,year:u,period:g}=i.body,I=B(i);if(!r||!n||!d||!u)return o.status(400).json({success:!1,message:"Faltan datos requeridos: valor, compa\xF1\xEDa, mes y a\xF1o"});let b=n===1?39:10,y=g||`${d} ${u}`;console.log(`[POST /api/sales/update-month] Actualizando KPI ${b} para per\xEDodo: ${y}`);let S=(await E.getKpiValuesByKpi(b)).find(A=>A.period===y);S&&(await h.delete(N).where(Bn(N.id,S.id)),console.log(`[POST /api/sales/update-month] Registro anterior eliminado: ${y}`)),await E.createKpiValue({kpiId:b,value:r.toString(),period:y,userId:I.id}),console.log(`[POST /api/sales/update-month] \u2705 Registro creado: ${y} = ${r}`);let $=n===1?55620:858373,C=Math.round(r/$*100);o.status(200).json({success:!0,message:`Ventas de ${y} actualizadas correctamente`,data:{period:y,value:r,monthlyTarget:$,compliance:C}})}catch(r){console.error("[POST /api/sales/update-month] \u274C Error:",r),o.status(500).json({success:!1,message:r.message||"Error al actualizar ventas mensuales"})}}),a.post("/api/sales/auto-close-month",w,async(i,o)=>{try{console.log("[POST /api/sales/auto-close-month] Iniciando auto-cierre mensual:",i.body);let{companyId:r,month:n,year:d}=i.body;if(B(i).role!=="admin")return o.status(403).json({success:!1,message:"Solo los administradores pueden ejecutar el auto-cierre mensual"});let g=r?[parseInt(r)]:[1,2];console.log("[POST /api/sales/auto-close-month] Procesando empresas:",g);let I=[];for(let P of g)try{console.log(`[POST /api/sales/auto-close-month] Procesando empresa ${P}...`);let S=await at(P,n,d);I.push({companyId:P,success:S,message:S?"Mes cerrado exitosamente":"No hay datos para cerrar o ya est\xE1 cerrado"})}catch(S){console.error(`[POST /api/sales/auto-close-month] Error para empresa ${P}:`,S),I.push({companyId:P,success:!1,message:S.message||"Error al cerrar mes"})}let b=I.every(P=>P.success),y=I.filter(P=>P.success).length;console.log(`[POST /api/sales/auto-close-month] \u2705 Completado - ${y}/${I.length} empresas procesadas`),o.status(200).json({success:b,message:`Auto-cierre completado: ${y}/${I.length} empresas procesadas`,results:I,timestamp:new Date().toISOString()})}catch(r){console.error("[POST /api/sales/auto-close-month] \u274C Error cr\xEDtico:",r),o.status(500).json({success:!1,message:"Error interno del servidor durante el auto-cierre"})}}),a.post("/api/sales/monthly-close",w,async(i,o)=>{try{console.log("[POST /api/sales/monthly-close] CIERRE MANUAL iniciado:",i.body);let{companyId:r,month:n,year:d,override:u=!1}=i.body,g=B(i);if(g.role!=="admin")return o.status(403).json({success:!1,message:"Solo los administradores pueden cerrar meses manualmente"});if(!r||!n||!d)return o.status(400).json({success:!1,message:"Par\xE1metros requeridos: companyId, month, year"});let I=`${n} ${d}`,y=(await E.getKpis()).find(C=>C.name.includes("Volumen de ventas")&&C.companyId===parseInt(r));if(!y)return o.status(404).json({success:!1,message:`No se encontr\xF3 KPI de volumen de ventas para la compa\xF1\xEDa ${r}`});let S=(await E.getKpiValuesByKpi(y.id)).find(C=>C.period===I&&!C.period.includes("Semana"));if(S&&!u)return o.status(409).json({success:!1,message:`El mes ${n} ${d} ya est\xE1 cerrado. Usa override=true para volver a cerrar.`,existingRecord:{id:S.id,value:S.value,date:S.date,period:S.period}});if(console.log(`[POST /api/sales/monthly-close] Ejecutando cierre para empresa ${r}, per\xEDodo: ${I}`),await at(parseInt(r),n,parseInt(d))){console.log(`[POST /api/sales/monthly-close] \u2705 Cierre manual exitoso para compa\xF1\xEDa ${r}`);let C=S&&u?"actualizado":"cerrado";o.status(200).json({success:!0,message:`Mes ${n} ${d} ${C} exitosamente`,companyId:parseInt(r),period:I,wasOverride:!!(S&&u),closedBy:g.name||g.id})}else console.error(`[POST /api/sales/monthly-close] \u274C Error en cierre manual para compa\xF1\xEDa ${r}`),o.status(500).json({success:!1,message:`Error al cerrar el mes ${n} ${d} - posiblemente no hay datos semanales suficientes`})}catch(r){console.error("[POST /api/sales/monthly-close] \u274C Error cr\xEDtico:",r),o.status(500).json({success:!1,message:"Error interno del servidor durante cierre manual",error:r.message})}}),a.get("/api/sales/monthly-status",w,async(i,o)=>{try{let{companyId:r,month:n,year:d}=i.query;if(!r||!n||!d)return o.status(400).json({success:!1,message:"Par\xE1metros requeridos: companyId, month, year"});let u=`${n} ${d}`,I=(await E.getKpis()).find(S=>S.name.includes("Volumen de ventas")&&S.companyId===parseInt(r));if(!I)return o.status(404).json({success:!1,message:`No se encontr\xF3 KPI de volumen de ventas para la compa\xF1\xEDa ${r}`});let b=await E.getKpiValuesByKpi(I.id),y=b.find(S=>S.period===u&&!S.period.includes("Semana")),P=b.filter(S=>S.period.includes(n)&&S.period.includes(d)&&S.period.includes("Semana"));o.status(200).json({success:!0,closed:!!y,period:u,monthlyRecord:y||null,weeklyRecordsCount:P.length,weeklyRecords:P.map(S=>({period:S.period,value:S.value,date:S.date}))})}catch(r){console.error("[GET /api/sales/monthly-status] Error:",r),o.status(500).json({success:!1,message:"Error al consultar estado del mes"})}}),a.get("/api/shipments",w,async(i,o)=>{try{let{companyId:r,status:n,limit:d="50",page:u="1",since:g}=i.query,I=parseInt(d),b=parseInt(u),y=(b-1)*I,P;if(g){let A=g;if(A.endsWith("d")){let D=parseInt(A.replace("d",""));P=new Date,P.setDate(P.getDate()-D)}else P=new Date(A)}let S;if(r){let A=parseInt(r);S=await E.getShipmentsByCompany(A)}else S=await E.getShipments();n&&(S=S.filter(A=>A.status===n)),P&&(S=S.filter(A=>new Date(A.actualDeliveryDate||A.updatedAt||A.createdAt)>=P)),S.sort((A,D)=>{let k=new Date(A.actualDeliveryDate||A.updatedAt||A.createdAt);return new Date(D.actualDeliveryDate||D.updatedAt||D.createdAt).getTime()-k.getTime()});let $=S.length,C=S.slice(y,y+I);o.json({shipments:C,pagination:{page:b,limit:I,total:$,totalPages:Math.ceil($/I),hasMore:y+I<$}})}catch(r){console.error("[GET /api/shipments] Error:",r),o.status(500).json({message:"Internal server error"})}}),a.get("/api/shipments/products",w,async(i,o)=>{try{let r=B(i),{companyId:n}=i.query;console.log("[GET /api/shipments/products] Usuario:",r.name,"Empresa filtro:",n);let d=["product IS NOT NULL AND product != ''"],u=[],g=0,b=`
        SELECT DISTINCT product 
        FROM shipments 
        ${`WHERE ${d.join(" AND ")}`}
        ORDER BY product ASC
      `,P=(await l(b,u)).map(S=>S.product);console.log(`[GET /api/shipments/products] Encontrados ${P.length} productos \xFAnicos`),o.json(P)}catch(r){console.error("[GET /api/shipments/products] Error:",r),o.status(500).json({message:"Internal server error"})}}),a.get("/api/shipments/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.getShipment(r);if(!n)return o.status(404).json({message:"Shipment not found"});let d=await E.getShipmentItems(r);o.json({...n,items:d})}catch{o.status(500).json({message:"Internal server error"})}}),a.get("/api/shipments/tracking/:trackingCode",w,async(i,o)=>{try{let r=i.params.trackingCode,n=await E.getShipmentByTrackingCode(r);if(!n)return o.status(404).json({message:"Shipment not found"});o.json(n)}catch{o.status(500).json({message:"Internal server error"})}}),a.post("/api/shipments",w,async(i,o)=>{try{console.log("[POST /api/shipments] Datos recibidos:",JSON.stringify(i.body,null,2));let{items:r,...n}=i.body,d={...n,estimatedDeliveryDate:n.estimatedDeliveryDate?new Date(n.estimatedDeliveryDate):null,departureDate:n.departureDate?new Date(n.departureDate):null,actualDeliveryDate:n.actualDeliveryDate?new Date(n.actualDeliveryDate):null};console.log("[POST /api/shipments] Datos transformados:",JSON.stringify(d,null,2));let u=Ye.parse(d);console.log("[POST /api/shipments] Datos validados:",JSON.stringify(u,null,2));let g=await E.createShipment(u);if(console.log("[POST /api/shipments] Env\xEDo creado:",g),r&&Array.isArray(r)&&r.length>0){let b=r.map(y=>({shipmentId:g.id,product:y.product,quantity:y.quantity,unit:y.unit,description:y.description||null}));await E.createShipmentItems(b),console.log("[POST /api/shipments] Items creados:",b.length)}let I=await E.getShipmentItems(g.id);o.status(201).json({...g,items:I})}catch(r){if(console.error("[POST /api/shipments] Error completo:",r),console.error("[POST /api/shipments] Stack trace:",r?.stack),r instanceof K.ZodError)return console.error("[POST /api/shipments] Errores de validaci\xF3n:",r.errors),o.status(400).json({message:"Validation error",errors:r.errors});o.status(500).json({message:"Internal server error",details:r.message})}}),a.get("/api/shipments/:id/items",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.getShipmentItems(r);o.json(n)}catch{o.status(500).json({message:"Internal server error"})}}),a.post("/api/shipments/:id/items",w,async(i,o)=>{try{let n={shipmentId:parseInt(i.params.id),product:i.body.product,quantity:i.body.quantity,unit:i.body.unit,description:i.body.description||null},d=await E.createShipmentItem(n);o.status(201).json(d)}catch(r){console.error("[POST /api/shipments/:id/items] Error:",r),o.status(500).json({message:"Internal server error"})}}),a.patch("/api/shipments/:id/items/:itemId",w,async(i,o)=>{try{let r=parseInt(i.params.itemId),n=await E.updateShipmentItem(r,i.body);if(!n)return o.status(404).json({message:"Item not found"});o.json(n)}catch(r){console.error("[PATCH /api/shipments/:id/items/:itemId] Error:",r),o.status(500).json({message:"Internal server error"})}}),a.delete("/api/shipments/:id/items/:itemId",w,async(i,o)=>{try{let r=parseInt(i.params.itemId);if(!await E.deleteShipmentItem(r))return o.status(404).json({message:"Item not found"});o.json({success:!0})}catch(r){console.error("[DELETE /api/shipments/:id/items/:itemId] Error:",r),o.status(500).json({message:"Internal server error"})}}),a.get("/api/shipments/:id/updates",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.getShipmentUpdates(r);o.json(n)}catch{o.status(500).json({message:"Internal server error"})}}),a.get("/api/action-plans",w,async(i,o)=>{try{if(i.query.kpiId){let r=parseInt(i.query.kpiId),n=await E.getActionPlansByKpi(r);o.json(n)}else o.json([])}catch{o.status(500).json({message:"Internal server error"})}}),a.get("/api/action-plans/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.getActionPlan(r);if(!n)return o.status(404).json({message:"Action plan not found"});o.json(n)}catch{o.status(500).json({message:"Internal server error"})}}),a.get("/api/notifications",w,async(i,o)=>{try{let r=B(i),n=await E.getNotificationsForUser(r.id);o.json(n)}catch{o.status(500).json({message:"Internal server error"})}}),a.post("/api/notifications",w,async(i,o)=>{try{let r=B(i),n={...i.body,fromUserId:r.id};console.log("[POST /api/notifications] Creando notificaci\xF3n:",n);let d=await E.createNotification(n),u=await E.getUser(n.toUserId);if(u&&u.email){console.log("[POST /api/notifications] Enviando correo a:",u.email);let{html:g,text:I}=Xt(r.name,u.name,n.title,n.message,n.type||"info",n.priority||"normal");await it({to:u.email,from:"Mario Reynoso <marioreynoso@grupoorsega.com>",subject:`[Econova] ${n.title}`,html:g,text:I})?console.log("[POST /api/notifications] Correo enviado exitosamente"):console.error("[POST /api/notifications] Error al enviar correo")}else console.warn("[POST /api/notifications] Destinatario no encontrado o sin email");o.status(201).json(d)}catch(r){console.error("[POST /api/notifications] Error:",r),o.status(500).json({message:"Internal server error"})}}),a.put("/api/notifications/:id/read",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=B(i),d=await E.markNotificationAsRead(r,n.id);if(!d)return o.status(404).json({message:"Notification not found"});o.json(d)}catch{o.status(500).json({message:"Internal server error"})}}),a.delete("/api/notifications/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=B(i);if(!await E.deleteNotification(r,n.id))return o.status(404).json({message:"Notification not found"});o.json({message:"Notification deleted successfully"})}catch{o.status(500).json({message:"Internal server error"})}}),a.get("/api/team-activity",w,async(i,o)=>{try{console.log("[GET /api/team-activity] Obteniendo resumen de actividad del equipo");let r=await E.getTeamActivitySummary();console.log("[GET /api/team-activity] Resumen obtenido:",r),o.json(r)}catch(r){console.error("Error getting team activity:",r),o.status(500).json({message:"Internal server error"})}}),a.get("/api/users/:id/last-kpi-update",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.getLastKpiUpdateByUser(r);o.json(n)}catch(r){console.error("Error getting last KPI update:",r),o.status(500).json({message:"Internal server error"})}}),a.patch("/api/shipments/:id/status",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=B(i),d=Xe.parse(i.body);console.log("[PATCH /api/shipments/:id/status] Actualizando estado del env\xEDo:",{shipmentId:r,data:d});let u=await E.getShipment(r);if(!u)return o.status(404).json({message:"Env\xEDo no encontrado"});if(d.status==="in_transit"&&!(d.invoiceNumber||u.invoiceNumber))return o.status(400).json({message:"N\xFAmero de factura requerido",error:"Para mover un env\xEDo a 'En Tr\xE1nsito' es necesario proporcionar el n\xFAmero de factura.",requiresInvoiceNumber:!0});let g=u.status!==d.status,I={status:d.status,updatedAt:new Date};d.invoiceNumber&&(I.invoiceNumber=d.invoiceNumber);let b=await E.updateShipment(r,I);if(!b)return o.status(404).json({message:"Error al actualizar el env\xEDo"});let y=await E.createShipmentUpdate({shipmentId:r,status:d.status,location:d.location||null,comments:d.comments||null,updatedBy:n.id});try{await E.recalculateShipmentCycleTime(r),console.log(`[Cycle Times] Recalculated for shipment ${r}`)}catch($){console.error(`[Cycle Times] Error recalculating for shipment ${r}:`,$)}let P=!1,S=null;if(g&&d.sendNotification!==!1)try{let $=null,C=!0,A=null;if(b.customerId){let D=await l("SELECT id, email, email_notifications FROM clients WHERE id = $1 LIMIT 1",[b.customerId]);if(D.length>0){let k=D[0];$=k.email,C=k.email_notifications!==!1,A=k.id,console.log(`[Notification] Cliente encontrado: ${$}, notificaciones: ${C}`)}}if(!$&&b.customerEmail&&($=b.customerEmail,C=!0,console.log(`[Notification] Usando customerEmail legacy: ${$}`)),$&&C)if((await l(`SELECT id FROM shipment_notifications 
               WHERE shipment_id = $1 AND shipment_status = $2 AND status = 'sent' LIMIT 1`,[r,d.status])).length>0)console.log(`[Notification] Ya existe notificaci\xF3n enviada para estado ${d.status}, omitiendo duplicado`),S="Notificaci\xF3n ya enviada previamente para este estado";else{let{sendShipmentStatusNotification:k}=await Promise.resolve().then(()=>(mt(),pr)),Y=await k({to:$,shipment:b,status:d.status});await E.createShipmentNotification({shipmentId:r,emailTo:$,subject:`Actualizaci\xF3n de Env\xEDo - ${d.status}`,status:"sent",sentBy:n.id,shipmentStatus:d.status,errorMessage:null}),P=!0,console.log(`[Notification] Email enviado exitosamente a ${$} (${Y.provider})`)}else $?C||(S="Cliente tiene notificaciones deshabilitadas",console.log(`[Notification] Cliente ${$} tiene notificaciones deshabilitadas`)):(S="No hay email de cliente configurado",console.log("[Notification] Sin email de cliente para enviar notificaci\xF3n"))}catch($){if(console.error("[Notification] Error al enviar notificaci\xF3n:",$),S=$ instanceof Error?$.message:"Error desconocido",b.customerEmail)try{await E.createShipmentNotification({shipmentId:r,emailTo:b.customerEmail,subject:`Actualizaci\xF3n de Env\xEDo - ${d.status}`,status:"failed",sentBy:n.id,shipmentStatus:d.status,errorMessage:S})}catch(C){console.error("[Notification] Error al registrar fallo:",C)}}o.json({shipment:b,update:y,emailNotificationSent:P,emailWarning:S})}catch(r){if(console.error("[PUT /api/shipments/:id/status] Error:",r),r instanceof K.ZodError)return o.status(400).json({message:"Datos inv\xE1lidos",errors:r.errors});o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/shipments/:id/notifications",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.getShipmentNotificationsByShipment(r);o.json(n)}catch(r){console.error("[GET /api/shipments/:id/notifications] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/shipments/:id/cycle-times",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await E.recalculateShipmentCycleTime(r);if(!n)return o.status(404).json({message:"Env\xEDo no encontrado"});o.json(n)}catch(r){console.error("[GET /api/shipments/:id/cycle-times] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/metrics/cycle-times",w,async(i,o)=>{try{let r=i.query.companyId?parseInt(i.query.companyId):void 0,n=i.query.startDate,d=i.query.endDate,u=await E.getAggregateCycleTimes(r,n,d);o.json(u)}catch(r){console.error("[GET /api/metrics/cycle-times] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/job-profiles/:userId",w,async(i,o)=>{try{let r=parseInt(i.params.userId),n=await E.getJobProfileWithDetails(r);if(!n)return o.status(404).json({message:"Perfil de trabajo no encontrado"});o.json(n)}catch(r){console.error("[GET /api/job-profiles/:userId] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/user-kpis/:userId",w,async(i,o)=>{try{let r=parseInt(i.params.userId),n=await E.getUserKpis(r);o.json(n)}catch(r){console.error("[GET /api/user-kpis/:userId] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/kpi-overview",w,async(i,o)=>{try{let r=await E.getKPIOverview();o.json(r)}catch(r){console.error("[GET /api/kpi-overview] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/kpi-history/:kpiId",w,async(i,o)=>{try{let r=parseInt(i.params.kpiId),n=parseInt(i.query.months)||12,d=await E.getKPIHistory(r,n);o.json(d)}catch(r){console.error("[GET /api/kpi-history/:kpiId] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/user-kpi-history/:userId",async(i,o)=>{try{let r=parseInt(i.params.userId),n=parseInt(i.query.months)||6;console.log(`[GET /api/user-kpi-history/:userId] Requested userId: ${r}, months: ${n}`);let d=await E.getUserKPIHistory(r,n);console.log(`[GET /api/user-kpi-history/:userId] Returning ${d?.length||0} records for user ${r}`),o.json(d)}catch(r){console.error("[GET /api/user-kpi-history/:userId] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/kpi-history-by-users/:kpiId",w,async(i,o)=>{try{let r=parseInt(i.params.kpiId),n=parseInt(i.query.months)||6,d=await E.getKPIHistoryByUsers(r,n);if(!d)return o.status(404).json({message:"KPI no encontrado"});o.json(d)}catch(r){console.error("[GET /api/kpi-history-by-users/:kpiId] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/check-kpi-duplicates",w,async(i,o)=>{try{if(i.user.role!=="admin")return o.status(403).json({message:"No autorizado"});let d=await qe(process.env.DATABASE_URL)`
        SELECT kpi_id, period, COUNT(*) as count, ARRAY_AGG(id ORDER BY id DESC) as ids
        FROM kpi_values
        WHERE user_id IS NULL
        GROUP BY kpi_id, period
        HAVING COUNT(*) > 1
      `;console.log("[CHECK KPI DUPLICATES] Found:",d),o.json({duplicatesFound:d,totalDuplicateGroups:d.length})}catch(r){console.error("[GET /api/check-kpi-duplicates] Error:",r),o.status(500).json({message:"Error interno del servidor",error:String(r)})}}),a.post("/api/fix-kpi-duplicates",w,async(i,o)=>{try{if(i.user.role!=="admin")return o.status(403).json({message:"No autorizado"});let n=qe(process.env.DATABASE_URL),d={duplicatesFound:[],duplicatesDeleted:0,indexesCreated:[],errors:[]},u=await n`
        SELECT kpi_id, period, COUNT(*) as count, ARRAY_AGG(id ORDER BY id DESC) as ids
        FROM kpi_values
        WHERE user_id IS NULL
        GROUP BY kpi_id, period
        HAVING COUNT(*) > 1
      `;d.duplicatesFound=u;for(let g of u){let I=g.ids.slice(1);if(I.length>0){let b=`{${I.join(",")}}`,y=await n`
            DELETE FROM kpi_values
            WHERE id = ANY(${b}::integer[])
          `;d.duplicatesDeleted+=I.length}}try{await n`
          CREATE UNIQUE INDEX IF NOT EXISTS user_kpi_unique 
          ON kpi_values (kpi_id, user_id, period) 
          WHERE user_id IS NOT NULL
        `,d.indexesCreated.push("user_kpi_unique")}catch(g){d.errors.push({index:"user_kpi_unique",error:g.message})}try{await n`
          CREATE UNIQUE INDEX IF NOT EXISTS company_kpi_unique 
          ON kpi_values (kpi_id, period) 
          WHERE user_id IS NULL
        `,d.indexesCreated.push("company_kpi_unique")}catch(g){d.errors.push({index:"company_kpi_unique",error:g.message})}console.log("[FIX KPI DUPLICATES] Results:",d),o.json({success:!0,message:"Duplicados eliminados e \xEDndices creados correctamente",details:d})}catch(r){console.error("[POST /api/fix-kpi-duplicates] Error:",r),o.status(500).json({message:"Error interno del servidor",error:String(r)})}});let l=qe(process.env.DATABASE_URL);a.get("/api/clients-db",w,async(i,o)=>{try{let{companyId:r,search:n}=i.query,d="WHERE is_active = true",u=[],g=1;n&&(d+=` AND (name ILIKE $${g} OR email ILIKE $${g} OR client_code ILIKE $${g})`,u.push(`%${n}%`),g++);let I=await l(`
        SELECT 
          id, name, email, phone, contact_person, company, address,
          company_id as "companyId", client_code as "clientCode", city, state, postal_code, country,
          requires_receipt as "requiresReceipt", email_notifications as "emailNotifications", customer_type as "customerType",
          payment_terms as "paymentTerms", is_active as "isActive", created_at as "createdAt"
        FROM clients 
        ${d}
        ORDER BY name
      `,u);o.json(I)}catch(r){console.error("Error fetching clients from database:",r),o.status(500).json({error:"Failed to fetch clients"})}}),a.get("/api/clients-db/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await l(`
        SELECT 
          id, name, email, phone, contact_person, company, address,
          company_id as "companyId", client_code as "clientCode", city, state, postal_code, country,
          requires_receipt as "requiresReceipt", email_notifications as "emailNotifications", customer_type as "customerType",
          payment_terms as "paymentTerms", is_active as "isActive", notes, created_at as "createdAt", updated_at as "updatedAt"
        FROM clients 
        WHERE id = $1 AND is_active = true
      `,[r]);if(n.length===0)return o.status(404).json({error:"Client not found"});o.json(n[0])}catch(r){console.error("Error fetching client:",r),o.status(500).json({error:"Failed to fetch client"})}}),a.get("/api/clients",w,async(i,o)=>{try{let r=await l(`
        SELECT 
          id, name, email, phone, contact_person as contact_name,
          address as billing_addr, address as shipping_addr,
          client_code as rfc, is_active, company_id,
          email_notifications
        FROM clients 
        WHERE is_active = true
        ORDER BY name
      `);o.json(r)}catch(r){console.error("Error fetching clients for logistics:",r),o.status(500).json({error:"Failed to fetch clients"})}}),a.get("/api/products",w,async(i,o)=>{try{let{companyId:r}=i.query,n="WHERE is_active = true",d=[];r&&(n+=" AND company_id = $1",d.push(parseInt(r)));let u=await l(`
        SELECT id, name, company_id, is_active
        FROM products 
        ${n}
        ORDER BY name
      `,d);o.json(u)}catch(r){console.error("Error fetching products:",r),o.status(500).json({error:"Failed to fetch products"})}}),a.get("/api/providers",w,async(i,o)=>{try{let r=await l(`
        SELECT 
          id, name, email, phone, contact_name, rating, is_active
        FROM provider 
        WHERE is_active = true
        ORDER BY name
      `);o.json(r)}catch(r){console.error("Error fetching providers:",r),o.status(500).json({error:"Failed to fetch providers"})}}),a.post("/api/clients",w,async(i,o)=>{try{let r=Qe.parse(i.body),n=await l(`
        INSERT INTO clients (
          name, email, phone, contact_person, company, address,
          payment_terms, requires_receipt, reminder_frequency, is_active,
          notes, company_id, client_code, secondary_email, city, state,
          postal_code, country, email_notifications, customer_type
        ) VALUES (
          $1, $2, $3, $4, $5, $6, $7, $8, $9, $10,
          $11, $12, $13, $14, $15, $16, $17, $18, $19, $20
        )
        RETURNING *
      `,[r.name,r.email||null,r.phone||null,r.contactPerson||null,r.company||null,r.address||null,r.paymentTerms||null,r.requiresReceipt??!0,r.reminderFrequency||null,r.isActive??!0,r.notes||null,r.companyId||null,r.clientCode||null,r.secondaryEmail||null,r.city||null,r.state||null,r.postalCode||null,r.country||"M\xE9xico",r.emailNotifications??!0,r.customerType||null]);o.status(201).json(n[0])}catch(r){if(console.error("Error creating client:",r),r instanceof K.ZodError)return o.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});o.status(500).json({error:"Failed to create client"})}}),a.post("/api/providers",w,async(i,o)=>{try{let r=Ze.parse(i.body),n=crypto.randomUUID(),d=await l(`
        INSERT INTO provider (
          id, name, email, phone, contact_name, notes, rating, is_active
        ) VALUES (
          $1, $2, $3, $4, $5, $6, $7, $8
        )
        RETURNING *
      `,[n,r.name,r.email||null,r.phone||null,r.contactName||null,r.notes||null,r.rating||null,r.isActive??!0]);o.status(201).json(d[0])}catch(r){if(console.error("Error creating provider:",r),r instanceof K.ZodError)return o.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});o.status(500).json({error:"Failed to create provider"})}}),a.post("/api/admin/send-activation-emails",w,async(i,o)=>{try{if(B(i).role!=="admin")return o.status(403).json({message:"Solo administradores pueden enviar emails de activaci\xF3n masiva"});let n=await E.getUsers(),d=0,u=0;for(let g of n)try{let I=await E.createActivationToken(g.email),y=`${process.env.NODE_ENV==="production"?`https://${process.env.REPL_SLUG}.${process.env.REPL_OWNER||"user"}.replit.app`:"http://localhost:5000"}/activate/${I.token}`;await it({to:g.email,from:"daniel@econova.com.mx",subject:"\u{1F510} Activa tu cuenta en ECONOVA KPI Dashboard",html:`
              <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background: #f8f9fa;">
                <div style="background: linear-gradient(135deg, #273949 0%, #b5e951 100%); color: white; padding: 30px; text-align: center; border-radius: 10px;">
                  <h1 style="margin: 0; font-size: 28px;">\xA1Bienvenido a ECONOVA!</h1>
                  <p style="margin: 10px 0 0 0; font-size: 16px;">KPI Dashboard - Sistema de Gesti\xF3n</p>
                </div>
                
                <div style="background: white; padding: 30px; border-radius: 10px; margin: 20px 0; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
                  <h2 style="color: #273949; margin-top: 0;">Hola ${g.name},</h2>
                  
                  <p>Tu cuenta ha sido creada en el Sistema ECONOVA KPI Dashboard. Para completar la configuraci\xF3n y acceder al sistema, necesitas establecer tu contrase\xF1a personal.</p>
                  
                  <div style="background: #e3f2fd; border-left: 4px solid #2196f3; padding: 15px; margin: 20px 0;">
                    <h3 style="margin: 0 0 10px 0; color: #1976d2;">\u{1F4E7} Tu informaci\xF3n de acceso:</h3>
                    <p style="margin: 0;"><strong>Email:</strong> ${g.email}</p>
                    <p style="margin: 5px 0 0 0;"><strong>Rol:</strong> ${g.role}</p>
                  </div>
                  
                  <div style="text-align: center; margin: 30px 0;">
                    <a href="${y}" style="background: linear-gradient(135deg, #273949 0%, #b5e951 100%); color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-size: 16px; font-weight: bold; display: inline-block;">
                      \u{1F510} Activar mi cuenta
                    </a>
                  </div>
                  
                  <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 20px 0;">
                    <h4 style="margin: 0 0 10px 0; color: #856404;">\u26A0\uFE0F Informaci\xF3n importante:</h4>
                    <ul style="margin: 0; padding-left: 20px; color: #856404;">
                      <li>Este enlace es v\xE1lido por <strong>24 horas</strong></li>
                      <li>Solo puedes usarlo <strong>una vez</strong></li>
                      <li>Elige una contrase\xF1a segura (m\xEDnimo 8 caracteres)</li>
                      <li>Nunca compartas tus credenciales de acceso</li>
                    </ul>
                  </div>
                  
                  <p style="color: #666; font-size: 14px;">Si no puedes hacer clic en el bot\xF3n, copia y pega este enlace en tu navegador:</p>
                  <p style="word-break: break-all; background: #f5f5f5; padding: 10px; border-radius: 5px; font-size: 12px; color: #666;">${y}</p>
                </div>
                
                <div style="text-align: center; color: #666; font-size: 12px;">
                  <p>\xA9 2025 ECONOVA - KPI Dashboard</p>
                  <p>Sistema de Gesti\xF3n de Indicadores de Rendimiento</p>
                </div>
              </div>
            `})?d++:u++}catch(I){console.error(`Error sending activation email to ${g.email}:`,I),u++}await E.deleteExpiredTokens(),o.json({message:"Emails de activaci\xF3n enviados",totalUsers:n.length,successful:d,failed:u})}catch(r){console.error("[POST /api/admin/send-activation-emails] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/activate/:token",async(i,o)=>{try{let{token:r}=i.params,n=await E.getActivationToken(r);if(!n)return o.status(404).json({error:"Token no v\xE1lido",message:"El enlace de activaci\xF3n no es v\xE1lido o ha expirado"});if(new Date>n.expiresAt)return o.status(400).json({error:"Token expirado",message:"El enlace de activaci\xF3n ha expirado. Solicita uno nuevo al administrador"});if(n.used)return o.status(400).json({error:"Token ya utilizado",message:"Este enlace de activaci\xF3n ya fue utilizado"});let d=await E.getUserByEmail(n.email);if(!d)return o.status(404).json({error:"Usuario no encontrado",message:"No se encontr\xF3 un usuario asociado a este token"});o.json({valid:!0,email:n.email,user:we(d),expiresAt:n.expiresAt})}catch(r){console.error("[GET /api/activate/:token] Error:",r),o.status(500).json({error:"Error interno",message:"Error interno del servidor"})}}),a.post("/api/activate/:token",async(i,o)=>{try{let{token:r}=i.params,{password:n}=i.body;if(!n||n.length<8)return o.status(400).json({message:"La contrase\xF1a debe tener al menos 8 caracteres"});let d=await E.getActivationToken(r);if(!d)return o.status(404).json({message:"Token no v\xE1lido o expirado"});if(new Date>d.expiresAt)return o.status(400).json({message:"El enlace de activaci\xF3n ha expirado"});if(d.used)return o.status(400).json({message:"Este enlace de activaci\xF3n ya fue utilizado"});let u=await E.getUserByEmail(d.email);if(!u)return o.status(404).json({message:"Usuario no encontrado"});let g=await Le.hash(n,10);await E.updateUser(u.id,{password:g}),await E.markTokenAsUsed(r),await E.deleteExpiredTokens(),o.json({message:"\xA1Contrase\xF1a establecida exitosamente! Ya puedes iniciar sesi\xF3n",user:we(u)})}catch(r){console.error("[POST /api/activate/:token] Error:",r),o.status(500).json({message:"Error interno del servidor"})}}),a.use("/api",fe),a.use("/api",ue),a.post("/api/seed-production",async(i,o)=>{try{let{seedProductionData:r}=await Promise.resolve().then(()=>(vr(),fr)),n=await r();o.json(n)}catch(r){o.status(500).json({success:!1,message:"Seeding failed",error:r instanceof Error?r.message:String(r)})}}),a.get("/api/debug-database",async(i,o)=>{try{let r=await E.getCompanies(),n=await E.getAreas(),d=await E.getKpis();o.json({companies:r,areas:n,kpis:d,totalCompanies:r.length,totalAreas:n.length,totalKpis:d.length})}catch(r){o.status(500).json({error:r instanceof Error?r.message:String(r)})}}),a.get("/api/treasury/payments",w,async(i,o)=>{try{let{companyId:r,status:n}=i.query,d="WHERE 1=1",u=[],g=1;r&&(d+=` AND company_id = $${g}`,u.push(parseInt(r)),g++),n&&(d+=` AND status = $${g}`,u.push(n),g++);let I=await l(`
        SELECT * FROM scheduled_payments
        ${d}
        ORDER BY due_date ASC
      `,u);o.json(I)}catch(r){console.error("Error fetching payments:",r),o.status(500).json({error:"Failed to fetch payments"})}}),a.post("/api/treasury/payments",w,async(i,o)=>{try{let r=B(i),n={...i.body,createdBy:r.id},d=await l(`
        INSERT INTO scheduled_payments (
          company_id, supplier_name, amount, currency, due_date,
          status, reference, notes, created_by
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
        RETURNING *
      `,[n.companyId,n.supplierName,n.amount,n.currency||"MXN",n.dueDate,n.status||"pending",n.reference||null,n.notes||null,n.createdBy]);o.status(201).json(d[0])}catch(r){console.error("Error creating payment:",r),o.status(500).json({error:"Failed to create payment"})}}),a.put("/api/treasury/payments/:id/pay",w,async(i,o)=>{try{let r=B(i),n=parseInt(i.params.id),d=await l(`
        UPDATE scheduled_payments
        SET status = 'paid', paid_at = NOW(), paid_by = $1, updated_at = NOW()
        WHERE id = $2
        RETURNING *
      `,[r.id,n]);if(d.length===0)return o.status(404).json({error:"Payment not found"});o.json(d[0])}catch(r){console.error("Error marking payment as paid:",r),o.status(500).json({error:"Failed to mark payment as paid"})}}),a.get("/api/treasury/exchange-rates",w,async(i,o)=>{try{let{limit:r=30}=i.query,n=await l(`
        SELECT * FROM exchange_rates
        ORDER BY date DESC
        LIMIT $1
      `,[parseInt(r)]);o.json(n)}catch(r){console.error("Error fetching exchange rates:",r),o.status(500).json({error:"Failed to fetch exchange rates"})}}),a.post("/api/treasury/exchange-rates",w,async(i,o)=>{try{let r=B(i),{buyRate:n,sellRate:d,source:u,notes:g}=i.body,I=await l(`
        INSERT INTO exchange_rates (buy_rate, sell_rate, source, notes, created_by)
        VALUES ($1, $2, $3, $4, $5)
        RETURNING *
      `,[n,d,u||null,g||null,r.id]);o.status(201).json(I[0])}catch(r){console.error("Error creating exchange rate:",r),o.status(500).json({error:"Failed to create exchange rate"})}});let m=_e({storage:_e.diskStorage({destination:(i,o,r)=>{let n=Ne.join(process.cwd(),"uploads","receipts");be.existsSync(n)||be.mkdirSync(n,{recursive:!0}),r(null,n)},filename:(i,o,r)=>{let n=Date.now()+"-"+Math.round(Math.random()*1e9);r(null,n+"-"+o.originalname)}}),fileFilter:(i,o,r)=>{["application/pdf","application/xml","text/xml"].includes(o.mimetype)||o.originalname.endsWith(".xml")?r(null,!0):r(new Error("Solo se permiten archivos PDF y XML"))},limits:{fileSize:10*1024*1024}});a.post("/api/treasury/payments/:id/receipts",w,m.single("file"),async(i,o)=>{try{let r=B(i),n=parseInt(i.params.id),d=i.file;if(!d)return o.status(400).json({error:"No file uploaded"});let u=`/uploads/receipts/${d.filename}`,g=d.mimetype.includes("pdf")?"pdf":"xml",I=await l(`
        INSERT INTO payment_receipts (payment_id, file_name, file_url, file_type, uploaded_by)
        VALUES ($1, $2, $3, $4, $5)
        RETURNING *
      `,[n,d.originalname,u,g,r.id]);o.status(201).json(I[0])}catch(r){console.error("Error uploading receipt:",r),o.status(500).json({error:"Failed to upload receipt"})}}),a.get("/api/treasury/payments/:id/receipts",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=await l(`
        SELECT * FROM payment_receipts
        WHERE payment_id = $1
        ORDER BY uploaded_at DESC
      `,[r]);o.json(n)}catch(r){console.error("Error fetching receipts:",r),o.status(500).json({error:"Failed to fetch receipts"})}}),a.post("/api/treasury/receipts/send",w,async(i,o)=>{try{let{receiptIds:r,emails:n}=i.body;if(!r||!n||n.length===0)return o.status(400).json({error:"receiptIds and emails are required"});let d=await l(`
        SELECT pr.*, sp.supplier_name, sp.amount, sp.currency, sp.reference
        FROM payment_receipts pr
        JOIN scheduled_payments sp ON pr.payment_id = sp.id
        WHERE pr.id = ANY($1)
      `,[r]);if(d.length===0)return o.status(404).json({error:"No receipts found"});let u=[];for(let b of d){let y=Ne.join(process.cwd(),b.file_url);if(be.existsSync(y)){let S=be.readFileSync(y).toString("base64");u.push({content:S,filename:b.file_name,type:b.file_type==="pdf"?"application/pdf":"application/xml",disposition:"attachment"})}}let g=d[0],I=er(g,d);for(let b of n)await Zt({to:b,from:"marioreynoso@grupoorsega.com",subject:I.subject,html:I.html,text:I.text,attachments:u});await l(`
        UPDATE payment_receipts
        SET sent_to = $1, sent_at = NOW()
        WHERE id = ANY($2)
      `,[n,r]),o.json({success:!0,message:`Comprobantes enviados a ${n.join(", ")}`})}catch(r){console.error("Error sending receipts:",r),o.status(500).json({error:"Failed to send receipts"})}}),a.get("/api/treasury/complements",w,async(i,o)=>{try{let{companyId:r,status:n}=i.query,d="WHERE 1=1",u=[],g=1;r&&(d+=` AND company_id = $${g}`,u.push(parseInt(r)),g++),n&&(d+=` AND status = $${g}`,u.push(n),g++);let I=await l(`
        SELECT * FROM payment_complements
        ${d}
        ORDER BY created_at DESC
      `,u);o.json(I)}catch(r){console.error("Error fetching complements:",r),o.status(500).json({error:"Failed to fetch complements"})}}),a.post("/api/treasury/complements",w,async(i,o)=>{try{let r=B(i),{companyId:n,clientName:d,invoiceReference:u,amount:g,currency:I}=i.body,b=await l(`
        INSERT INTO payment_complements (
          company_id, client_name, invoice_reference, amount, currency, created_by
        ) VALUES ($1, $2, $3, $4, $5, $6)
        RETURNING *
      `,[n,d,u,g,I||"MXN",r.id]);o.status(201).json(b[0])}catch(r){console.error("Error creating complement:",r),o.status(500).json({error:"Failed to create complement"})}}),a.put("/api/treasury/complements/:id/generate",w,async(i,o)=>{try{let r=parseInt(i.params.id),n=`/uploads/complements/complement-${r}.pdf`,d=await l(`
        UPDATE payment_complements
        SET status = 'generated', generated_at = NOW(), complement_url = $1
        WHERE id = $2
        RETURNING *
      `,[n,r]);if(d.length===0)return o.status(404).json({error:"Complement not found"});o.json(d[0])}catch(r){console.error("Error generating complement:",r),o.status(500).json({error:"Failed to generate complement"})}}),a.get("/api/payment-vouchers",w,async(i,o)=>{try{let{companyId:r,status:n}=i.query,d;n&&r?d=await E.getPaymentVouchersByStatus(n,parseInt(r)):r?d=await E.getPaymentVouchersByCompany(parseInt(r)):n?d=await E.getPaymentVouchersByStatus(n):d=await E.getPaymentVouchers(),o.json(d)}catch(r){console.error("Error fetching payment vouchers:",r),o.status(500).json({error:"Failed to fetch payment vouchers"})}});let p=_e({storage:_e.diskStorage({destination:(i,o,r)=>{r(null,"uploads/payment-vouchers/")},filename:(i,o,r)=>{let n=Date.now()+"-"+Math.round(Math.random()*1e9);r(null,`voucher-${n}-${o.originalname}`)}}),fileFilter:(i,o,r)=>{["application/pdf","image/png","image/jpeg","image/jpg"].includes(o.mimetype)?r(null,!0):r(new Error("Solo se permiten archivos PDF, PNG, JPG, JPEG"))},limits:{fileSize:10*1024*1024}});a.post("/api/payment-vouchers/upload",w,c,p.single("voucher"),async(i,o)=>{try{let r=B(i),n=i.file;if(!n)return o.status(400).json({error:"No se subi\xF3 ning\xFAn archivo"});let u=K.object({companyId:K.string().transform(A=>{let D=Number(A);if(!D||D<=0)throw new Error("CompanyId inv\xE1lido");return D}),clientId:K.string().transform(A=>{let D=Number(A);if(!D||D<=0)throw new Error("ClientId inv\xE1lido");return D}),scheduledPaymentId:K.string().optional().transform(A=>A?Number(A):void 0),notes:K.string().optional()}).parse(i.body);console.log(`\u{1F4E4} [Upload] Procesando comprobante: ${n.originalname}`);let g=await E.getClient(u.clientId);if(!g)return o.status(404).json({error:"Cliente no encontrado"});let{analyzePaymentDocument:I}=await Promise.resolve().then(()=>(Ir(),br)),y=(await import("fs")).readFileSync(n.path),P=await I(y,n.mimetype),S=g.requiresPaymentComplement?"pendiente_complemento":"factura_pagada",$={companyId:u.companyId,clientId:u.clientId,clientName:g.name,scheduledPaymentId:u.scheduledPaymentId||null,status:S,voucherFileUrl:n.path,voucherFileName:n.originalname,voucherFileType:n.mimetype,extractedAmount:P.extractedAmount,extractedDate:P.extractedDate,extractedBank:P.extractedBank,extractedReference:P.extractedReference,extractedCurrency:P.extractedCurrency,ocrConfidence:P.ocrConfidence,notes:u.notes||null,uploadedBy:r.id},C=await E.createPaymentVoucher($);try{let{TreasuryAutomation:A}=await Promise.resolve().then(()=>(Ve(),Oe)),D=await A.processAutomaticFlow(C.id,u.clientId,u.companyId);console.log(`\u{1F916} [Automation] Flujo autom\xE1tico: ${D.message}`);let k=["factura_pagada","pendiente_complemento","complemento_recibido","cierre_contable"];D.nextStatus!==S&&k.includes(D.nextStatus)&&(await E.updatePaymentVoucherStatus(C.id,D.nextStatus),C.status=D.nextStatus)}catch(A){console.error("\u{1F916} [Automation] Error en flujo autom\xE1tico:",A)}console.log(`\u2705 [Upload] Comprobante creado con ID: ${C.id}, estado: ${C.status}`),o.status(201).json({voucher:C,analysis:P,autoStatus:S,requiresComplement:g.requiresPaymentComplement})}catch(r){if(console.error("Error uploading payment voucher:",r),r instanceof K.ZodError)return o.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});o.status(500).json({error:"Error al subir comprobante"})}}),a.put("/api/payment-vouchers/:id/status",w,async(i,o)=>{try{let r=parseInt(i.params.id),d=K.object({status:K.enum(["factura_pagada","pendiente_complemento","complemento_recibido","cierre_contable"])}).parse(i.body),u=await E.updatePaymentVoucherStatus(r,d.status);if(!u)return o.status(404).json({error:"Payment voucher not found"});o.json(u)}catch(r){if(console.error("Error updating payment voucher status:",r),r instanceof K.ZodError)return o.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});o.status(500).json({error:"Failed to update payment voucher status"})}}),a.put("/api/payment-vouchers/:id",w,async(i,o)=>{try{let r=parseInt(i.params.id),d=K.object({invoiceFileUrl:K.string().optional(),invoiceFileName:K.string().optional(),invoiceFileType:K.string().optional(),complementFileUrl:K.string().optional(),complementFileName:K.string().optional(),complementFileType:K.string().optional(),notes:K.string().optional()}).parse(i.body);if(Object.keys(d).length===0)return o.status(400).json({error:"No fields to update"});let u=await E.updatePaymentVoucher(r,d);if(!u)return o.status(404).json({error:"Payment voucher not found"});o.json(u)}catch(r){if(console.error("Error updating payment voucher:",r),r instanceof K.ZodError)return o.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});o.status(500).json({error:"Failed to update payment voucher"})}}),a.get("/api/fx/source-series",w,async(i,o)=>{try{let r=i.query.source||"MONEX",n=parseInt(i.query.days)||30,d=await zt(r,n);o.json(d)}catch(r){console.error("Error fetching source series:",r),o.status(500).json({error:"Failed to fetch source series"})}}),a.get("/api/fx/compare",w,async(i,o)=>{try{let r=parseInt(i.query.days)||30,n=parseFloat(i.query.usd_monthly)||25e3,d=await Gt(r,n);o.json(d)}catch(r){console.error("Error fetching comparison:",r),o.status(500).json({error:"Failed to fetch comparison"})}}),a.post("/api/fx/import-historical",w,async(i,o)=>{try{let{importBanxicoHistoricalData:r}=await Promise.resolve().then(()=>(ht(),yt)),{startDate:n,endDate:d}=i.body;if(!n||!d)return o.status(400).json({error:"startDate and endDate are required"});let u=await r(n,d);o.json(u)}catch(r){console.error("Error importing historical data:",r),o.status(500).json({error:"Failed to import historical data"})}}),a.post("/api/admin/seed-fx-rates",w,async(i,o)=>{try{if(B(i).role!=="admin")return o.status(403).json({error:"Solo administradores pueden ejecutar este endpoint"});let{startDate:n,endDate:d}=i.body,u=n||"2025-09-01",g=d||"2025-10-31";console.log(`\u{1F4E5} Importando tipos de cambio de Banxico: ${u} a ${g}`);let{importBanxicoHistoricalData:I}=await Promise.resolve().then(()=>(ht(),yt)),b=await I(u,g);console.log(`\u2705 Importaci\xF3n completada: ${b.imported} registros nuevos`),o.json({message:`Importados ${b.imported} tipos de cambio (${b.skipped} ya exist\xEDan)`,...b})}catch(r){console.error("\u274C Error al importar tipos de cambio:",r),o.status(500).json({error:"Error al importar tipos de cambio",details:r instanceof Error?r.message:String(r)})}});let f=_e({storage:_e.diskStorage({destination:(i,o,r)=>{r(null,"uploads/idrall/")},filename:(i,o,r)=>{let n=Date.now()+"-"+Math.round(Math.random()*1e9);r(null,`idrall-${n}-${o.originalname}`)}}),fileFilter:(i,o,r)=>{["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.ms-excel","text/csv"].includes(o.mimetype)||o.originalname.endsWith(".xlsx")||o.originalname.endsWith(".xls")?r(null,!0):r(new Error("Solo se permiten archivos Excel (.xlsx, .xls) o CSV"))},limits:{fileSize:10*1024*1024}});return a.post("/api/idrall/upload",w,f.single("excel"),async(i,o)=>{try{let r=B(i),n=i.file;if(!n)return o.status(400).json({error:"No se subi\xF3 ning\xFAn archivo Excel"});let u=K.object({companyId:K.string().transform(A=>{let D=Number(A);if(!D||D<=0)throw new Error("CompanyId inv\xE1lido");return D}),createAsPending:K.string().optional().transform(A=>A==="true")}).parse(i.body);console.log(`\u{1F4CA} [IdrallUpload] Procesando Excel: ${n.originalname} para empresa ${u.companyId}`);let g=await import("fs"),b=(await import("path")).join(process.cwd(),"uploads","idrall");g.existsSync(b)||g.mkdirSync(b,{recursive:!0});let{IdrallParser:y}=await Promise.resolve().then(()=>(Pr(),wr)),P=await y.parseExcel(n.path);if(!P.success)return o.status(400).json({error:"Error procesando archivo Excel",details:P.errors,totalRows:P.totalRows});console.log(`\u2705 [IdrallUpload] Excel procesado: ${P.payments.length} pagos v\xE1lidos`);let{storage:S}=await Promise.resolve().then(()=>($e(),Kt)),$=[],C=[];for(let A of P.payments)try{let D=await y.findMatchingClient(A,u.companyId),k=null,Y=A.proveedor||A.cliente||"Proveedor IDRALL";D.found?(k=D.client.id,Y=D.client.name,console.log(`\u{1F517} [IdrallUpload] Cliente encontrado: ${Y} (${D.matchType})`)):console.log(`\u26A0\uFE0F [IdrallUpload] Cliente no encontrado para: ${Y}`);let Ee={companyId:u.companyId,clientId:k,clientName:Y,amount:A.monto||A.importe||0,currency:A.moneda||"MXN",description:A.concepto||A.descripcion||"Pago IDRALL",dueDate:A.fecha_pago||A.fecha?new Date(A.fecha_pago||A.fecha||new Date):new Date,reference:A.referencia||A.factura||A.folio||"",bank:A.banco||"",account:A.cuenta||"",status:u.createAsPending?"pending":"scheduled",source:"idrall",originalData:A,createdBy:r.id},Ue=await S.createScheduledPayment(Ee);$.push(Ue)}catch(D){let k=`Error creando pago para ${A.proveedor||A.cliente}: ${D instanceof Error?D.message:"Error desconocido"}`;C.push(k),console.error(`\u274C [IdrallUpload] ${k}`)}try{g.unlinkSync(n.path)}catch(A){console.warn("\u26A0\uFE0F [IdrallUpload] Error limpiando archivo temporal:",A)}console.log(`\u{1F389} [IdrallUpload] Procesamiento completado: ${$.length} pagos creados, ${C.length} errores`),o.json({success:!0,message:"Excel procesado exitosamente",summary:{totalRows:P.totalRows,validPayments:P.payments.length,createdPayments:$.length,errors:C.length},createdPayments:$.map(A=>({id:A.id,clientName:A.clientName,amount:A.amount,dueDate:A.dueDate,status:A.status})),errors:C})}catch(r){if(console.error("\u274C [IdrallUpload] Error procesando Excel:",r),r instanceof K.ZodError)return o.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});o.status(500).json({error:"Error procesando archivo Excel de IDRALL",details:r instanceof Error?r.message:String(r)})}no}),a.post("/api/test-email",w,async(i,o)=>{try{let{to:r,department:n="treasury"}=i.body;if(!r)return o.status(400).json({error:"Email destination required"});let d=await Jt.sendEmail({to:r,subject:"Prueba de Email - Sistema Econova",html:`
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #2563eb;">\u2705 Email de Prueba Exitoso</h2>
            <p>Este es un email de prueba del sistema de Econova.</p>
            <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
              <p><strong>Departamento:</strong> ${n}</p>
              <p><strong>Timestamp:</strong> ${new Date().toLocaleString("es-MX")}</p>
              <p><strong>Estado:</strong> \u2705 Funcionando correctamente</p>
            </div>
            <p>El sistema de emails est\xE1 configurado y funcionando.</p>
            <p>Saludos,<br>Equipo de Desarrollo - Econova</p>
          </div>
        `},n);o.json({success:d.success,message:d.success?"Email enviado exitosamente":"Error enviando email",messageId:d.messageId,error:d.error})}catch(r){console.error("Error en test de email:",r),o.status(500).json({success:!1,error:"Error interno del servidor"})}}),console.log("\u2705 All routes have been configured successfully"),a}import Xn from"express";import _r from"fs";import bt from"path";import{createServer as Qn,createLogger as Zn}from"vite";import{defineConfig as Jn}from"vite";import Hn from"@vitejs/plugin-react";import De from"path";import Yn from"@replit/vite-plugin-runtime-error-modal";var Ar=Jn({plugins:[Hn(),Yn(),...process.env.NODE_ENV!=="production"&&process.env.REPL_ID!==void 0?[await import("@replit/vite-plugin-cartographer").then(a=>a.cartographer())]:[]],resolve:{alias:{"@":De.resolve(import.meta.dirname,"client","src"),"@shared":De.resolve(import.meta.dirname,"shared"),"@assets":De.resolve(import.meta.dirname,"attached_assets")}},root:De.resolve(import.meta.dirname,"client"),build:{outDir:De.resolve(import.meta.dirname,"dist/public"),emptyOutDir:!0}});import{nanoid as eo}from"nanoid";var Nr=Zn();function It(a,t="express"){let e=new Date().toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",second:"2-digit",hour12:!0});console.log(`${e} [${t}] ${a}`)}async function Cr(a,t){let e={middlewareMode:!0,hmr:{server:t},allowedHosts:!0},s=await Qn({...Ar,configFile:!1,customLogger:{...Nr,error:(c,l)=>{Nr.error(c,l),process.exit(1)}},server:e,appType:"custom"});a.use(s.middlewares),a.use("*",async(c,l,m)=>{let p=c.originalUrl;try{let f=bt.resolve(import.meta.dirname,"..","client","index.html"),i=await _r.promises.readFile(f,"utf-8");i=i.replace('src="/src/main.tsx"',`src="/src/main.tsx?v=${eo()}"`);let o=await s.transformIndexHtml(p,i);l.status(200).set({"Content-Type":"text/html"}).end(o)}catch(f){s.ssrFixStacktrace(f),m(f)}})}function $r(a){let t=bt.resolve(import.meta.dirname,"public");if(!_r.existsSync(t))throw new Error(`Could not find the build directory: ${t}, make sure to build the client first`);a.use(Xn.static(t)),a.use("*",(e,s)=>{s.sendFile(bt.resolve(t,"index.html"))})}de();le();import Et from"node-cron";var St=23;async function wt(){try{console.log("\u{1F504} [DOF Scheduler] Obteniendo tipo de cambio del DOF...");let a=await fetch("https://www.banxico.org.mx/SieAPIRest/service/v1/series/SF43718/datos/oportuno",{headers:{"Bmx-Token":process.env.BANXICO_TOKEN||""}});if(!a.ok){console.warn("\u26A0\uFE0F  [DOF Scheduler] No se pudo obtener el tipo de cambio oficial, usando valores estimados");let l=18.35+(Math.random()*.2-.1),m=Number(l.toFixed(4)),p=Number((l+.04).toFixed(4));await h.insert(z).values({buyRate:m,sellRate:p,source:"DOF",notes:"Actualizaci\xF3n autom\xE1tica (estimado)",date:new Date,createdBy:St}),console.log(`\u2705 [DOF Scheduler] Tipo de cambio insertado: Compra ${m}, Venta ${p}`);return}let t=await a.json(),e=parseFloat(t.bmx.series[0].datos[0].dato),s=Number(e.toFixed(4)),c=Number(e.toFixed(4));await h.insert(z).values({buyRate:s,sellRate:c,source:"DOF",notes:"Actualizaci\xF3n autom\xE1tica desde Banxico",date:new Date,createdBy:St}),console.log(`\u2705 [DOF Scheduler] Tipo de cambio insertado desde Banxico: Compra ${s}, Venta ${c}`)}catch(a){console.error("\u274C [DOF Scheduler] Error al obtener tipo de cambio:",a);let t=18.35+(Math.random()*.2-.1),e=Number(t.toFixed(4)),s=Number((t+.04).toFixed(4));await h.insert(z).values({buyRate:e,sellRate:s,source:"DOF",notes:"Actualizaci\xF3n autom\xE1tica (fallback)",date:new Date,createdBy:St}),console.log(`\u2705 [DOF Scheduler] Tipo de cambio insertado (fallback): Compra ${e}, Venta ${s}`)}}function Rr(){Et.schedule("0 9 * * *",async()=>{console.log("\u23F0 [DOF Scheduler] Ejecutando actualizaci\xF3n de 9:00 AM"),await wt()},{timezone:"America/Mexico_City"}),Et.schedule("0 12 * * *",async()=>{console.log("\u23F0 [DOF Scheduler] Ejecutando actualizaci\xF3n de 12:00 PM"),await wt()},{timezone:"America/Mexico_City"}),Et.schedule("0 17 * * *",async()=>{console.log("\u23F0 [DOF Scheduler] Ejecutando actualizaci\xF3n de 5:00 PM"),await wt()},{timezone:"America/Mexico_City"}),console.log("\u{1F4C5} [DOF Scheduler] Programador de tipo de cambio DOF inicializado"),console.log("\u23F0 Actualizaciones programadas: 9:00 AM, 12:00 PM y 5:00 PM (Hora de M\xE9xico)")}function Dr(a,t,e){try{let c=a.user;if(!c)return e();let l=a.query.companyId?parseInt(a.query.companyId):a.body?.companyId;l&&c.companyId&&l!==c.companyId&&(console.log("\u{1F6A8} [SECURITY ALERT] Cross-company access attempt:"),console.log(`   User: ${c.name} (ID: ${c.id}, Company: ${c.companyId})`),console.log(`   Requested Company: ${l}`),console.log(`   Endpoint: ${a.method} ${a.path}`),console.log(`   IP: ${a.ip}`),console.log(`   User-Agent: ${a.get("User-Agent")}`),console.log(`   Timestamp: ${new Date().toISOString()}`),console.log("   ---")),c.role==="admin"&&l&&console.log(`\u{1F7E1} [ADMIN ACCESS] Admin ${c.name} accessing company ${l}`),l&&c.companyId===l&&console.log(`\u{1F7E2} [NORMAL ACCESS] User ${c.name} accessing own company data`),e()}catch(s){console.error("[SECURITY MONITOR ERROR]:",s),e()}}function jr(a,t,e){let s=a.ip,c=a.body?.email;console.log(`\u{1F510} [LOGIN ATTEMPT] IP: ${s}, Email: ${c}, Time: ${new Date().toISOString()}`),e()}function Ur(a,t,e){let s=a.user,c=a.file;c&&console.log(`\u{1F4C1} [FILE UPLOAD] User: ${s?.name}, File: ${c.originalname}, Size: ${c.size} bytes`),e()}function kr(a,t,e){let s=a.user,c=a.path;["/api/users","/api/companies","/api/kpis","/api/shipments","/api/clients"].some(m=>c.includes(m))&&console.log(`\u{1F50D} [API ACCESS] User: ${s?.name}, Endpoint: ${c}, Method: ${a.method}`),e()}de();async function Mr(a,t){let e=Date.now(),s={status:"healthy",timestamp:new Date().toISOString(),services:{database:"down",openai:"not_configured",sendgrid:"not_configured"},metrics:{uptime:process.uptime(),memoryUsage:process.memoryUsage(),version:process.env.npm_package_version||"1.0.0"}};try{try{await h.execute("SELECT 1"),s.services.database="up",oe.debug("Database health check passed")}catch(m){s.services.database="down",s.status="unhealthy",oe.error("Database health check failed",{error:m instanceof Error?m.message:String(m)})}process.env.OPENAI_API_KEY&&process.env.OPENAI_API_KEY!=="your-openai-api-key-here"?s.services.openai="up":(s.services.openai="not_configured",s.status==="healthy"&&(s.status="degraded")),process.env.SENDGRID_API_KEY&&process.env.SENDGRID_API_KEY!=="your-sendgrid-api-key"?s.services.sendgrid="up":(s.services.sendgrid="not_configured",s.status==="healthy"&&(s.status="degraded"));let c=Date.now()-e;oe.info("Health check completed",{status:s.status,responseTime:`${c}ms`,services:s.services});let l=s.status==="unhealthy"?503:200;t.status(l).json(s)}catch(c){oe.error("Health check failed",{error:c instanceof Error?c.message:String(c)}),s.status="unhealthy",t.status(503).json(s)}}async function Kr(a,t){try{await h.execute("SELECT 1"),t.status(200).json({status:"ready"})}catch(e){oe.error("Readiness check failed",{error:e instanceof Error?e.message:String(e)}),t.status(503).json({status:"not_ready"})}}async function Or(a,t){t.status(200).json({status:"alive",timestamp:new Date().toISOString(),uptime:process.uptime()})}import Ie from"path";import je from"fs";function oo(){try{let a=process.env.NODE_ENV||"undefined",t=process.env.NODE_ENV==="production"?"production":"development";console.log(`
\u{1F50D} === BOOT DIAGNOSTICS ===`),console.log(`\u{1F4CA} NODE_ENV: ${a}`),console.log(`\u{1F4CA} Express env will be: ${t}`),console.log(`\u{1F4CA} Current working directory: ${process.cwd()}`);let e=import.meta.url,s=Ie.dirname(ro(e));console.log(`\u{1F4CA} Script directory: ${s}`);let c=Ie.resolve(s,"index.js"),l=Ie.resolve(s,"public"),m=Ie.resolve(l,"index.html"),p=Ie.resolve(s,"..","server","dist","index.js"),f=Ie.resolve(s,"..","dist","public"),i=Ie.resolve(f,"index.html");console.log(`\u{1F4C2} Expected dist/index.js: ${c}`),console.log(`\u{1F4C2} Expected dist/public: ${l}`),console.log(`\u{1F4C2} Expected dist/public/index.html: ${m}`),console.log(`\u2705 dist/index.js exists: ${je.existsSync(c)} (expected for production)`),console.log(`\u2705 dist/public exists: ${je.existsSync(l)} (expected for production)`),console.log(`\u2705 dist/public/index.html exists: ${je.existsSync(m)} (expected for production)`),console.log("\u{1F4E6} Build artifacts in current locations:"),console.log(`   backend (server/dist/index.js): ${je.existsSync(p)}`),console.log(`   frontend (dist/public/index.html): ${je.existsSync(i)}`);let o=["DATABASE_URL","JWT_SECRET","SENDGRID_API_KEY","REPL_ID","REPL_SLUG"];console.log("\u{1F512} Environment variables status:"),o.forEach(r=>{let n=!!process.env[r],d=process.env[r]?.length||0;console.log(`   ${r}: ${n?"\u2705 SET":"\u274C MISSING"} ${n?`(${d} chars)`:""}`)}),console.log(`=== END BOOT DIAGNOSTICS ===
`)}catch(a){console.error("\u26A0\uFE0F Error in boot diagnostics:",a),console.log(`Continuing server startup...
`)}}oo();var Q=Be();process.env.NODE_ENV==="production"&&(Q.set("trust proxy",1),console.log("\u{1F512} Trust proxy enabled for production (.replit.app domain)"));Q.use(Be.json());Q.use(Be.urlencoded({extended:!1}));Q.use("/api",Dr);Q.use("/api/login",jr);Q.use("/api/upload",Ur);Q.use("/api",kr);Q.use((a,t,e)=>{t.setHeader("X-Frame-Options","DENY"),t.setHeader("X-Content-Type-Options","nosniff"),t.setHeader("X-XSS-Protection","1; mode=block"),t.setHeader("Referrer-Policy","strict-origin-when-cross-origin"),t.setHeader("Content-Security-Policy","default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"),e()});Q.use(Be.static(Ie.join(process.cwd(),"public")));function Vr(a){if(!a||typeof a!="object")return a;let t=["password","token","authorization","apiKey","secret","jwt"],e=Array.isArray(a)?[]:{};for(let[s,c]of Object.entries(a))t.some(l=>s.toLowerCase().includes(l))?e[s]="[REDACTED]":typeof c=="object"&&c!==null?e[s]=Vr(c):e[s]=c;return e}Q.use((a,t,e)=>{let s=Date.now(),c=a.path,l,m=t.json;t.json=function(p,...f){return l=p,m.apply(t,[p,...f])},t.on("finish",()=>{let p=Date.now()-s;if(c.startsWith("/api")){let f=`${a.method} ${c} ${t.statusCode} in ${p}ms`;if(l){let i=Vr(l);f+=` :: ${JSON.stringify(i)}`}f.length>80&&(f=f.slice(0,79)+"\u2026"),It(f)}}),e()});(async()=>{Q.get("/api/health",Mr),Q.get("/api/health/ready",Kr),Q.get("/api/health/live",Or),Tr(Q);let a=to(Q),t=Q.get("env");if(console.log(`\u{1F680} Express environment detected: ${t}`),t==="development")console.log("\u{1F527} Setting up Vite middleware for development..."),await Cr(Q,a),console.log("\u2705 Vite middleware configured");else{console.log("\u{1F4E6} Setting up static file serving for production...");try{$r(Q),console.log("\u2705 Static file serving configured")}catch(s){throw console.error("\u274C CRITICAL ERROR setting up static files:",s),s}}Q.use((s,c,l,m)=>{let p=s.status||s.statusCode||500,f=s.message||"Internal Server Error";console.error(`[Server Error ${p}]:`,s.message),p>=500&&console.error("Full error stack:",s.stack),l.status(p).json({message:f})});let e=8080;a.listen(e,"0.0.0.0",()=>{It(`serving on port ${e}`),console.log("\u23F8\uFE0F  Auto-cierre autom\xE1tico DESACTIVADO - cierre manual requerido"),console.log("\u2705 Sistema configurado para cierre manual"),Rr()})})();
