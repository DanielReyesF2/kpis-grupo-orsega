var tt=Object.defineProperty;var Jr=Object.getOwnPropertyDescriptor;var Yr=Object.getOwnPropertyNames;var Xr=Object.prototype.hasOwnProperty;var re=(a,t)=>()=>(a&&(t=a(a=0)),t);var se=(a,t)=>{for(var e in t)tt(a,e,{get:t[e],enumerable:!0})},Qr=(a,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let c of Yr(t))!Xr.call(a,c)&&c!==e&&tt(a,c,{get:()=>t[c],enumerable:!(s=Jr(t,c))||s.enumerable});return a};var rt=a=>Qr(tt({},"__esModule",{value:!0}),a);var ze={};se(ze,{actionPlans:()=>ye,areas:()=>H,clients:()=>Q,companies:()=>z,cycleTimeMetricsSchema:()=>fo,exchangeRates:()=>G,insertActionPlanSchema:()=>so,insertAreaSchema:()=>st,insertClientSchema:()=>dt,insertCompanySchema:()=>nt,insertExchangeRateSchema:()=>Po,insertJobProfileSchema:()=>go,insertKpiDuraSchema:()=>to,insertKpiOrsegaSchema:()=>ro,insertKpiSchema:()=>at,insertKpiValueSchema:()=>He,insertNotificationSchema:()=>po,insertPaymentComplementSchema:()=>So,insertPaymentReceiptSchema:()=>bo,insertPaymentVoucherSchema:()=>wo,insertProductSchema:()=>vo,insertProviderSchema:()=>Eo,insertScheduledPaymentSchema:()=>Io,insertShipmentCycleTimesSchema:()=>ho,insertShipmentItemSchema:()=>lo,insertShipmentNotificationSchema:()=>mo,insertShipmentSchema:()=>ct,insertShipmentUpdateSchema:()=>uo,insertSupplierSchema:()=>We,insertUserActivationTokenSchema:()=>eo,insertUserSchema:()=>_e,jobProfileWithDetails:()=>yo,jobProfiles:()=>ue,kpiValues:()=>x,kpiValuesDura:()=>oo,kpiValuesOrsega:()=>no,kpis:()=>$,kpisDura:()=>De,kpisOrsega:()=>ke,loginSchema:()=>ao,notifications:()=>K,paymentComplements:()=>zt,paymentReceipts:()=>Wt,paymentVouchers:()=>F,products:()=>Bt,providers:()=>qt,registerUserSchema:()=>co,scheduledPayments:()=>pt,shipmentCycleTimes:()=>Y,shipmentItems:()=>de,shipmentNotifications:()=>Ft,shipmentStatusEnum:()=>Be,shipmentUpdates:()=>Ee,shipments:()=>Z,suppliers:()=>ut,updateKpiSchema:()=>it,updateKpiValueSchema:()=>io,updateShipmentStatusSchema:()=>lt,userActivationTokens:()=>ge,users:()=>U,voucherStatusEnum:()=>Ht});import{pgTable as V,text as f,serial as q,integer as O,boolean as ae,timestamp as D,json as we,pgEnum as Vt,real as oe,varchar as Zr,uniqueIndex as Lt}from"drizzle-orm/pg-core";import{sql as ot}from"drizzle-orm";import{createInsertSchema as B}from"drizzle-zod";import{z as N}from"zod";var Be,U,_e,ge,eo,z,nt,H,st,De,ke,to,ro,oo,no,$,at,x,He,ye,so,ao,io,it,co,Z,ct,de,lo,Ee,uo,K,po,Ft,mo,lt,ue,go,yo,Y,ho,fo,Q,dt,qt,Eo,ut,We,Bt,vo,Ht,pt,Io,Wt,bo,zt,So,G,Po,F,wo,ie=re(()=>{"use strict";Be=Vt("shipment_status",["pending","in_transit","delayed","delivered","cancelled"]),U=V("users",{id:q("id").primaryKey(),name:f("name").notNull(),email:f("email").notNull().unique(),password:f("password").notNull(),role:f("role").notNull().default("viewer"),companyId:O("company_id"),areaId:O("area_id"),lastLogin:D("last_login")}),_e=B(U).omit({id:!0,lastLogin:!0}),ge=V("user_activation_tokens",{id:q("id").primaryKey(),token:f("token").notNull().unique(),email:f("email").notNull(),expiresAt:D("expires_at").notNull(),used:ae("used").default(!1),createdAt:D("created_at").defaultNow()}),eo=B(ge).omit({id:!0,createdAt:!0}),z=V("companies",{id:q("id").primaryKey(),name:f("name").notNull(),description:f("description"),sector:f("sector"),logo:f("logo"),createdAt:D("created_at").defaultNow()}),nt=B(z).omit({id:!0,createdAt:!0}),H=V("areas",{id:q("id").primaryKey(),name:f("name").notNull(),description:f("description"),companyId:O("company_id").notNull()}),st=B(H).omit({id:!0}),De=V("kpis_dura",{id:q("id").primaryKey(),area:f("area").notNull(),kpiName:f("kpi_name").notNull(),description:f("description"),calculationMethod:f("calculation_method"),goal:f("goal"),unit:f("unit"),frequency:f("frequency"),source:f("source"),responsible:f("responsible"),period:f("period"),createdAt:D("created_at").defaultNow()}),ke=V("kpis_orsega",{id:q("id").primaryKey(),area:f("area").notNull(),kpiName:f("kpi_name").notNull(),description:f("description"),calculationMethod:f("calculation_method"),goal:f("goal"),unit:f("unit"),frequency:f("frequency"),source:f("source"),responsible:f("responsible"),period:f("period"),createdAt:D("created_at").defaultNow()}),to=B(De).omit({id:!0,createdAt:!0}),ro=B(ke).omit({id:!0,createdAt:!0}),oo=V("kpi_values_dura",{id:q("id").primaryKey(),kpi_id:O("kpi_id").notNull(),month:f("month").notNull(),year:O("year").notNull(),value:oe("value").notNull(),created_at:D("created_at").defaultNow()}),no=V("kpi_values_orsega",{id:q("id").primaryKey(),kpi_id:O("kpi_id").notNull(),month:f("month").notNull(),year:O("year").notNull(),value:oe("value").notNull(),created_at:D("created_at").defaultNow()}),$=V("kpis",{id:q("id").primaryKey(),name:f("name").notNull(),description:f("description"),areaId:O("area_id").notNull(),companyId:O("company_id").notNull(),unit:f("unit").notNull(),target:f("target").notNull(),frequency:f("frequency").notNull(),calculationMethod:f("calculation_method"),responsible:f("responsible"),invertedMetric:ae("inverted_metric").default(!1)}),at=B($).omit({id:!0}),x=V("kpi_values",{id:q("id").primaryKey(),kpiId:O("kpi_id").notNull(),userId:O("user_id"),value:f("value").notNull(),date:D("date").defaultNow(),period:f("period").notNull(),compliancePercentage:f("compliance_percentage"),status:f("status"),comments:f("comments"),updatedBy:O("updated_by")},a=>({userKpiUnique:Lt("user_kpi_unique").on(a.kpiId,a.userId,a.period).where(ot`${a.userId} IS NOT NULL`),companyKpiUnique:Lt("company_kpi_unique").on(a.kpiId,a.period).where(ot`${a.userId} IS NULL`)})),He=B(x).omit({id:!0,date:!0}),ye=V("action_plans",{id:q("id").primaryKey(),kpiId:O("kpi_id").notNull(),problemDescription:f("problem_description").notNull(),correctiveActions:f("corrective_actions").notNull(),responsible:f("responsible").notNull(),startDate:D("start_date").notNull(),endDate:D("end_date").notNull(),status:f("status").notNull(),results:f("results")}),so=B(ye).omit({id:!0}),ao=N.object({username:N.string().min(3,"El nombre de usuario debe tener al menos 3 caracteres"),password:N.string().min(6,"La contrase\xF1a debe tener al menos 6 caracteres")}),io=He.extend({compliancePercentage:N.string().optional(),status:N.string().optional()}),it=N.object({name:N.string().optional(),description:N.string().optional(),areaId:N.number().optional(),companyId:N.number().optional(),unit:N.string().optional(),target:N.union([N.string(),N.number()]).transform(a=>typeof a=="number"?a.toString():a).optional(),frequency:N.string().optional(),calculationMethod:N.string().optional(),responsible:N.string().optional(),invertedMetric:N.boolean().optional()}),co=_e.extend({password:N.string().min(6,"La contrase\xF1a debe tener al menos 6 caracteres"),confirmPassword:N.string().min(6,"La contrase\xF1a debe tener al menos 6 caracteres")}).refine(a=>a.password===a.confirmPassword,{message:"Las contrase\xF1as no coinciden",path:["confirmPassword"]}),Z=V("shipments",{id:q("id").primaryKey(),trackingCode:f("tracking_code").notNull().unique(),companyId:O("company_id").notNull(),customerId:O("customer_id"),customerName:f("customer_name").notNull(),purchaseOrder:f("purchase_order").notNull(),customerEmail:f("customer_email"),customerPhone:f("customer_phone"),invoiceNumber:f("invoice_number"),destination:f("destination").notNull(),origin:f("origin").notNull(),product:f("product").notNull(),quantity:f("quantity").notNull(),unit:f("unit").notNull(),departureDate:D("departure_date"),estimatedDeliveryDate:D("estimated_delivery_date"),actualDeliveryDate:D("actual_delivery_date"),status:Be("status").notNull().default("pending"),carrier:f("carrier"),vehicleInfo:f("vehicle_info"),vehicleType:f("vehicle_type"),fuelType:f("fuel_type"),distance:f("distance"),carbonFootprint:f("carbon_footprint"),driverName:f("driver_name"),driverPhone:f("driver_phone"),comments:f("comments"),createdAt:D("created_at").defaultNow(),updatedAt:D("updated_at").defaultNow(),destinationLat:oe("destination_lat"),destinationLng:oe("destination_lng"),originLat:oe("origin_lat"),originLng:oe("origin_lng"),purchaseOrderNumber:f("purchase_order_number"),notificationEmails:we("notification_emails")}),ct=B(Z).omit({id:!0,createdAt:!0,updatedAt:!0}),de=V("shipment_items",{id:q("id").primaryKey(),shipmentId:O("shipment_id").notNull(),product:f("product").notNull(),quantity:f("quantity").notNull(),unit:f("unit").notNull(),description:f("description"),createdAt:D("created_at").defaultNow()}),lo=B(de).omit({id:!0,createdAt:!0}),Ee=V("shipment_updates",{id:q("id").primaryKey(),shipmentId:O("shipment_id").notNull(),status:Be("status").notNull(),location:f("location"),comments:f("comments"),updatedBy:O("updated_by"),timestamp:D("timestamp").defaultNow()}),uo=B(Ee).omit({id:!0,timestamp:!0}),K=V("notifications",{id:q("id").primaryKey(),title:f("title").notNull(),message:f("message").notNull(),type:f("type").notNull().default("info"),fromUserId:O("from_user_id").notNull(),toUserId:O("to_user_id"),companyId:O("company_id"),areaId:O("area_id"),priority:f("priority").notNull().default("normal"),read:ae("read").default(!1),createdAt:D("created_at").defaultNow(),readAt:D("read_at")}),po=B(K).omit({id:!0,createdAt:!0}),Ft=V("shipment_notifications",{id:q("id").primaryKey(),shipmentId:O("shipment_id").notNull(),emailTo:f("email_to").notNull(),subject:f("subject").notNull(),status:f("status").notNull(),sentAt:D("sent_at").defaultNow(),sentBy:O("sent_by").notNull(),shipmentStatus:Be("shipment_status").notNull(),errorMessage:f("error_message")}),mo=B(Ft).omit({id:!0,sentAt:!0}),lt=N.object({status:N.enum(["pending","in_transit","delayed","delivered","cancelled"]),sendNotification:N.boolean().default(!0),comments:N.string().optional(),location:N.string().optional(),invoiceNumber:N.string().optional()}),ue=V("job_profiles",{id:q("id").primaryKey(),areaId:O("area_id").notNull(),companyId:O("company_id").notNull(),title:f("title").notNull(),description:f("description").notNull(),mainActivities:we("main_activities").notNull(),responsibilities:we("responsibilities").notNull(),kpiInstructions:we("kpi_instructions").notNull(),tips:we("tips").notNull(),processes:we("processes").notNull(),updateFrequency:we("update_frequency").notNull(),createdAt:D("created_at").defaultNow(),updatedAt:D("updated_at").defaultNow()}),go=B(ue).omit({id:!0,createdAt:!0,updatedAt:!0}),yo=N.object({id:N.number(),areaId:N.number(),companyId:N.number(),title:N.string(),description:N.string(),mainActivities:N.array(N.string()),responsibilities:N.array(N.string()),kpiInstructions:N.array(N.object({kpiName:N.string(),description:N.string(),updateFrequency:N.string(),instructions:N.string()})),tips:N.array(N.object({category:N.string(),tip:N.string()})),processes:N.array(N.object({name:N.string(),description:N.string(),steps:N.array(N.string())})),updateFrequency:N.object({daily:N.array(N.string()),weekly:N.array(N.string()),monthly:N.array(N.string())}),areaName:N.string(),companyName:N.string(),userKpis:N.array(N.object({id:N.number(),name:N.string(),target:N.string(),frequency:N.string()}))}),Y=V("shipment_cycle_times",{id:q("id").primaryKey(),shipmentId:O("shipment_id").notNull().unique(),companyId:O("company_id").notNull(),createdAt:D("created_at").notNull(),pendingAt:D("pending_at"),inTransitAt:D("in_transit_at"),deliveredAt:D("delivered_at"),closedAt:D("closed_at"),hoursPendingToTransit:f("hours_pending_to_transit"),hoursTransitToDelivered:f("hours_transit_to_delivered"),hoursDeliveredToClosed:f("hours_delivered_to_closed"),hoursTotalCycle:f("hours_total_cycle"),hoursToDelivery:f("hours_to_delivery"),computedAt:D("computed_at").defaultNow(),updatedAt:D("updated_at").defaultNow()}),ho=B(Y).omit({id:!0,computedAt:!0,updatedAt:!0}),fo=N.object({period:N.string(),startDate:N.string(),endDate:N.string(),companyId:N.number().optional(),avgPendingToTransit:N.number().nullable(),avgTransitToDelivered:N.number().nullable(),avgDeliveredToClosed:N.number().nullable(),avgTotalCycle:N.number().nullable(),avgToDelivery:N.number().nullable(),totalShipments:N.number(),completedShipments:N.number()}),Q=V("clients",{id:q("id").primaryKey(),name:f("name").notNull(),email:f("email").notNull(),phone:f("phone"),contactPerson:f("contact_person"),company:f("company"),address:f("address"),paymentTerms:O("payment_terms"),createdAt:D("created_at").defaultNow(),updatedAt:D("updated_at").defaultNow(),requiresReceipt:ae("requires_receipt").default(!0),reminderFrequency:O("reminder_frequency"),isActive:ae("is_active").default(!0),notes:f("notes"),companyId:O("company_id"),clientCode:f("client_code"),secondaryEmail:f("secondary_email"),city:f("city"),state:f("state"),postalCode:f("postal_code"),country:f("country").default("M\xE9xico"),emailNotifications:ae("email_notifications").default(!0),customerType:f("customer_type"),requiresPaymentComplement:ae("requires_payment_complement").default(!1)}),dt=B(Q).omit({id:!0,createdAt:!0,updatedAt:!0}),qt=V("provider",{id:Zr("id").primaryKey().default(ot`gen_random_uuid()`),name:f("name").notNull(),email:f("email"),phone:f("phone"),contactName:f("contact_name"),notes:f("notes"),rating:oe("rating"),isActive:ae("is_active").notNull().default(!0),shortName:f("short_name"),companyId:O("company_id"),location:f("location"),requiresRep:ae("requires_rep").default(!1),repFrequency:O("rep_frequency"),reminderEmail:f("reminder_email"),createdAt:D("created_at").notNull().defaultNow(),updatedAt:D("updated_at").notNull().defaultNow()}),Eo=B(qt).omit({id:!0,createdAt:!0,updatedAt:!0}),ut=V("suppliers",{id:q("id").primaryKey(),name:f("name").notNull(),shortName:f("short_name"),email:f("email"),location:f("location"),requiresRep:ae("requires_rep").default(!1),repFrequency:O("rep_frequency"),companyId:O("company_id"),isActive:ae("is_active").default(!0),notes:f("notes"),createdAt:D("created_at").defaultNow(),updatedAt:D("updated_at").defaultNow()}),We=B(ut).omit({id:!0,createdAt:!0,updatedAt:!0}),Bt=V("products",{id:q("id").primaryKey(),name:f("name").notNull(),companyId:O("company_id").notNull(),isActive:ae("is_active").notNull().default(!0),createdAt:D("created_at").notNull().defaultNow(),updatedAt:D("updated_at").notNull().defaultNow()}),vo=B(Bt).omit({id:!0,createdAt:!0,updatedAt:!0}),Ht=Vt("voucher_status",["factura_pagada","pendiente_complemento","complemento_recibido","cierre_contable"]),pt=V("scheduled_payments",{id:q("id").primaryKey(),companyId:O("company_id").notNull(),supplierId:O("supplier_id").references(()=>ut.id),supplierName:f("supplier_name"),amount:oe("amount").notNull(),currency:f("currency").notNull().default("MXN"),dueDate:D("due_date").notNull(),status:f("status").notNull().default("pending"),reference:f("reference"),notes:f("notes"),paidAt:D("paid_at"),paidBy:O("paid_by"),createdBy:O("created_by").notNull(),createdAt:D("created_at").notNull().defaultNow(),updatedAt:D("updated_at").notNull().defaultNow()}),Io=B(pt).omit({id:!0,createdAt:!0,updatedAt:!0}),Wt=V("payment_receipts",{id:q("id").primaryKey(),paymentId:O("payment_id").references(()=>pt.id,{onDelete:"cascade"}),fileName:f("file_name").notNull(),fileUrl:f("file_url").notNull(),fileType:f("file_type").notNull(),uploadedBy:O("uploaded_by").notNull(),uploadedAt:D("uploaded_at").notNull().defaultNow(),sentTo:f("sent_to").array(),sentAt:D("sent_at")}),bo=B(Wt).omit({id:!0,uploadedAt:!0}),zt=V("payment_complements",{id:q("id").primaryKey(),companyId:O("company_id").notNull(),clientName:f("client_name").notNull(),invoiceReference:f("invoice_reference").notNull(),amount:oe("amount").notNull(),currency:f("currency").notNull().default("MXN"),complementUrl:f("complement_url"),status:f("status").notNull().default("pending"),generatedAt:D("generated_at"),sentAt:D("sent_at"),createdBy:O("created_by").notNull(),createdAt:D("created_at").notNull().defaultNow()}),So=B(zt).omit({id:!0,createdAt:!0}),G=V("exchange_rates",{id:q("id").primaryKey(),date:D("date").notNull().defaultNow(),buyRate:oe("buy_rate").notNull(),sellRate:oe("sell_rate").notNull(),source:f("source"),notes:f("notes"),createdBy:O("created_by").notNull(),createdAt:D("created_at").notNull().defaultNow()}),Po=B(G).omit({id:!0,createdAt:!0}),F=V("payment_vouchers",{id:q("id").primaryKey(),companyId:O("company_id").notNull(),clientId:O("client_id").notNull(),clientName:f("client_name").notNull(),scheduledPaymentId:O("scheduled_payment_id"),status:Ht("status").notNull().default("factura_pagada"),voucherFileUrl:f("voucher_file_url").notNull(),voucherFileName:f("voucher_file_name").notNull(),voucherFileType:f("voucher_file_type").notNull(),invoiceFileUrl:f("invoice_file_url"),invoiceFileName:f("invoice_file_name"),invoiceFileType:f("invoice_file_type"),complementFileUrl:f("complement_file_url"),complementFileName:f("complement_file_name"),complementFileType:f("complement_file_type"),extractedAmount:oe("extracted_amount"),extractedDate:D("extracted_date"),extractedBank:f("extracted_bank"),extractedReference:f("extracted_reference"),extractedCurrency:f("extracted_currency"),ocrConfidence:oe("ocr_confidence"),notes:f("notes"),uploadedBy:O("uploaded_by").notNull(),createdAt:D("created_at").notNull().defaultNow(),updatedAt:D("updated_at").notNull().defaultNow(),lastReminderSent:D("last_reminder_sent"),reminderCount:O("reminder_count").default(0)}),wo=B(F).omit({id:!0,createdAt:!0,updatedAt:!0})});var Jt={};se(Jt,{db:()=>v,pool:()=>Gt});import{Pool as To,neonConfig as No}from"@neondatabase/serverless";import{drizzle as _o}from"drizzle-orm/neon-serverless";import xo from"ws";var Gt,v,pe=re(()=>{"use strict";ie();No.webSocketConstructor=xo;if(!process.env.DATABASE_URL)throw new Error("DATABASE_URL must be set. Did you forget to provision a database?");Gt=new To({connectionString:process.env.DATABASE_URL}),v=_o({client:Gt,schema:ze})});import{eq as T,and as ne,desc as ce,isNotNull as Yt,sql as xe,gte as Xt}from"drizzle-orm";var Oe,jn,Qt=re(()=>{"use strict";ie();pe();Oe=class{constructor(){}async getUser(t){try{let[e]=await v.select().from(U).where(T(U.id,t));return e}catch(e){console.error("Error getting user:",e);return}}async getUserByEmail(t){try{let e=t.toLowerCase(),[s]=await v.select().from(U).where(xe`LOWER(${U.email}) = ${e}`);return s}catch(e){console.error("Error getting user by email:",e);return}}async getUserByUsername(t){try{if(t.includes("@")){let s=t.toLowerCase(),[c]=await v.select().from(U).where(xe`LOWER(${U.email}) = ${s}`);return c}return(await v.select().from(U)).find(s=>{let c=s.email.toLowerCase().split("@");return c.length>0&&c[0]===t.toLowerCase()})}catch(e){console.error("Error getting user by username:",e);return}}async createUser(t){try{let[e]=await v.insert(U).values(t).returning();return e}catch(e){throw console.error("Error creating user:",e),e}}async updateUser(t,e){try{let[s]=await v.update(U).set(e).where(T(U.id,t)).returning();return s}catch(s){console.error("Error updating user:",s);return}}async getUsers(){try{return await v.select().from(U)}catch(t){return console.error("Error getting users:",t),[]}}async deleteUser(t){try{let e=await v.delete(U).where(T(U.id,t));return e.rowCount!==null&&e.rowCount>0}catch(e){return console.error("Error deleting user:",e),!1}}async getCompany(t){try{let[e]=await v.select().from(z).where(T(z.id,t));return e}catch(e){console.error("Error getting company:",e);return}}async getCompanies(){try{return await v.select().from(z)}catch(t){return console.error("Error getting companies:",t),[]}}async createCompany(t){try{let[e]=await v.insert(z).values(t).returning();return e}catch(e){throw console.error("Error creating company:",e),e}}async updateCompany(t,e){try{let[s]=await v.update(z).set(e).where(T(z.id,t)).returning();return s}catch(s){console.error("Error updating company:",s);return}}async getArea(t){try{let[e]=await v.select().from(H).where(T(H.id,t));return e}catch(e){console.error("Error getting area:",e);return}}async getAreas(){try{return await v.select().from(H)}catch(t){return console.error("Error getting areas:",t),[]}}async getAreasByCompany(t){try{return await v.select().from(H).where(T(H.companyId,t))}catch(e){return console.error("Error getting areas by company:",e),[]}}async createArea(t){try{let[e]=await v.insert(H).values(t).returning();return e}catch(e){throw console.error("Error creating area:",e),e}}async updateArea(t,e){try{let[s]=await v.update(H).set(e).where(T(H.id,t)).returning();return s}catch(s){console.error("Error updating area:",s);return}}async getKpi(t){try{let[e]=await v.select().from($).where(T($.id,t));return e}catch(e){console.error("Error getting KPI:",e);return}}async getKpis(){try{return await v.select().from($)}catch(t){return console.error("Error getting KPIs:",t),[]}}async getKpisByCompany(t){try{return await v.select().from($).where(T($.companyId,t))}catch(e){return console.error("Error getting KPIs by company:",e),[]}}async getKpisByArea(t){try{return await v.select().from($).where(T($.areaId,t))}catch(e){return console.error("Error getting KPIs by area:",e),[]}}async getKpisByCompanyAndArea(t,e){try{return await v.select().from($).where(ne(T($.companyId,t),T($.areaId,e)))}catch(s){return console.error("Error getting KPIs by company and area:",s),[]}}async createKpi(t){try{let[e]=await v.insert($).values(t).returning();return e}catch(e){throw console.error("Error creating KPI:",e),e}}async updateKpi(t,e){try{let[s]=await v.update($).set(e).where(T($.id,t)).returning();return s}catch(s){console.error("Error updating KPI:",s);return}}async deleteKpi(t){try{return await v.delete(x).where(T(x.kpiId,t)),((await v.delete($).where(T($.id,t))).rowCount??0)>0}catch(e){return console.error("Error deleting KPI:",e),!1}}async getKpiValue(t){try{let[e]=await v.select().from(x).where(T(x.id,t));return e}catch(e){console.error("Error getting KPI value:",e);return}}async getKpiValues(){try{return await v.select().from(x)}catch(t){return console.error("Error getting KPI values:",t),[]}}async getKpiValuesByKpi(t){try{return await v.select().from(x).where(T(x.kpiId,t))}catch(e){return console.error("Error getting KPI values by KPI:",e),[]}}async getKpiValuesByUser(t){try{return await v.select().from(x).where(T(x.userId,t))}catch(e){return console.error("Error getting KPI values by user:",e),[]}}async deleteKpiValuesByUser(t,e){try{return((await v.delete(x).where(ne(T(x.userId,t),T(x.kpiId,e)))).rowCount??0)>0}catch(s){return console.error("Error deleting KPI values by user:",s),!1}}async getLatestKpiValues(t,e){try{return await v.select().from(x).where(T(x.kpiId,t)).orderBy(ce(x.date)).limit(e)}catch(s){return console.error("Error getting latest KPI values:",s),[]}}async createKpiValue(t){try{let e={...t,date:new Date},[s]=await v.insert(x).values(e).returning();return s}catch(e){console.error("Error creating KPI value:",e);let s=e;if(s?.code==="23505"&&String(s?.detail||"").includes("kpi_values_pkey"))try{console.warn("[KPI] Detected sequence mismatch on kpi_values.id. Repairing sequence and retrying..."),await v.execute(xe`SELECT setval(
            pg_get_serial_sequence('kpi_values','id'),
            COALESCE((SELECT MAX(id) + 1 FROM kpi_values), 1),
            false
          )`);let[c]=await v.insert(x).values({...t,date:new Date}).returning();return c}catch(c){console.error("[KPI] Sequence repair failed:",c)}throw e}}async getActionPlan(t){try{let[e]=await v.select().from(ye).where(T(ye.id,t));return e}catch(e){console.error("Error getting action plan:",e);return}}async getActionPlansByKpi(t){try{return await v.select().from(ye).where(T(ye.kpiId,t))}catch(e){return console.error("Error getting action plans by KPI:",e),[]}}async createActionPlan(t){try{let[e]=await v.insert(ye).values(t).returning();return e}catch(e){throw console.error("Error creating action plan:",e),e}}async updateActionPlan(t,e){try{let[s]=await v.update(ye).set(e).where(T(ye.id,t)).returning();return s}catch(s){console.error("Error updating action plan:",s);return}}async getShipment(t){try{let[e]=await v.select().from(Z).where(T(Z.id,t));return e}catch(e){console.error("Error getting shipment:",e);return}}async getShipmentByTrackingCode(t){try{let[e]=await v.select().from(Z).where(T(Z.trackingCode,t));return e}catch(e){console.error("Error getting shipment by tracking code:",e);return}}async getShipments(){try{let t=await v.select().from(Z);return await Promise.all(t.map(async s=>{let c=await this.getShipmentItems(s.id);return{...s,items:c}}))}catch(t){return console.error("Error getting shipments:",t),[]}}async getShipmentsByCompany(t){try{let e=await v.select().from(Z).where(T(Z.companyId,t));return await Promise.all(e.map(async c=>{let l=await this.getShipmentItems(c.id);return{...c,items:l}}))}catch(e){return console.error("Error getting shipments by company:",e),[]}}async createShipment(t){try{let[e]=await v.insert(Z).values(t).returning();return e}catch(e){throw console.error("Error creating shipment:",e),e}}async updateShipment(t,e){try{let[s]=await v.update(Z).set({...e,updatedAt:new Date}).where(T(Z.id,t)).returning();return s}catch(s){console.error("Error updating shipment:",s);return}}async getShipmentItems(t){try{return await v.select().from(de).where(T(de.shipmentId,t))}catch(e){return console.error("Error getting shipment items:",e),[]}}async createShipmentItem(t){try{let[e]=await v.insert(de).values(t).returning();return e}catch(e){throw console.error("Error creating shipment item:",e),e}}async createShipmentItems(t){try{return t.length===0?[]:await v.insert(de).values(t).returning()}catch(e){throw console.error("Error creating shipment items:",e),e}}async updateShipmentItem(t,e){try{let[s]=await v.update(de).set(e).where(T(de.id,t)).returning();return s}catch(s){console.error("Error updating shipment item:",s);return}}async deleteShipmentItem(t){try{return await v.delete(de).where(T(de.id,t)),!0}catch(e){return console.error("Error deleting shipment item:",e),!1}}async getShipmentUpdate(t){try{let[e]=await v.select().from(Ee).where(T(Ee.id,t));return e}catch(e){console.error("Error getting shipment update:",e);return}}async getShipmentUpdates(t){try{return await v.select().from(Ee).where(T(Ee.shipmentId,t)).orderBy(ce(Ee.timestamp))}catch(e){return console.error("Error getting shipment updates:",e),[]}}async createShipmentUpdate(t){try{let[e]=await v.insert(Ee).values(t).returning();return e}catch(e){throw console.error("Error creating shipment update:",e),e}}async getNotification(t){try{let[e]=await v.select().from(K).where(T(K.id,t));return e}catch(e){console.error("Error getting notification:",e);return}}async getNotificationsForUser(t){try{return await v.select({id:K.id,title:K.title,message:K.message,type:K.type,priority:K.priority,read:K.read,createdAt:K.createdAt,readAt:K.readAt,fromUserId:K.fromUserId,toUserId:K.toUserId,fromUserName:U.name,fromUserEmail:U.email}).from(K).leftJoin(U,T(K.fromUserId,U.id)).where(T(K.toUserId,t)).orderBy(ce(K.createdAt))}catch(e){return console.error("Error getting notifications for user:",e),[]}}async createNotification(t){try{let[e]=await v.insert(K).values(t).returning();return e}catch(e){throw console.error("Error creating notification:",e),e}}async markNotificationAsRead(t,e){try{let[s]=await v.update(K).set({read:!0,readAt:new Date}).where(ne(T(K.id,t),T(K.toUserId,e))).returning();return s}catch(s){console.error("Error marking notification as read:",s);return}}async deleteNotification(t,e){try{return((await v.delete(K).where(ne(T(K.id,t),T(K.toUserId,e)))).rowCount??0)>0}catch(s){return console.error("Error deleting notification:",s),!1}}async getLastKpiUpdateByUser(t){try{let[e]=await v.select({kpiName:$.name,updateDate:x.date}).from(x).leftJoin($,T(x.kpiId,$.id)).where(T(x.updatedBy,t)).orderBy(ce(x.date)).limit(1);return e}catch(e){console.error("Error getting last KPI update by user:",e);return}}async getTeamActivitySummary(){try{let t=await v.select().from(U),e=[];for(let s of t){let c=await this.getLastKpiUpdateByUser(s.id);e.push({userId:s.id,lastLogin:s.lastLogin,lastKpiUpdate:c||null})}return e}catch(t){return console.error("Error getting team activity summary:",t),[]}}async getJobProfile(t){try{let[e]=await v.select().from(ue).where(T(ue.id,t));return e}catch(e){console.error("Error getting job profile:",e);return}}async getJobProfileByUserArea(t,e){try{let[s]=await v.select().from(ue).where(ne(T(ue.areaId,t),T(ue.companyId,e)));return s}catch(s){console.error("Error getting job profile by area:",s);return}}async getJobProfileWithDetails(t){try{console.log(`[JobProfile] Getting profile for user ID: ${t}`);let e=await this.getUser(t);if(console.log("[JobProfile] User found:",e),!e||!e.areaId||!e.companyId){console.log(`[JobProfile] User or area/company missing for user ${t}`);return}let s=await this.getJobProfileByUserArea(e.areaId,e.companyId);if(console.log("[JobProfile] Profile found:",s),!s){console.log(`[JobProfile] No profile found for area ${e.areaId}, company ${e.companyId}`);return}let c=await this.getArea(e.areaId),l=await this.getCompany(e.companyId),p=await this.getUserKpis(t),h={id:s.id,areaId:s.areaId,companyId:s.companyId,title:s.title,description:s.description,mainActivities:s.mainActivities,responsibilities:s.responsibilities,kpiInstructions:s.kpiInstructions,tips:s.tips,processes:s.processes,updateFrequency:s.updateFrequency,areaName:c?.name||"",companyName:l?.name||"",userKpis:p.map(I=>({id:I.id,name:I.name,target:I.target,frequency:I.frequency}))};return console.log("[JobProfile] Returning profile with details:",h),h}catch(e){console.error("Error getting job profile with details:",e);return}}async createJobProfile(t){try{let[e]=await v.insert(ue).values(t).returning();return e}catch(e){throw console.error("Error creating job profile:",e),e}}async updateJobProfile(t,e){try{let[s]=await v.update(ue).set(e).where(T(ue.id,t)).returning();return s}catch(s){console.error("Error updating job profile:",s);return}}async getUserKpis(t){try{let e=await this.getUser(t);return!e||!e.areaId||!e.companyId?[]:await v.select().from($).where(ne(T($.areaId,e.areaId),T($.companyId,e.companyId)))}catch(e){return console.error("Error getting user KPIs:",e),[]}}async getKPIOverview(){try{let t=await v.select({userId:U.id,userName:U.name,userEmail:U.email,areaName:H.name,companyName:z.name,kpiId:$.id,kpiName:$.name,kpiTarget:$.target,kpiFrequency:$.frequency,kpiValue:x.value,lastUpdate:x.date}).from(U).innerJoin(H,T(U.areaId,H.id)).innerJoin(z,T(U.companyId,z.id)).innerJoin($,ne(T($.areaId,H.id),T($.companyId,z.id))).leftJoin(x,T(x.kpiId,$.id)).where(ne(Yt(U.areaId),Yt(U.companyId))).orderBy(ce(x.date)),e=new Map;for(let s of t){let c=`${s.userId}-${s.kpiId}`;if(!e.has(c)){let l="non-compliant";if(s.kpiValue&&s.kpiTarget){let p=i=>{let n=i.replace(/[^\d.-]/g,"");return parseFloat(n)},h=p(s.kpiValue),I=p(s.kpiTarget);!isNaN(h)&&!isNaN(I)&&(this.isLowerBetterKPI(s.kpiName)?h<=I?l="compliant":h<=I*1.1?l="alert":l="non-compliant":h>=I?l="compliant":h>=I*.9?l="alert":l="non-compliant")}e.set(c,{...s,status:l,trend:"stable"})}}return Array.from(e.values())}catch(t){return console.error("Error getting KPI overview:",t),[]}}isLowerBetterKPI(t){let e=["d\xEDas de cobro","d\xEDas de pago","tiempo de entrega","huella de carbono","costos","gastos","tiempo de respuesta","defectos","errores","quejas","devoluciones","rotaci\xF3n","tiempo de inactividad"],s=t.toLowerCase();return e.some(c=>s.includes(c))}async getKPIHistory(t,e=12){try{let{neon:s}=await import("@neondatabase/serverless"),c=s(process.env.DATABASE_URL),l=null,p=!1,h=await c`
        SELECT id, area, kpi_name, responsible
        FROM kpis_orsega
        WHERE id = ${t}
        LIMIT 1
      `;if(h&&h.length>0)l=h[0],p=!0,console.log(`[getKPIHistory] \u2705 KPI ${t} encontrado en kpis_orsega: ${l.kpi_name}`);else{console.log(`[getKPIHistory] KPI ${t} no encontrado en kpis_orsega, buscando en kpis_dura...`);let i=await c`
          SELECT id, area, kpi_name, responsible
          FROM kpis_dura
          WHERE id = ${t}
          LIMIT 1
        `;i&&i.length>0?(l=i[0],p=!1,console.log(`[getKPIHistory] \u2705 KPI ${t} encontrado en kpis_dura: ${l.kpi_name}`)):console.log(`[getKPIHistory] \u26A0\uFE0F KPI ${t} no encontrado en kpis_dura ni kpis_orsega`)}if(!l){console.error(`[getKPIHistory] \u274C KPI ${t} no encontrado en kpis_dura ni kpis_orsega`),console.error("[getKPIHistory] Intentando buscar en tabla antigua kpi_values como fallback...");try{let i=await c`
            SELECT 
              id,
              kpi_id as "kpiId",
              value,
              date,
              period,
              compliance_percentage as "compliancePercentage",
              status,
              comments,
              updated_by as "updatedBy"
            FROM kpi_values
            WHERE kpi_id = ${t}
            ORDER BY date DESC
            LIMIT ${e}
          `;return console.log(`[getKPIHistory] Fallback - Encontrados ${i.length} registros en kpi_values`),i}catch(i){return console.error("[getKPIHistory] Error en fallback:",i),[]}}let I=[];if(p){let i=await c`
          SELECT 
            id,
            kpi_id as "kpiId",
            month,
            year,
            value,
            created_at as "date"
          FROM kpi_values_orsega
          WHERE kpi_id = ${t}
          ORDER BY year DESC, 
            CASE month
              WHEN 'ENERO' THEN 1 WHEN 'FEBRERO' THEN 2 WHEN 'MARZO' THEN 3
              WHEN 'ABRIL' THEN 4 WHEN 'MAYO' THEN 5 WHEN 'JUNIO' THEN 6
              WHEN 'JULIO' THEN 7 WHEN 'AGOSTO' THEN 8 WHEN 'SEPTIEMBRE' THEN 9
              WHEN 'OCTUBRE' THEN 10 WHEN 'NOVIEMBRE' THEN 11 WHEN 'DICIEMBRE' THEN 12
              ELSE 13
            END DESC
          LIMIT ${e}
        `;if(console.log(`[getKPIHistory] KPI ${t} Orsega - Encontrados ${i.length} registros en kpi_values_orsega por kpi_id=${t}`),i.length>0&&console.log("[getKPIHistory] Muestra de registros encontrados:",JSON.stringify(i.slice(0,2),null,2)),i.length===0&&l?.kpi_name){console.log(`[getKPIHistory] KPI ${t} Orsega - No se encontraron registros por ID, buscando por nombre "${l.kpi_name}" usando JOIN...`);let n=await c`
            SELECT 
              kv.id,
              kv.kpi_id as "kpiId",
              kv.month,
              kv.year,
              kv.value,
              kv.created_at as "date"
            FROM kpi_values_orsega kv
            INNER JOIN kpis_orsega k ON kv.kpi_id = k.id
            WHERE k.kpi_name = ${l.kpi_name}
            ORDER BY kv.year DESC,
              CASE kv.month
                WHEN 'ENERO' THEN 1 WHEN 'FEBRERO' THEN 2 WHEN 'MARZO' THEN 3
                WHEN 'ABRIL' THEN 4 WHEN 'MAYO' THEN 5 WHEN 'JUNIO' THEN 6
                WHEN 'JULIO' THEN 7 WHEN 'AGOSTO' THEN 8 WHEN 'SEPTIEMBRE' THEN 9
                WHEN 'OCTUBRE' THEN 10 WHEN 'NOVIEMBRE' THEN 11 WHEN 'DICIEMBRE' THEN 12
                ELSE 13
              END DESC
            LIMIT ${e}
          `;console.log(`[getKPIHistory] KPI ${t} Orsega - Encontrados ${n.length} registros por nombre usando JOIN`),i=n}I=i.map(n=>({id:n.id,value:n.value?.toString()||"0",date:n.date||new Date,period:`${n.month} ${n.year}`,compliancePercentage:null,status:null,comments:null,updatedBy:null}))}else{let i=await c`
          SELECT 
            id,
            kpi_id as "kpiId",
            month,
            year,
            value,
            created_at as "date"
          FROM kpi_values_dura
          WHERE kpi_id = ${t}
          ORDER BY year DESC,
            CASE month
              WHEN 'ENERO' THEN 1 WHEN 'FEBRERO' THEN 2 WHEN 'MARZO' THEN 3
              WHEN 'ABRIL' THEN 4 WHEN 'MAYO' THEN 5 WHEN 'JUNIO' THEN 6
              WHEN 'JULIO' THEN 7 WHEN 'AGOSTO' THEN 8 WHEN 'SEPTIEMBRE' THEN 9
              WHEN 'OCTUBRE' THEN 10 WHEN 'NOVIEMBRE' THEN 11 WHEN 'DICIEMBRE' THEN 12
              ELSE 13
            END DESC
          LIMIT ${e}
        `;if(console.log(`[getKPIHistory] KPI ${t} Dura - Encontrados ${i.length} registros en kpi_values_dura por kpi_id=${t}`),i.length>0&&console.log("[getKPIHistory] Muestra de registros encontrados:",JSON.stringify(i.slice(0,2),null,2)),i.length===0&&l?.kpi_name){console.log(`[getKPIHistory] KPI ${t} Dura - No se encontraron registros por ID, buscando por nombre "${l.kpi_name}" usando JOIN...`);let n=await c`
            SELECT 
              kv.id,
              kv.kpi_id as "kpiId",
              kv.month,
              kv.year,
              kv.value,
              kv.created_at as "date"
            FROM kpi_values_dura kv
            INNER JOIN kpis_dura k ON kv.kpi_id = k.id
            WHERE k.kpi_name = ${l.kpi_name}
            ORDER BY kv.year DESC,
              CASE kv.month
                WHEN 'ENERO' THEN 1 WHEN 'FEBRERO' THEN 2 WHEN 'MARZO' THEN 3
                WHEN 'ABRIL' THEN 4 WHEN 'MAYO' THEN 5 WHEN 'JUNIO' THEN 6
                WHEN 'JULIO' THEN 7 WHEN 'AGOSTO' THEN 8 WHEN 'SEPTIEMBRE' THEN 9
                WHEN 'OCTUBRE' THEN 10 WHEN 'NOVIEMBRE' THEN 11 WHEN 'DICIEMBRE' THEN 12
                ELSE 13
              END DESC
            LIMIT ${e}
          `;console.log(`[getKPIHistory] KPI ${t} Dura - Encontrados ${n.length} registros por nombre usando JOIN`),i=n}I=i.map(n=>({id:n.id,value:n.value?.toString()||"0",date:n.date||new Date,period:`${n.month} ${n.year}`,compliancePercentage:null,status:null,comments:null,updatedBy:null}))}if(I.length===0)try{console.log(`[getKPIHistory] \u26A0\uFE0F Sin registros en tablas espec\xEDficas. Probando fallback en tabla legacy kpi_values para kpi_id=${t}`);let i=await c`
            SELECT 
              id,
              kpi_id as "kpiId",
              value,
              date,
              period,
              compliance_percentage as "compliancePercentage",
              status,
              comments,
              updated_by as "updatedBy"
            FROM kpi_values
            WHERE kpi_id = ${t}
            ORDER BY date DESC
            LIMIT ${e}
          `;if(console.log(`[getKPIHistory] Fallback legacy - encontrados ${i.length} registros`),i.length>0)return i.map(n=>({id:n.id,value:n.value?.toString()||"0",date:n.date||new Date,period:n.period||n.date,compliancePercentage:n.compliancePercentage??null,status:n.status??null,comments:n.comments??null,updatedBy:n.updatedBy??null}))}catch(i){console.warn("[getKPIHistory] Error en fallback legacy final:",i)}return console.log(`[getKPIHistory] KPI ${t} (${p?"Orsega":"Dura"}) history:`,I.length,"records"),I}catch(s){return console.error("Error getting KPI history:",s),[]}}async getUserKPIHistory(t,e=6){try{let s=new Date;s.setMonth(s.getMonth()-e);let c=await v.select({kpiId:x.kpiId,kpiName:$.name,kpiTarget:$.target,kpiUnit:$.unit,kpiFrequency:$.frequency,companyId:$.companyId,companyName:z.name,areaName:H.name,valueId:x.id,value:x.value,date:x.date,period:x.period,compliancePercentage:x.compliancePercentage,status:x.status,comments:x.comments}).from(x).innerJoin($,T(x.kpiId,$.id)).innerJoin(z,T($.companyId,z.id)).innerJoin(H,T($.areaId,H.id)).where(ne(T(x.userId,t),Xt(x.date,s))).orderBy(ce(x.date));return console.log(`[getUserKPIHistory] User ${t} history (${c.length} records) desde ${s.toISOString()}`),c}catch(s){return console.error("Error getting user KPI history:",s),[]}}async getKPIHistoryByUsers(t,e=6){try{let s=new Date;s.setMonth(s.getMonth()-e);let[c]=await v.select({id:$.id,name:$.name,target:$.target,unit:$.unit,frequency:$.frequency,companyId:$.companyId,companyName:z.name,areaId:$.areaId,areaName:H.name}).from($).innerJoin(z,T($.companyId,z.id)).innerJoin(H,T($.areaId,H.id)).where(T($.id,t));if(!c)return null;let l=await v.select({valueId:x.id,userId:U.id,userName:U.name,userEmail:U.email,value:x.value,date:x.date,period:x.period,compliancePercentage:x.compliancePercentage,status:x.status,comments:x.comments}).from(x).innerJoin(U,T(x.userId,U.id)).where(ne(T(x.kpiId,t),Xt(x.date,s))).orderBy(ce(x.date)),p=new Map;for(let h of l)p.has(h.userId)||p.set(h.userId,{userId:h.userId,userName:h.userName,userEmail:h.userEmail,values:[]}),p.get(h.userId).values.push({valueId:h.valueId,value:h.value,date:h.date,period:h.period,compliancePercentage:h.compliancePercentage,status:h.status,comments:h.comments});return console.log(`[getKPIHistoryByUsers] KPI ${t} history: ${p.size} users, ${l.length} total records desde ${s.toISOString()}`),{kpi:c,users:Array.from(p.values())}}catch(s){return console.error("Error getting KPI history by users:",s),null}}async getShipmentCycleTime(t){try{let[e]=await v.select().from(Y).where(T(Y.shipmentId,t));return e}catch(e){console.error("Error getting shipment cycle time:",e);return}}async upsertShipmentCycleTime(t){try{let[e]=await v.select().from(Y).where(T(Y.shipmentId,t.shipmentId));if(e){let[s]=await v.update(Y).set({...t,updatedAt:new Date}).where(T(Y.shipmentId,t.shipmentId)).returning();return s}else{let[s]=await v.insert(Y).values(t).returning();return s}}catch(e){throw console.error("Error upserting shipment cycle time:",e),e}}async recalculateShipmentCycleTime(t){try{let e=await this.getShipment(t);if(!e)return;let s=await this.getShipmentUpdates(t),c=null,l=null,p=null,h=null;for(let m of s.reverse())switch(m.status){case"pending":c||(c=m.timestamp);break;case"in_transit":l||(l=m.timestamp);break;case"delivered":p||(p=m.timestamp);break;case"cancelled":h||(h=m.timestamp);break}let I=(m,E)=>!m||!E?null:((E.getTime()-m.getTime())/(1e3*60*60)).toFixed(2),i=I(c,l),n=I(l,p),r=I(p,h),o=I(e.createdAt,h),d=I(e.createdAt,p),u={shipmentId:e.id,companyId:e.companyId,createdAt:e.createdAt,pendingAt:c,inTransitAt:l,deliveredAt:p,closedAt:h,hoursPendingToTransit:i,hoursTransitToDelivered:n,hoursDeliveredToClosed:r,hoursTotalCycle:o,hoursToDelivery:d};return await this.upsertShipmentCycleTime(u)}catch(e){console.error("Error recalculating shipment cycle time:",e);return}}async getAggregateCycleTimes(t,e,s){try{let c=v.select({hoursPendingToTransit:Y.hoursPendingToTransit,hoursTransitToDelivered:Y.hoursTransitToDelivered,hoursDeliveredToClosed:Y.hoursDeliveredToClosed,hoursTotalCycle:Y.hoursTotalCycle,hoursToDelivery:Y.hoursToDelivery,closedAt:Y.closedAt,createdAt:Y.createdAt,companyId:Y.companyId}).from(Y),l=[];if(t&&l.push(T(Y.companyId,t)),e&&s){let u=new Date(e),m=new Date(s);l.push(xe`${Y.createdAt} >= ${u} AND ${Y.createdAt} <= ${m}`)}l.length>0&&(c=c.where(ne(...l)));let p=await c;if(p.length===0)return[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:null,avgTransitToDelivered:null,avgDeliveredToClosed:null,avgTotalCycle:null,avgToDelivery:null,totalShipments:0,completedShipments:0}];let h=p.filter(u=>u.hoursPendingToTransit).map(u=>parseFloat(u.hoursPendingToTransit)),I=p.filter(u=>u.hoursTransitToDelivered).map(u=>parseFloat(u.hoursTransitToDelivered)),i=p.filter(u=>u.hoursDeliveredToClosed).map(u=>parseFloat(u.hoursDeliveredToClosed)),n=p.filter(u=>u.hoursTotalCycle).map(u=>parseFloat(u.hoursTotalCycle)),r=p.filter(u=>u.hoursToDelivery).map(u=>parseFloat(u.hoursToDelivery)),o=u=>u.length>0?u.reduce((m,E)=>m+E,0)/u.length:null,d=p.filter(u=>u.closedAt).length;return[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:o(h),avgTransitToDelivered:o(I),avgDeliveredToClosed:o(i),avgTotalCycle:o(n),avgToDelivery:o(r),totalShipments:p.length,completedShipments:d}]}catch(c){return console.error("Error getting aggregate cycle times:",c),[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:null,avgTransitToDelivered:null,avgDeliveredToClosed:null,avgTotalCycle:null,avgToDelivery:null,totalShipments:0,completedShipments:0}]}}async createShipmentNotification(t){try{return await this.createNotification({...t,type:"shipment"})}catch(e){throw console.error("Error creating shipment notification:",e),e}}async updateShipmentNotificationStatus(t,e,s){try{let[c]=await v.update(K).set({read:e==="sent",readAt:e==="sent"?new Date:null}).where(T(K.id,t)).returning();return c}catch(c){throw console.error("Error updating shipment notification status:",c),c}}async getShipmentNotificationsByShipment(t){try{return await v.select().from(K).where(xe`${K.message} LIKE '%shipment-${t}%' OR ${K.type} = 'shipment'`).orderBy(ce(K.createdAt))}catch(e){return console.error("Error getting shipment notifications:",e),[]}}async createActivationToken(t){try{let e=Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)+Date.now().toString(36),s=new Date;s.setHours(s.getHours()+24);let c={token:e,email:t,expiresAt:s,used:!1},[l]=await v.insert(ge).values(c).returning();return l}catch(e){throw console.error("Error creating activation token:",e),e}}async getActivationToken(t){try{let[e]=await v.select().from(ge).where(T(ge.token,t));return e}catch(e){console.error("Error getting activation token:",e);return}}async markTokenAsUsed(t){try{return((await v.update(ge).set({used:!0}).where(T(ge.token,t))).rowCount??0)>0}catch(e){return console.error("Error marking token as used:",e),!1}}async deleteExpiredTokens(){try{await v.delete(ge).where(xe`${ge.expiresAt} < NOW()`)}catch(t){console.error("Error deleting expired tokens:",t)}}async getClient(t){try{let[e]=await v.select().from(Q).where(T(Q.id,t));return e}catch(e){console.error("Error getting client:",e);return}}async getClients(){try{return await v.select().from(Q).orderBy(Q.name)}catch(t){return console.error("Error getting clients:",t),[]}}async getClientsByCompany(t){try{return await v.select().from(Q).where(T(Q.companyId,t)).orderBy(Q.name)}catch(e){return console.error("Error getting clients by company:",e),[]}}async createClient(t){try{let[e]=await v.insert(Q).values(t).returning();return e}catch(e){throw console.error("Error creating client:",e),e}}async updateClient(t,e){try{let[s]=await v.update(Q).set({...e,updatedAt:new Date}).where(T(Q.id,t)).returning();return s}catch(s){console.error("Error updating client:",s);return}}async getPaymentVoucher(t){try{let[e]=await v.select().from(F).where(T(F.id,t));return e}catch(e){console.error("Error getting payment voucher:",e);return}}async getPaymentVouchers(){try{return await v.select().from(F).orderBy(ce(F.createdAt))}catch(t){return console.error("Error getting payment vouchers:",t),[]}}async getPaymentVouchersByCompany(t){try{return await v.select().from(F).where(T(F.companyId,t)).orderBy(ce(F.createdAt))}catch(e){return console.error("Error getting payment vouchers by company:",e),[]}}async getPaymentVouchersByStatus(t,e){try{return e?await v.select().from(F).where(ne(T(F.status,t),T(F.companyId,e))).orderBy(ce(F.createdAt)):await v.select().from(F).where(T(F.status,t)).orderBy(ce(F.createdAt))}catch(s){return console.error("Error getting payment vouchers by status:",s),[]}}async createPaymentVoucher(t){try{let[e]=await v.insert(F).values(t).returning();return e}catch(e){throw console.error("Error creating payment voucher:",e),e}}async createScheduledPayment(t){return console.log("Creating scheduled payment:",t),{id:Date.now(),...t}}async updatePaymentVoucher(t,e){try{let[s]=await v.update(F).set({...e,updatedAt:new Date}).where(T(F.id,t)).returning();return s}catch(s){console.error("Error updating payment voucher:",s);return}}async updatePaymentVoucherStatus(t,e){try{let[s]=await v.update(F).set({status:e,updatedAt:new Date}).where(T(F.id,t)).returning();return s}catch(s){console.error("Error updating payment voucher status:",s);return}}async getShipmentsByStatus(t){try{return await v.select().from(Z).where(T(Z.status,t))}catch(e){return console.error("Error getting shipments by status:",e),[]}}async getShipmentsByCompanyAndStatus(t,e){try{return await v.select().from(Z).where(ne(T(Z.companyId,t),T(Z.status,e)))}catch(s){return console.error("Error getting shipments by company and status:",s),[]}}async getShipmentUpdatesByShipment(t){try{return[]}catch(e){return console.error("Error getting shipment updates:",e),[]}}async getShipmentNotification(t){try{return null}catch(e){return console.error("Error getting shipment notification:",e),null}}},jn=new Oe});var Zt={};se(Zt,{MemStorage:()=>mt,storage:()=>b});var mt,b,je=re(()=>{"use strict";Qt();mt=class{constructor(){this.users=new Map,this.companies=new Map,this.areas=new Map,this.kpis=new Map,this.kpiValues=new Map,this.actionPlans=new Map,this.shipments=new Map,this.shipmentUpdates=new Map,this.shipmentNotifications=new Map,this.notifications=new Map,this.jobProfiles=new Map,this.shipmentCycleTimes=new Map,this.userId=1,this.companyId=1,this.areaId=1,this.kpiId=1,this.kpiValueId=1,this.actionPlanId=1,this.shipmentId=1,this.shipmentUpdateId=1,this.shipmentNotificationId=1,this.notificationId=1,this.jobProfileId=1,this.cycleTimeId=1,this.initializeData(),this.initializeShipmentData()}initializeData(){let t={id:this.userId++,name:"Admin",email:"admin@econova.com",password:"password123",role:"admin",companyId:null,areaId:null,lastLogin:new Date};this.users.set(t.id,t);let e={id:this.userId++,name:"Omar Navarro",email:"omar.navarro",password:"ventas2025",role:"user",companyId:null,areaId:null,lastLogin:null};this.users.set(e.id,e);let s={id:this.userId++,name:"Mario Reynoso",email:"mario.reynoso",password:"finanzas2025",role:"user",companyId:null,areaId:null,lastLogin:null};this.users.set(s.id,s);let c={id:this.userId++,name:"Thalia Rodriguez",email:"thalia.rodriguez",password:"logistica2025",role:"user",companyId:null,areaId:null,lastLogin:null};this.users.set(c.id,c);let l={id:this.companyId++,name:"Dura International",description:"Empresa l\xEDder en la industria qu\xEDmica",sector:"Qu\xEDmica",logo:null,createdAt:new Date};this.companies.set(l.id,l);let p={id:this.companyId++,name:"Grupo Orsega",description:"Empresa especializada en productos qu\xEDmicos",sector:"Qu\xEDmica",logo:null,createdAt:new Date};this.companies.set(p.id,p);let I=["Ventas","Log\xEDstica","Contabilidad y Finanzas"],i=new Map,n=new Map;I.forEach(r=>{let o={id:this.areaId++,name:r,description:`\xC1rea de ${r} para Dura International`,companyId:l.id};this.areas.set(o.id,o),i.set(r,o)}),I.forEach(r=>{let o={id:this.areaId++,name:r,description:`\xC1rea de ${r} para Grupo Orsega`,companyId:p.id};this.areas.set(o.id,o),n.set(r,o)}),i.has("Contabilidad y Finanzas")&&n.has("Contabilidad y Finanzas")&&[{name:"Precisi\xF3n en estados financieros",description:"Mide la exactitud de los estados financieros generados. Objetivo: cero errores en emisi\xF3n de informaci\xF3n financiera. Limitar las salvedades a menos de 5 al mes.",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"Conteo de errores y salvedades. Los datos son procesados por Julio.",responsible:"Mario Reynoso"},{name:"Velocidad de rotaci\xF3n de cuentas por cobrar",description:"Mide el tiempo promedio para cobrar cuentas pendientes. Considerando que para Orsega un cliente clave representa el 80% de ventas.",unit:"d\xEDas",duraTarget:"45 d\xEDas",orsegaTarget:"60 d\xEDas",frequency:"monthly",calculationMethod:"Promedio de d\xEDas para cobrar",responsible:"Mario Reynoso"},{name:"Cumplimiento de obligaciones fiscales",description:"Monitoreo mediante checklist para la presentaci\xF3n de impuestos. Objetivo de cumplimiento 100% para evitar confusiones.",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"Checklist de obligaciones fiscales. Mario enviar\xE1 el WordCat con la informaci\xF3n a Daniel.",responsible:"Mario Reynoso"},{name:"Facturaci\xF3n sin errores",description:"Mide la precisi\xF3n en la generaci\xF3n de facturas",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"weekly",calculationMethod:"(Facturas sin errores / Total de facturas) x 100",responsible:"Mario Reynoso"}].forEach(o=>{let d={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.duraTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:i.get("Contabilidad y Finanzas").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),[{value:o.name.includes("Precisi\xF3n")?"98.5%":o.name.includes("Rotaci\xF3n")?"48":o.name.includes("Cumplimiento")?"100%":o.name.includes("Facturaci\xF3n")?"97%":"+2.5%",period:"Q1 2023",status:o.name.includes("Precisi\xF3n")||o.name.includes("Rotaci\xF3n")?"alert":"complies",compliancePercentage:o.name.includes("Precisi\xF3n")?"95%":o.name.includes("Rotaci\xF3n")?"93.8%":"100%",comments:o.name.includes("Rotaci\xF3n")?"Ligeramente por encima del objetivo (45 d\xEDas). Mejorando plazo de cobro.":"Valor registrado para el periodo"},{value:o.name.includes("Precisi\xF3n")?"99.2%":o.name.includes("Rotaci\xF3n")?"42":o.name.includes("Cumplimiento")?"100%":o.name.includes("Facturaci\xF3n")?"98%":"+3.1%",period:"Q2 2023",status:(o.name.includes("Rotaci\xF3n"),"complies"),compliancePercentage:o.name.includes("Rotaci\xF3n")?"107.1%":"100%",comments:o.name.includes("Rotaci\xF3n")?"Por debajo del objetivo (45 d\xEDas). Excelente gesti\xF3n de cobros.":"Mejora respecto al periodo anterior"}].forEach(g=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)});let m={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.orsegaTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:n.get("Contabilidad y Finanzas").id,companyId:p.id,invertedMetric:!1};this.kpis.set(m.id,m),[{value:o.name.includes("Precisi\xF3n")?"99.0%":o.name.includes("Rotaci\xF3n")?"65":o.name.includes("Cumplimiento")?"98%":o.name.includes("Facturaci\xF3n")?"95%":"+1.8%",period:"Q1 2023",status:o.name.includes("Cumplimiento")||o.name.includes("Rotaci\xF3n")||o.name.includes("Facturaci\xF3n")?"alert":"complies",compliancePercentage:o.name.includes("Cumplimiento")?"98%":o.name.includes("Rotaci\xF3n")?"92%":o.name.includes("Facturaci\xF3n")?"95%":"100%",comments:o.name.includes("Rotaci\xF3n")?"Por encima del objetivo. Cliente clave (80% de ventas) paga a 65 d\xEDas":"Valor registrado para el periodo"},{value:o.name.includes("Precisi\xF3n")?"99.5%":o.name.includes("Rotaci\xF3n")?"58":o.name.includes("Cumplimiento")?"100%":o.name.includes("Facturaci\xF3n")?"98%":"+2.5%",period:"Q2 2023",status:(o.name.includes("Rotaci\xF3n"),"complies"),compliancePercentage:"100%",comments:o.name.includes("Rotaci\xF3n")?"Mejora en la rotaci\xF3n. Dentro del objetivo de 60 d\xEDas":"Mejora respecto al periodo anterior"}].forEach(g=>{let y={id:this.kpiValueId++,kpiId:m.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)})}),i.has("Compras")&&n.has("Compras")&&[{name:"Nivel de inventario \xF3ptimo",description:"Mantener los niveles \xF3ptimos de inventario para operaciones",unit:"unidades",duraTarget:"M\xE1x. 2 meses secantes",orsegaTarget:"M\xE1x. 6 ton metilato",frequency:"monthly",calculationMethod:"Medici\xF3n directa de inventario vs. objetivo",responsible:"Roberto M\xE9ndez"},{name:"Tiempo de respuesta a Ventas",description:"Mide el tiempo de respuesta a solicitudes de Ventas",unit:"horas",duraTarget:"M\xE1x. 4 horas",orsegaTarget:"M\xE1x. 4 horas",frequency:"weekly",calculationMethod:"Tiempo promedio de respuesta",responsible:"Elena Morales"},{name:"Tiempo de entrega de proveedores",description:"Mide el cumplimiento de tiempos de entrega de proveedores",unit:"%",duraTarget:"95% cumplimiento",orsegaTarget:"95% cumplimiento",frequency:"monthly",calculationMethod:"(Entregas a tiempo / Total de entregas) x 100",responsible:"Miguel \xC1ngel Soto"},{name:"Optimizaci\xF3n de costos de compra",description:"Mide la reducci\xF3n de costos en compras",unit:"%",duraTarget:"< 5%",orsegaTarget:"< 5%",frequency:"quarterly",calculationMethod:"(Costo actual - Costo previo) / Costo previo x 100",responsible:"Josefina Ram\xEDrez"}].forEach(o=>{let d={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.duraTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:i.get("Compras").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),[{value:o.name.includes("Nivel")?"1.8 meses":o.name.includes("Tiempo de respuesta")?"4.5 horas":o.name.includes("Tiempo de entrega")?"92%":"-3.5%",period:"Q1 2023",status:o.name.includes("Tiempo de respuesta")||o.name.includes("Tiempo de entrega")?"alert":"complies",compliancePercentage:o.name.includes("Tiempo de respuesta")?"90%":o.name.includes("Tiempo de entrega")?"92%":"100%",comments:"Valor registrado para el periodo"}].forEach(g=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)});let m={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.orsegaTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:n.get("Compras").id,companyId:p.id,invertedMetric:!1};this.kpis.set(m.id,m),[{value:o.name.includes("Nivel")?"5.8 ton":o.name.includes("Tiempo de respuesta")?"3.8 horas":o.name.includes("Tiempo de entrega")?"96%":"-4.2%",period:"Q1 2023",status:o.name.includes("Nivel")?"alert":"complies",compliancePercentage:o.name.includes("Nivel")?"95%":"100%",comments:"Valor registrado para el periodo"}].forEach(g=>{let y={id:this.kpiValueId++,kpiId:m.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)})}),i.has("Ventas")&&n.has("Ventas")&&[{name:"Volumen de ventas alcanzado",description:"Mide el volumen total de ventas mensual en kilogramos",unit:"KG",duraTarget:"55,620 KG",orsegaTarget:"775,735 unidades",frequency:"monthly",calculationMethod:"Suma del volumen de todas las ventas en KG/unidades",responsible:"Omar Navarro"},{name:"Porcentaje de crecimiento en ventas",description:"Mide el crecimiento en ventas respecto al a\xF1o anterior",unit:"%",duraTarget:"+10% vs a\xF1o anterior",orsegaTarget:"+10% vs a\xF1o anterior",frequency:"monthly",calculationMethod:"((Ventas actuales - Ventas a\xF1o anterior) / Ventas a\xF1o anterior) x 100",responsible:"Isabella Vega"},{name:"Nuevos clientes adquiridos",description:"Mide la adquisici\xF3n de nuevos clientes",unit:"clientes",duraTarget:"2 nuevos/mes",orsegaTarget:"2 nuevos/mes",frequency:"monthly",calculationMethod:"Conteo de nuevos clientes",responsible:"Omar Navarro"},{name:"Tasa de retenci\xF3n de clientes",description:"Mide el porcentaje de clientes que permanecen activos",unit:"%",duraTarget:"90%",orsegaTarget:"90%",frequency:"monthly",calculationMethod:"(Clientes activos que renuevan / Total de clientes activos) x 100",responsible:"Alejandra Dur\xE1n"},{name:"Satisfacci\xF3n interdepartamental",description:"Eval\xFAa la colaboraci\xF3n con otros departamentos",unit:"cualitativo",duraTarget:"Retroalimentaci\xF3n continua",orsegaTarget:"Retroalimentaci\xF3n continua",frequency:"quarterly",calculationMethod:"Encuestas de satisfacci\xF3n interdepartamental",responsible:"Sergio Montero"}].forEach(o=>{let d={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.duraTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:i.get("Ventas").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),(o.name.includes("Volumen")?[{value:"59,453 KG",period:"Enero 2025",status:"complies",compliancePercentage:"107%",comments:"Por encima del objetivo mensual de 55,620 KG"},{value:"46,450 KG",period:"Febrero 2025",status:"not_compliant",compliancePercentage:"83%",comments:"Por debajo del objetivo mensual, afectado por fallas en equipos"},{value:"43,602.24 KG",period:"Marzo 2025",status:"not_compliant",compliancePercentage:"78%",comments:"Por debajo del objetivo, plan de acci\xF3n en curso"}]:o.name.includes("Nuevos clientes")?[{value:"0",period:"Enero 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"},{value:"0",period:"Febrero 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"},{value:"0",period:"Marzo 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"}]:[{value:o.name.includes("Porcentaje de crecimiento")?"+8.5%":o.name.includes("Tasa de retenci\xF3n")?"92%":"Satisfactorio",period:"Enero 2025",status:o.name.includes("Porcentaje de crecimiento")?"alert":"complies",compliancePercentage:o.name.includes("Porcentaje de crecimiento")?"85%":"100%",comments:"Valor registrado para el periodo"}]).forEach(g=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)});let m={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.orsegaTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:n.get("Ventas").id,companyId:p.id,invertedMetric:!1};this.kpis.set(m.id,m),(o.name.includes("Volumen")?[{value:"812,340 unidades",period:"Enero 2025",status:"complies",compliancePercentage:"105%",comments:"Por encima del objetivo mensual de 775,735 unidades"},{value:"755,212 unidades",period:"Febrero 2025",status:"alert",compliancePercentage:"97%",comments:"Ligeramente por debajo del objetivo mensual"},{value:"780,430 unidades",period:"Marzo 2025",status:"complies",compliancePercentage:"101%",comments:"Recuperaci\xF3n y cumplimiento del objetivo"},{value:"237,464 unidades",period:"Abril 2025",status:"not_compliant",compliancePercentage:"31%",comments:"Muy por debajo del objetivo, posible error en los datos"}]:o.name.includes("Nuevos clientes")?[{value:"0",period:"Enero 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"},{value:"0",period:"Febrero 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"},{value:"0",period:"Marzo 2025",status:"not_compliant",compliancePercentage:"0%",comments:"No se registraron nuevos clientes en este periodo"}]:[{value:o.name.includes("Porcentaje de crecimiento")?"+11.2%":o.name.includes("Tasa de retenci\xF3n")?"88%":"Muy satisfactorio",period:"Enero 2025",status:o.name.includes("Tasa de retenci\xF3n")?"alert":"complies",compliancePercentage:o.name.includes("Tasa de retenci\xF3n")?"98%":"100%",comments:"Valor registrado para el periodo"}]).forEach(g=>{let y={id:this.kpiValueId++,kpiId:m.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)})}),i.has("Soporte de Ventas")&&n.has("Soporte de Ventas")&&[{name:"Actualizaci\xF3n del CRM",description:"Mide la actualizaci\xF3n oportuna de datos en el CRM",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"(Registros actualizados / Total de registros) x 100",responsible:"Gabriela Herrera"},{name:"Tiempo de respuesta a solicitudes",description:"Mide el tiempo de respuesta a solicitudes de clientes",unit:"horas",duraTarget:"< 24 horas",orsegaTarget:"< 24 horas",frequency:"weekly",calculationMethod:"Tiempo promedio de respuesta",responsible:"Daniel Ortega"},{name:"Precisi\xF3n en documentaci\xF3n de \xF3rdenes",description:"Mide la exactitud en la documentaci\xF3n de \xF3rdenes",unit:"%",duraTarget:"98%",orsegaTarget:"98%",frequency:"quarterly",calculationMethod:"(Documentos sin errores / Total de documentos) x 100",responsible:"Laura Reyes"},{name:"Eficiencia en reportes de soporte",description:"Mide la entrega oportuna de reportes",unit:"%",duraTarget:"100% en plazo",orsegaTarget:"100% en plazo",frequency:"monthly",calculationMethod:"(Reportes entregados a tiempo / Total de reportes) x 100",responsible:"Roberto Cruz"},{name:"Seguimiento a evaluaci\xF3n de muestras",description:"Mide el seguimiento a muestras enviadas a clientes",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"(Muestras con seguimiento / Total de muestras) x 100",responsible:"Mariana Fuentes"},{name:"Seguimiento a redes sociales",description:"Mide la actividad en redes sociales",unit:"posts",duraTarget:"2 posts/semana",orsegaTarget:"2 posts/semana",frequency:"weekly",calculationMethod:"Conteo de publicaciones",responsible:"Javier Castillo"},{name:"Recuperaci\xF3n de ventas de clientes",description:"Mide la reactivaci\xF3n de clientes inactivos",unit:"%",duraTarget:"% clientes reactivados",orsegaTarget:"% clientes reactivados",frequency:"bimonthly",calculationMethod:"(Clientes reactivados / Total de clientes inactivos) x 100",responsible:"Ver\xF3nica Torres"}].forEach(o=>{let d={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.duraTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:i.get("Soporte de Ventas").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),[{value:o.name.includes("Actualizaci\xF3n")?"95%":o.name.includes("Tiempo de respuesta")?"22 horas":o.name.includes("Precisi\xF3n")?"97.5%":o.name.includes("Eficiencia")?"98%":o.name.includes("Seguimiento a evaluaci\xF3n")?"100%":o.name.includes("Seguimiento a redes")?"1.5/semana":"15%",period:"Q1 2023",status:o.name.includes("Actualizaci\xF3n")||o.name.includes("Precisi\xF3n")||o.name.includes("Eficiencia")||o.name.includes("Seguimiento a redes")?"alert":"complies",compliancePercentage:o.name.includes("Actualizaci\xF3n")?"95%":o.name.includes("Precisi\xF3n")?"97%":o.name.includes("Eficiencia")?"98%":o.name.includes("Seguimiento a redes")?"75%":"100%",comments:"Valor registrado para el periodo"}].forEach(g=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)});let m={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.orsegaTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:n.get("Soporte de Ventas").id,companyId:p.id,invertedMetric:!1};this.kpis.set(m.id,m),[{value:o.name.includes("Actualizaci\xF3n")?"98%":o.name.includes("Tiempo de respuesta")?"20 horas":o.name.includes("Precisi\xF3n")?"98.5%":o.name.includes("Eficiencia")?"100%":o.name.includes("Seguimiento a evaluaci\xF3n")?"98%":o.name.includes("Seguimiento a redes")?"2/semana":"20%",period:"Q1 2023",status:o.name.includes("Seguimiento a evaluaci\xF3n")?"alert":"complies",compliancePercentage:o.name.includes("Seguimiento a evaluaci\xF3n")?"98%":"100%",comments:"Valor registrado para el periodo"}].forEach(g=>{let y={id:this.kpiValueId++,kpiId:m.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)})}),i.has("Log\xEDstica")&&n.has("Log\xEDstica")&&[{name:"Precisi\xF3n de inventarios",description:"Mide la exactitud del inventario f\xEDsico vs. sistema",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"quarterly",calculationMethod:"(Inventario correcto / Total de inventario) x 100",responsible:"Ricardo Vargas"},{name:"Cumplimiento de tiempos de entrega",description:"Mide el cumplimiento de los tiempos de entrega a clientes",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"monthly",calculationMethod:"(Entregas a tiempo / Total de entregas) x 100",responsible:"Patricia Lara"},{name:"Costos de transporte",description:"Mide la optimizaci\xF3n de costos de transporte",unit:"%",duraTarget:"< Inflaci\xF3n anual",orsegaTarget:"< Inflaci\xF3n anual",frequency:"yearly",calculationMethod:"Comparaci\xF3n con la inflaci\xF3n anual",responsible:"H\xE9ctor Navarro"},{name:"Satisfacci\xF3n de clientes internos",description:"Mide la satisfacci\xF3n de otros departamentos con Log\xEDstica",unit:"%",duraTarget:"100%",orsegaTarget:"100%",frequency:"semiannually",calculationMethod:"Encuestas de satisfacci\xF3n",responsible:"Carmen Delgado"},{name:"Tiempo de recuperaci\xF3n de evidencias",description:"Mide el tiempo para recuperar evidencias de entrega",unit:"horas",duraTarget:"< 24 horas",orsegaTarget:"< 24 horas",frequency:"monthly",calculationMethod:"Tiempo promedio de recuperaci\xF3n",responsible:"Arturo Guzm\xE1n"}].forEach(o=>{let d={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.duraTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:i.get("Log\xEDstica").id,companyId:l.id,invertedMetric:!1};this.kpis.set(d.id,d),[{value:o.name.includes("Precisi\xF3n de inventarios")?"98.5%":o.name.includes("Cumplimiento de tiempos")?"95%":o.name.includes("Costos de transporte")?"-2% vs inflaci\xF3n":o.name.includes("Satisfacci\xF3n")?"92%":"28 horas",period:"Q1 2023",status:o.name.includes("Precisi\xF3n de inventarios")||o.name.includes("Cumplimiento de tiempos")||o.name.includes("Satisfacci\xF3n")||o.name.includes("Tiempo de recuperaci\xF3n")?"alert":"complies",compliancePercentage:o.name.includes("Precisi\xF3n de inventarios")?"98%":o.name.includes("Cumplimiento de tiempos")?"95%":o.name.includes("Satisfacci\xF3n")?"92%":o.name.includes("Tiempo de recuperaci\xF3n")?"85%":"100%",comments:"Valor registrado para el periodo"}].forEach(g=>{let y={id:this.kpiValueId++,kpiId:d.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)});let m={id:this.kpiId++,name:o.name,description:o.description,unit:o.unit,target:o.orsegaTarget,frequency:o.frequency,calculationMethod:o.calculationMethod,responsible:o.responsible,areaId:n.get("Log\xEDstica").id,companyId:p.id,invertedMetric:!1};this.kpis.set(m.id,m),[{value:o.name.includes("Precisi\xF3n de inventarios")?"99.2%":o.name.includes("Cumplimiento de tiempos")?"97%":o.name.includes("Costos de transporte")?"-1.5% vs inflaci\xF3n":o.name.includes("Satisfacci\xF3n")?"95%":"22 horas",period:"Q1 2023",status:o.name.includes("Cumplimiento de tiempos")||o.name.includes("Satisfacci\xF3n")?"alert":"complies",compliancePercentage:o.name.includes("Cumplimiento de tiempos")?"97%":o.name.includes("Satisfacci\xF3n")?"95%":"100%",comments:"Valor registrado para el periodo"}].forEach(g=>{let y={id:this.kpiValueId++,kpiId:m.id,userId:1,updatedBy:null,...g,date:new Date};this.kpiValues.set(y.id,y)})})}async getUser(t){return this.users.get(t)}async getUserByEmail(t){return Array.from(this.users.values()).find(e=>e.email.toLowerCase()===t.toLowerCase())}async getUserByUsername(t){try{return t.includes("@")?this.getUserByEmail(t):t.toLowerCase()==="admin"?Array.from(this.users.values()).find(e=>e.name.toLowerCase()==="admin"):Array.from(this.users.values()).find(e=>{let s=e.email.toLowerCase().split("@");return s.length>0&&s[0]===t.toLowerCase()})}catch(e){console.error("Error en getUserByUsername:",e);return}}async createUser(t){let e=this.userId++,s={...t,id:e,lastLogin:null,role:t.role||"viewer",companyId:t.companyId||null,areaId:t.areaId||null};return this.users.set(e,s),s}async updateUser(t,e){let s=this.users.get(t);if(!s)return;let c={...s,...e};return this.users.set(t,c),c}async getUsers(){return Array.from(this.users.values())}async getCompany(t){return this.companies.get(t)}async getCompanies(){return Array.from(this.companies.values())}async createCompany(t){let e=this.companyId++,s={...t,id:e,createdAt:new Date,description:t.description||null,sector:t.sector||null,logo:t.logo||null};return this.companies.set(e,s),s}async updateCompany(t,e){let s=this.companies.get(t);if(!s)return;let c={...s,...e};return this.companies.set(t,c),c}async getArea(t){return this.areas.get(t)}async getAreas(){return Array.from(this.areas.values())}async getAreasByCompany(t){return Array.from(this.areas.values()).filter(e=>e.companyId===t)}async createArea(t){let e=this.areaId++,s={...t,id:e,description:t.description||null};return this.areas.set(e,s),s}async updateArea(t,e){let s=this.areas.get(t);if(!s)return;let c={...s,...e};return this.areas.set(t,c),c}async getKpi(t){return this.kpis.get(t)}async getKpis(){return Array.from(this.kpis.values())}async getKpisByCompany(t){return Array.from(this.kpis.values()).filter(e=>e.companyId===t)}async getKpisByArea(t){return Array.from(this.kpis.values()).filter(e=>e.areaId===t)}async createKpi(t){let e=this.kpiId++,s={...t,id:e,description:t.description||null,calculationMethod:t.calculationMethod||null,responsible:t.responsible||null,invertedMetric:t.invertedMetric||!1};return this.kpis.set(e,s),s}async updateKpi(t,e){let s=this.kpis.get(t);if(!s)return;let c={...s,...e};return this.kpis.set(t,c),c}async getKpiValue(t){return this.kpiValues.get(t)}async getKpiValues(){return Array.from(this.kpiValues.values())}async getKpiValuesByKpi(t){return Array.from(this.kpiValues.values()).filter(e=>e.kpiId===t).sort((e,s)=>{let c=e.date?new Date(e.date).getTime():0;return(s.date?new Date(s.date).getTime():0)-c})}async getLatestKpiValues(t,e){return Array.from(this.kpiValues.values()).filter(s=>s.kpiId===t).sort((s,c)=>{let l=s.date?new Date(s.date).getTime():0;return(c.date?new Date(c.date).getTime():0)-l}).slice(0,e)}async createKpiValue(t){let e=this.kpiValueId++,s=t.period;if(!s||s==="monthly"){let l=new Date;s=`${["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"][l.getMonth()]} ${l.getFullYear()}`}let c={...t,id:e,date:new Date,period:s,status:t.status||null,compliancePercentage:t.compliancePercentage||null,comments:t.comments||null,updatedBy:t.updatedBy||null};return this.kpiValues.set(e,c),c}async getActionPlan(t){return this.actionPlans.get(t)}async getActionPlansByKpi(t){return Array.from(this.actionPlans.values()).filter(e=>e.kpiId===t)}async createActionPlan(t){let e=this.actionPlanId++,s={...t,id:e,results:t.results||null};return this.actionPlans.set(e,s),s}async updateActionPlan(t,e){let s=this.actionPlans.get(t);if(!s)return;let c={...s,...e};return this.actionPlans.set(t,c),c}async getShipment(t){return this.shipments.get(t)}async getShipmentByTrackingCode(t){for(let e of Array.from(this.shipments.values()))if(e.trackingCode===t)return e}enrichShipmentWithCycleTimes(t){let e=this.shipmentCycleTimes.get(t.id);return e?{...t,cycleTimes:{hoursTotalCycle:e.hoursTotalCycle,hoursPendingToTransit:e.hoursPendingToTransit,hoursTransitToDelivered:e.hoursTransitToDelivered,hoursDeliveredToClosed:e.hoursDeliveredToClosed,hoursToDelivery:e.hoursToDelivery,computedAt:e.computedAt||void 0,updatedAt:e.updatedAt||void 0}}:{...t,cycleTimes:null}}async getShipments(){return Array.from(this.shipments.values()).map(e=>this.enrichShipmentWithCycleTimes(e))}async getShipmentsByCompany(t){return Array.from(this.shipments.values()).filter(s=>s.companyId===t).map(s=>this.enrichShipmentWithCycleTimes(s))}async getShipmentsByStatus(t){return Array.from(this.shipments.values()).filter(e=>e.status===t)}async getShipmentsByCompanyAndStatus(t,e){return Array.from(this.shipments.values()).filter(s=>s.companyId===t&&s.status===e)}async createShipment(t){let e=this.shipmentId++,s=t.trackingCode;if(!s){let h=t.companyId===1?"DUR":"ORS",I=new Date,i=I.getFullYear().toString().slice(2),n=(I.getMonth()+1).toString().padStart(2,"0"),r=e.toString().padStart(4,"0");s=`${h}-${i}${n}-${r}`}let c=new Date,l=new Date,p={id:e,...t,trackingCode:s,status:t.status||"pending",createdAt:c,updatedAt:l,comments:t.comments||null,customerEmail:t.customerEmail||null,customerPhone:t.customerPhone||null,departureDate:t.departureDate||null,estimatedDeliveryDate:t.estimatedDeliveryDate||null,actualDeliveryDate:t.actualDeliveryDate||null,carrier:t.carrier||null,vehicleInfo:t.vehicleInfo||null,vehicleType:t.vehicleType||null,fuelType:t.fuelType||null,distance:t.distance||null,carbonFootprint:t.carbonFootprint||null,driverName:t.driverName||null,driverPhone:t.driverPhone||null};return this.shipments.set(e,p),p}async updateShipment(t,e){let s=this.shipments.get(t);if(!s)return;let c={...s,...e,updatedAt:new Date};return this.shipments.set(t,c),c}async getShipmentUpdate(t){return this.shipmentUpdates.get(t)}async getShipmentUpdatesByShipment(t){return Array.from(this.shipmentUpdates.values()).filter(e=>e.shipmentId===t).sort((e,s)=>{let c=e.timestamp?new Date(e.timestamp).getTime():0;return(s.timestamp?new Date(s.timestamp).getTime():0)-c})}async createShipmentUpdate(t){let e=this.shipmentUpdateId++,s=new Date,c={id:e,...t,timestamp:s,comments:t.comments||null,updatedBy:t.updatedBy||null,location:t.location||null};this.shipmentUpdates.set(e,c);let l=await this.getShipment(t.shipmentId);return l&&await this.updateShipment(l.id,{status:t.status,updatedAt:s}),c}initializeShipmentData(){let t=[{trackingCode:"DUR-2404-0001",companyId:1,customerName:"Distribuidora Qu\xEDmica del Pac\xEDfico",purchaseOrder:"PO-2025-001",destination:"Mazatl\xE1n, Sinaloa",origin:"Monterrey, Nuevo Le\xF3n",product:"Sosa C\xE1ustica",quantity:"5000",unit:"KG",departureDate:new Date("2025-04-19"),estimatedDeliveryDate:new Date("2025-04-22"),status:"in_transit",carrier:"TransQuimicos SA",vehicleInfo:"Cisterna especializada C-3540",vehicleType:"Cisterna",fuelType:"Diesel",distance:"957",carbonFootprint:"2104",driverName:"Juan P\xE9rez",driverPhone:"+52 555 123 4567",customerEmail:"compras@disquimpac.com",customerPhone:"+52 669 987 6543",comments:"Pedido urgente, cliente prioritario"},{trackingCode:"DUR-2404-0002",companyId:1,customerName:"Qu\xEDmica Industrial del Norte",purchaseOrder:"PO-2025-002",destination:"Torre\xF3n, Coahuila",origin:"Monterrey, Nuevo Le\xF3n",product:"\xC1cido Sulf\xFArico",quantity:"3500",unit:"KG",departureDate:new Date("2025-04-22"),estimatedDeliveryDate:new Date("2025-04-25"),status:"pending",carrier:"TransQuimicos SA",vehicleInfo:"Tanque especializado T-8721",vehicleType:"Tanque",fuelType:"Diesel",distance:"435",carbonFootprint:"953",driverName:"Roberto Mart\xEDnez",driverPhone:"+52 555 765 4321",customerEmail:"operaciones@quinor.mx",customerPhone:"+52 871 234 5678",comments:"Carga peligrosa, requiere documentaci\xF3n especial"},{trackingCode:"DUR-2404-0003",companyId:1,customerName:"Agroqu\xEDmicos del Baj\xEDo",purchaseOrder:"PO-2025-003",destination:"Le\xF3n, Guanajuato",origin:"Monterrey, Nuevo Le\xF3n",product:"Formaldeh\xEDdo",quantity:"2800",unit:"KG",departureDate:new Date("2025-04-15"),estimatedDeliveryDate:new Date("2025-04-18"),actualDeliveryDate:new Date("2025-04-18"),status:"delivered",carrier:"LogiChem",vehicleInfo:"Cami\xF3n L-9234",vehicleType:"Cami\xF3n",fuelType:"Diesel",distance:"632",carbonFootprint:"1390",driverName:"Miguel \xC1ngel Soto",driverPhone:"+52 555 987 6543",customerEmail:"compras@agrobajio.com",customerPhone:"+52 477 345 6789",comments:"Entrega completada satisfactoriamente"}],e=[{trackingCode:"ORS-2404-0001",companyId:2,customerName:"Productos Qu\xEDmicos Industriales",purchaseOrder:"PO-ORS-2025-001",destination:"Guadalajara, Jalisco",origin:"Ciudad de M\xE9xico",product:"Acetona",quantity:"250000",unit:"unidades",departureDate:new Date("2025-04-20"),estimatedDeliveryDate:new Date("2025-04-21"),status:"delayed",carrier:"QuimiTransportes",vehicleInfo:"Trailer QT-5623",vehicleType:"Trailer",fuelType:"Diesel",distance:"549",carbonFootprint:"1208",driverName:"Fernando Ruiz",driverPhone:"+52 555 432 1098",customerEmail:"logistica@pqi.com.mx",customerPhone:"+52 333 456 7890",comments:"Retraso por bloqueo carretero en Jalisco"},{trackingCode:"ORS-2404-0002",companyId:2,customerName:"Laboratorios Qu\xEDmicos de Occidente",purchaseOrder:"PO-ORS-2025-002",destination:"Tepic, Nayarit",origin:"Ciudad de M\xE9xico",product:"Per\xF3xido de Hidr\xF3geno",quantity:"180000",unit:"unidades",departureDate:new Date("2025-04-23"),estimatedDeliveryDate:new Date("2025-04-25"),status:"in_transit",carrier:"QuimiTransportes",vehicleInfo:"Cami\xF3n refrigerado QT-3318",vehicleType:"Cami\xF3n refrigerado",fuelType:"Diesel",distance:"832",carbonFootprint:"1984",driverName:"Alberto Mendoza",driverPhone:"+52 555 678 9012",customerEmail:"compras@lqo.mx",customerPhone:"+52 311 234 5678",comments:"Producto requiere cadena de fr\xEDo"},{trackingCode:"ORS-2404-0003",companyId:2,customerName:"Adhesivos Especializados",purchaseOrder:"PO-ORS-2025-003",destination:"Quer\xE9taro, Quer\xE9taro",origin:"Ciudad de M\xE9xico",product:"Metilato de Sodio",quantity:"125000",unit:"unidades",departureDate:new Date("2025-04-18"),estimatedDeliveryDate:new Date("2025-04-19"),actualDeliveryDate:new Date("2025-04-19"),status:"delivered",carrier:"LogiChem",vehicleInfo:"Cami\xF3n L-7891",vehicleType:"Cami\xF3n",fuelType:"Diesel",distance:"218",carbonFootprint:"475",driverName:"Rafael Torres",driverPhone:"+52 555 890 1234",customerEmail:"insumos@adhesivosesp.com",customerPhone:"+52 442 567 8901",comments:"Cliente confirm\xF3 recepci\xF3n completa"}];t.forEach(s=>{let c={id:this.shipmentId++,...s,actualDeliveryDate:s.actualDeliveryDate||null,createdAt:new Date(Date.now()-Math.floor(Math.random()*10)*24*60*60*1e3),updatedAt:new Date};this.shipments.set(c.id,c),this.createInitialShipmentUpdates(c)}),e.forEach(s=>{let c={id:this.shipmentId++,...s,actualDeliveryDate:s.actualDeliveryDate||null,createdAt:new Date(Date.now()-Math.floor(Math.random()*10)*24*60*60*1e3),updatedAt:new Date};this.shipments.set(c.id,c),this.createInitialShipmentUpdates(c)})}createInitialShipmentUpdates(t){let e={id:this.shipmentUpdateId++,shipmentId:t.id,status:"pending",location:t.origin,comments:"Env\xEDo registrado en sistema",updatedBy:1,timestamp:new Date(t.createdAt?t.createdAt.getTime():Date.now())};if(this.shipmentUpdates.set(e.id,e),t.departureDate&&t.departureDate<=new Date){let s={id:this.shipmentUpdateId++,shipmentId:t.id,status:"in_transit",location:t.origin,comments:"Env\xEDo despachado desde almac\xE9n",updatedBy:1,timestamp:new Date(t.departureDate.getTime())};this.shipmentUpdates.set(s.id,s)}if(t.status==="delayed"){let s={id:this.shipmentUpdateId++,shipmentId:t.id,status:"delayed",location:"En ruta",comments:t.comments||"Env\xEDo retrasado",updatedBy:1,timestamp:new Date(Date.now()-864e5)};this.shipmentUpdates.set(s.id,s)}if(t.status==="delivered"&&t.actualDeliveryDate){let s={id:this.shipmentUpdateId++,shipmentId:t.id,status:"delivered",location:t.destination,comments:"Env\xEDo entregado al cliente",updatedBy:1,timestamp:new Date(t.actualDeliveryDate.getTime())};this.shipmentUpdates.set(s.id,s)}}async getLastKpiUpdateByUser(t){let e=Array.from(this.kpiValues.values()).filter(l=>l.updatedBy===t).sort((l,p)=>{let h=l.date?new Date(l.date).getTime():0;return(p.date?new Date(p.date).getTime():0)-h});if(e.length===0)return;let s=e[0],c=this.kpis.get(s.kpiId);if(c)return s.date?{kpiName:c.name,updateDate:s.date}:void 0}async getTeamActivitySummary(){let t=Array.from(this.users.values()),e=[];for(let s of t){let c=await this.getLastKpiUpdateByUser(s.id);e.push({userId:s.id,lastLogin:s.lastLogin,lastKpiUpdate:c||null})}return e}async getShipmentNotification(t){return this.shipmentNotifications.get(t)}async getShipmentNotificationsByShipment(t){return Array.from(this.shipmentNotifications.values()).filter(e=>e.shipmentId===t)}async createShipmentNotification(t){let e={...t,id:this.shipmentNotificationId++,sentAt:new Date,errorMessage:t.errorMessage||null};return this.shipmentNotifications.set(e.id,e),e}async updateShipmentNotificationStatus(t,e,s){let c=this.shipmentNotifications.get(t);if(!c)return;let l={...c,status:e,errorMessage:s||null};return this.shipmentNotifications.set(t,l),l}async deleteUser(t){return this.users.delete(t)}async getNotification(t){return this.notifications.get(t)}async getNotificationsForUser(t){return Array.from(this.notifications.values()).filter(e=>e.toUserId===t||e.toUserId===null)}async createNotification(t){let e=this.notificationId++,s={...t,companyId:t.companyId??null,areaId:t.areaId??null,toUserId:t.toUserId??null,type:t.type??"info",priority:t.priority??"normal",id:e,read:!1,readAt:null,createdAt:new Date};return this.notifications.set(e,s),s}async markNotificationAsRead(t,e){let s=this.notifications.get(t);if(!s||s.toUserId&&s.toUserId!==e)return;let c={...s,read:!0,readAt:new Date};return this.notifications.set(t,c),c}async deleteNotification(t,e){let s=this.notifications.get(t);return!s||s.toUserId&&s.toUserId!==e?!1:this.notifications.delete(t)}async getJobProfile(t){return this.jobProfiles.get(t)}async getJobProfileByUserArea(t,e){return Array.from(this.jobProfiles.values()).find(s=>s.areaId===t&&s.companyId===e)}async getJobProfileWithDetails(t){let e=await this.getUser(t);if(!e||!e.areaId)return;let s=await this.getJobProfileByUserArea(e.areaId,e.companyId||1);if(!s)return;let c=await this.getArea(e.areaId),l=e.companyId?await this.getCompany(e.companyId):null,p=await this.getUserKpis(t);return{id:s.id,companyId:s.companyId,areaId:s.areaId,title:s.title,description:s.description,mainActivities:s.mainActivities,responsibilities:s.responsibilities,kpiInstructions:s.kpiInstructions,tips:s.tips,processes:s.processes,updateFrequency:s.updateFrequency,areaName:c?.name||"",companyName:l?.name||"",userKpis:p.map(h=>({id:h.id,name:h.name,description:h.description||"",target:h.target,frequency:h.frequency,unit:h.unit}))}}async createJobProfile(t){let e=this.jobProfileId++,s={...t,id:e,createdAt:new Date,updatedAt:new Date};return this.jobProfiles.set(e,s),s}async updateJobProfile(t,e){let s=this.jobProfiles.get(t);if(!s)return;let c={...s,...e,updatedAt:new Date};return this.jobProfiles.set(t,c),c}async getUserKpis(t){let e=await this.getUser(t);return!e||!e.areaId?[]:this.getKpisByArea(e.areaId)}async getShipmentCycleTime(t){return this.shipmentCycleTimes.get(t)}async upsertShipmentCycleTime(t){let e=this.cycleTimeId++,c={id:this.shipmentCycleTimes.get(t.shipmentId)?.id||e,...t,pendingAt:t.pendingAt??null,inTransitAt:t.inTransitAt??null,deliveredAt:t.deliveredAt??null,closedAt:t.closedAt??null,hoursPendingToTransit:t.hoursPendingToTransit??null,hoursTransitToDelivered:t.hoursTransitToDelivered??null,hoursDeliveredToClosed:t.hoursDeliveredToClosed??null,hoursTotalCycle:t.hoursTotalCycle??null,hoursToDelivery:t.hoursToDelivery??null,computedAt:new Date,updatedAt:new Date};return this.shipmentCycleTimes.set(t.shipmentId,c),c}async recalculateShipmentCycleTime(t){let e=this.shipments.get(t);if(!e)return;let s=Array.from(this.shipmentUpdates.values()).filter(g=>g.shipmentId===t).sort((g,y)=>g.timestamp.getTime()-y.timestamp.getTime()),c={};for(let g of s)c[g.status]||(c[g.status]=g.timestamp);let l=e.createdAt,p=c.pending||l,h=c.in_transit,I=c.delivered||e.actualDeliveryDate,i=c.cancelled,n=(g,y)=>!g||!y?null:((y.getTime()-g.getTime())/(1e3*60*60)).toFixed(2),r=n(p,h),o=n(h,I),d=n(I,i),u=n(l,i),m=n(l,I),E={shipmentId:t,companyId:e.companyId,createdAt:l,pendingAt:p,inTransitAt:h,deliveredAt:I,closedAt:i,hoursPendingToTransit:r,hoursTransitToDelivered:o,hoursDeliveredToClosed:d,hoursTotalCycle:u,hoursToDelivery:m};return await this.upsertShipmentCycleTime(E)}async getAggregateCycleTimes(t,e,s){let c=Array.from(this.shipmentCycleTimes.values());if(t&&(c=c.filter(o=>o.companyId===t)),e&&s){let o=new Date(e),d=new Date(s);c=c.filter(u=>{let m=new Date(u.createdAt);return m>=o&&m<=d})}if(c.length===0)return[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:null,avgTransitToDelivered:null,avgDeliveredToClosed:null,avgTotalCycle:null,avgToDelivery:null,totalShipments:0,completedShipments:0}];let l=c.filter(o=>o.hoursPendingToTransit).map(o=>parseFloat(o.hoursPendingToTransit)),p=c.filter(o=>o.hoursTransitToDelivered).map(o=>parseFloat(o.hoursTransitToDelivered)),h=c.filter(o=>o.hoursDeliveredToClosed).map(o=>parseFloat(o.hoursDeliveredToClosed)),I=c.filter(o=>o.hoursTotalCycle).map(o=>parseFloat(o.hoursTotalCycle)),i=c.filter(o=>o.hoursToDelivery).map(o=>parseFloat(o.hoursToDelivery)),n=o=>o.length>0?o.reduce((d,u)=>d+u,0)/o.length:null,r=c.filter(o=>o.closedAt).length;return[{period:"all",startDate:e||"",endDate:s||"",companyId:t,avgPendingToTransit:n(l),avgTransitToDelivered:n(p),avgDeliveredToClosed:n(h),avgTotalCycle:n(I),avgToDelivery:n(i),totalShipments:c.length,completedShipments:r}]}},b=new Oe});var Ge={};se(Ge,{LogLevel:()=>lr,logger:()=>he});import gt from"fs";import cr from"path";var lr,yt,he,Ue=re(()=>{"use strict";lr=(c=>(c.ERROR="ERROR",c.WARN="WARN",c.INFO="INFO",c.DEBUG="DEBUG",c))(lr||{}),yt=class{constructor(){this.logDir=cr.join(process.cwd(),"logs"),this.ensureLogDirectory()}ensureLogDirectory(){gt.existsSync(this.logDir)||gt.mkdirSync(this.logDir,{recursive:!0})}formatMessage(t,e,s){let c=new Date().toISOString(),l=s?` | ${JSON.stringify(s)}`:"";return`[${c}] ${t}: ${e}${l}`}writeToFile(t,e,s){let c=cr.join(this.logDir,`${t.toLowerCase()}.log`),l=this.formatMessage(t,e,s)+`
`;gt.appendFileSync(c,l)}shouldLog(t){let e=process.env.LOG_LEVEL||"INFO",s=["ERROR","WARN","INFO","DEBUG"],c=s.indexOf(e);return s.indexOf(t)<=c}error(t,e){this.shouldLog("ERROR")&&(console.error(`\u{1F534} ${t}`,e||""),this.writeToFile("ERROR",t,e))}warn(t,e){this.shouldLog("WARN")&&(console.warn(`\u{1F7E1} ${t}`,e||""),this.writeToFile("WARN",t,e))}info(t,e){this.shouldLog("INFO")&&(console.log(`\u{1F535} ${t}`,e||""),this.writeToFile("INFO",t,e))}debug(t,e){this.shouldLog("DEBUG")&&(console.log(`\u{1F7E2} ${t}`,e||""),this.writeToFile("DEBUG",t,e))}auth(t,e){this.info(`[AUTH] ${t}`,e)}upload(t,e){this.info(`[UPLOAD] ${t}`,e)}treasury(t,e){this.info(`[TREASURY] ${t}`,e)}security(t,e){this.warn(`[SECURITY] ${t}`,e)}},he=new yt});var _r={};se(_r,{sendShipmentStatusNotification:()=>Xo,sendTransportRequest:()=>St});import bt from"@sendgrid/mail";async function St(a){if(!process.env.SENDGRID_API_KEY){console.log("Email would be sent:",a);return}let t=process.env.NODE_ENV==="production"?"https://your-domain.replit.app":"http://localhost:5000",e=`${t}/api/shipments/${a.shipment.id}/confirm?token=${a.confirmToken}&pickupAt=${encodeURIComponent(a.pickupWindow||"")}`,s=`${t}/api/shipments/${a.shipment.id}/reject?token=${a.rejectToken}`,c=`
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; text-align: center;">
        <h1 style="margin: 0;">Solicitud de Transporte</h1>
        <p style="margin: 5px 0 0 0;">Sistema Log\xEDstico DIGO</p>
      </div>
      
      <div style="padding: 30px; background: #f8f9fa;">
        <p>Estimado proveedor,</p>
        
        <p>Tenemos una nueva solicitud de transporte que requiere su atenci\xF3n:</p>
        
        <div style="background: white; border-radius: 8px; padding: 20px; margin: 20px 0; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
          <h3 style="color: #333; margin-top: 0;">Detalles del Env\xEDo</h3>
          <table style="width: 100%; border-collapse: collapse;">
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Referencia:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.reference}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Cliente:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.client_name}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Origen:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.origin}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Destino:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.destination}</td>
            </tr>
            ${a.shipment.incoterm?`
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Incoterm:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.incoterm}</td>
            </tr>`:""}
            ${a.pickupWindow?`
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Ventana de Recolecci\xF3n:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.pickupWindow}</td>
            </tr>`:""}
          </table>
          
          ${a.notes?`
          <div style="margin-top: 15px; padding: 15px; background: #f8f9fa; border-radius: 4px;">
            <strong>Notas adicionales:</strong><br>
            ${a.notes}
          </div>`:""}
        </div>
        
        <p><strong>\xBFPuede realizar este transporte?</strong></p>
        
        <div style="text-align: center; margin: 30px 0;">
          <a href="${e}" 
             style="display: inline-block; background: #28a745; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 0 10px; font-weight: bold;">
            \u2705 CONFIRMAR TRANSPORTE
          </a>
          
          <a href="${s}" 
             style="display: inline-block; background: #dc3545; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 0 10px; font-weight: bold;">
            \u274C RECHAZAR
          </a>
        </div>
        
        <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; font-size: 12px; color: #666;">
          <p>Este correo fue enviado autom\xE1ticamente por el Sistema Log\xEDstico DIGO.</p>
          <p>Si tiene preguntas, responda directamente a este correo.</p>
        </div>
      </div>
    </div>
  `,l={to:a.to,from:"logistics@digo.mx",subject:`Solicitud de Transporte - ${a.shipment.reference}`,html:c};await bt.send(l),console.log(`Transport request email sent to: ${a.to}`)}async function Xo(a){if(!process.env.SENDGRID_API_KEY)return console.log("[Simulation] Email notification would be sent:",{to:a.to,status:a.status,trackingCode:a.shipment.tracking_code||a.shipment.trackingCode}),{messageId:"simulated",provider:"sendgrid"};let t=Yo[a.status],e=a.shipment.tracking_code||a.shipment.trackingCode||"N/A",s=a.shipment.estimated_delivery_date||a.shipment.estimatedDeliveryDate,c=`
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <div style="background: ${t.color}; color: white; padding: 20px; text-align: center;">
        <h1 style="margin: 0;">${t.title}</h1>
        <p style="margin: 5px 0 0 0;">Sistema de Seguimiento Econova</p>
      </div>
      
      <div style="padding: 30px; background: #f8f9fa;">
        <p style="font-size: 16px; color: #333;">Estimado cliente,</p>
        
        <p style="font-size: 16px; color: #333;">${t.message}</p>
        
        <div style="background: white; border-radius: 8px; padding: 20px; margin: 20px 0; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
          <h3 style="color: #333; margin-top: 0;">Detalles del Env\xEDo</h3>
          <table style="width: 100%; border-collapse: collapse;">
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">C\xF3digo de Seguimiento:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee; font-family: monospace;">${e}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Origen:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.origin||"N/A"}</td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Destino:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.destination||"N/A"}</td>
            </tr>
            ${a.shipment.product?`
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Producto:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${a.shipment.product}</td>
            </tr>`:""}
            ${s?`
            <tr>
              <td style="padding: 8px; font-weight: bold; border-bottom: 1px solid #eee;">Fecha Estimada de Entrega:</td>
              <td style="padding: 8px; border-bottom: 1px solid #eee;">${new Date(s).toLocaleDateString("es-MX",{year:"numeric",month:"long",day:"numeric"})}</td>
            </tr>`:""}
            <tr>
              <td style="padding: 8px; font-weight: bold;">Estado Actual:</td>
              <td style="padding: 8px; color: ${t.color}; font-weight: bold;">${t.title.replace(/[📦🚚⚠️✅❌]/g,"").trim()}</td>
            </tr>
          </table>
        </div>
        
        <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; font-size: 12px; color: #666;">
          <p>Este correo fue enviado autom\xE1ticamente por el Sistema de Seguimiento Econova.</p>
          <p>Si tiene preguntas sobre su env\xEDo, por favor cont\xE1ctenos respondiendo a este correo.</p>
        </div>
      </div>
    </div>
  `,l={to:a.to,from:"logistics@digo.mx",subject:`${t.subject} - ${e}`,html:c};try{let p=await bt.send(l);return console.log(`Shipment status notification sent to: ${a.to} (status: ${a.status})`),{messageId:p[0]?.headers?.["x-message-id"]||"sent",provider:"sendgrid"}}catch(p){throw console.error("[Email Error] Failed to send shipment notification:",p),p}}var Yo,Pt=re(()=>{"use strict";process.env.SENDGRID_API_KEY?bt.setApiKey(process.env.SENDGRID_API_KEY):console.warn("SENDGRID_API_KEY not found - email functionality disabled");Yo={pending:{subject:"Env\xEDo Registrado",title:"\u{1F4E6} Env\xEDo Registrado",message:"Su env\xEDo ha sido registrado en nuestro sistema y est\xE1 pendiente de despacho.",color:"#6c757d"},in_transit:{subject:"Env\xEDo en Tr\xE1nsito",title:"\u{1F69A} Su Env\xEDo Est\xE1 en Camino",message:"Su env\xEDo ha sido despachado y est\xE1 en tr\xE1nsito hacia su destino.",color:"#0066cc"},delayed:{subject:"Env\xEDo Retrasado",title:"\u26A0\uFE0F Actualizaci\xF3n de Env\xEDo",message:"Queremos informarle que su env\xEDo ha experimentado un retraso. Estamos trabajando para entregarlo lo antes posible.",color:"#ffc107"},delivered:{subject:"Env\xEDo Entregado",title:"\u2705 Env\xEDo Entregado Exitosamente",message:"\xA1Excelentes noticias! Su env\xEDo ha sido entregado exitosamente.",color:"#28a745"},cancelled:{subject:"Env\xEDo Cancelado",title:"\u274C Env\xEDo Cancelado",message:"Su env\xEDo ha sido cancelado. Si tiene preguntas, por favor cont\xE1ctenos.",color:"#dc3545"}}});var Ar={};se(Ar,{seedClients:()=>xr});async function xr(){try{console.log("\u{1F465} Creando clientes de prueba...");let a=await v.select().from(Q);if(console.log(`\u{1F4CA} Clientes existentes: ${a.length}`),a.length>0)return console.log("\u2705 Ya hay clientes en la base de datos"),{success:!0,message:"Clients already exist",count:a.length};let t=[{name:"Distribuidora Qu\xEDmica del Pac\xEDfico",email:"contacto@distribuidoraquimica.com",phone:"+52-667-123-4567",address:"Av. del Mar 123, Mazatl\xE1n, Sinaloa",companyId:1,requires_payment_complement:!0,isActive:!0,clientCode:"DUR-CLI-001",city:"Mazatl\xE1n",state:"Sinaloa"},{name:"Qu\xEDmica Industrial del Norte",email:"ventas@quimicanorte.com",phone:"+52-871-234-5678",address:"Blvd. Independencia 456, Torre\xF3n, Coahuila",companyId:1,requires_payment_complement:!1,isActive:!0,clientCode:"DUR-CLI-002",city:"Torre\xF3n",state:"Coahuila"},{name:"Agroqu\xEDmicos del Baj\xEDo",email:"compras@agroquimicosbajio.com",phone:"+52-477-345-6789",address:"Calle Industrial 789, Le\xF3n, Guanajuato",companyId:1,requires_payment_complement:!0,isActive:!0,clientCode:"DUR-CLI-003",city:"Le\xF3n",state:"Guanajuato"}],e=[{name:"Productos Qu\xEDmicos Industriales",email:"contacto@pqi.com.mx",phone:"+52-33-456-7890",address:"Av. L\xF3pez Mateos 321, Guadalajara, Jalisco",companyId:2,requires_payment_complement:!0,isActive:!0,clientCode:"ORS-CLI-001",city:"Guadalajara",state:"Jalisco"},{name:"Laboratorios Qu\xEDmicos de Occidente",email:"compras@labquimicos.com",phone:"+52-311-567-8901",address:"Calle Tecnol\xF3gica 654, Tepic, Nayarit",companyId:2,requires_payment_complement:!1,isActive:!0,clientCode:"ORS-CLI-002",city:"Tepic",state:"Nayarit"},{name:"Adhesivos Especializados",email:"ventas@adhesivos.com.mx",phone:"+52-442-678-9012",address:"Zona Industrial 987, Quer\xE9taro, Quer\xE9taro",companyId:2,requires_payment_complement:!0,isActive:!0,clientCode:"ORS-CLI-003",city:"Quer\xE9taro",state:"Quer\xE9taro"},{name:"Proveedor de Servicios Qu\xEDmicos",email:"servicios@proveedorquimico.com",phone:"+52-55-789-0123",address:"Av. Insurgentes 147, Ciudad de M\xE9xico",companyId:2,requires_payment_complement:!1,isActive:!0,clientCode:"ORS-CLI-004",city:"Ciudad de M\xE9xico",state:"CDMX"}],s=[...t,...e];return await v.insert(Q).values(s),console.log(`\u2705 ${s.length} clientes creados exitosamente!`),console.log(`\u{1F4CA} Dura International: ${t.length} clientes`),console.log(`\u{1F4CA} Grupo Orsega: ${e.length} clientes`),{success:!0,message:"Clients created successfully",total:s.length,dura:t.length,orsega:e.length}}catch(a){return console.error("\u274C Error creando clientes:",a),{success:!1,message:"Failed to create clients",error:a instanceof Error?a.message:String(a)}}}var Rr=re(()=>{"use strict";pe();ie();import.meta.url===`file://${process.argv[1]}`&&xr().then(a=>{console.log(a),process.exit(a.success?0:1)})});var Je={};se(Je,{TreasuryAutomation:()=>Tt});import{eq as Re}from"drizzle-orm";import wt from"@sendgrid/mail";var Tt,Ye=re(()=>{"use strict";pe();ie();wt.setApiKey(process.env.SENDGRID_API_KEY);Tt=class{static async sendPaymentReceiptToSupplier(t,e,s){try{let c=await v.query.paymentVouchers.findFirst({where:Re(F.id,t)});if(!c)return{success:!1,message:"Comprobante no encontrado"};let l=await v.query.clients.findFirst({where:Re(Q.id,e)});if(!l||!l.email)return{success:!1,message:"Cliente sin email configurado"};let p=c.analysis||{},h=p.extractedAmount||"N/A",I=p.extractedCurrency||"MXN",i=p.extractedReference||"N/A",n=p.extractedBank||"N/A",r={to:l.email,from:"noreply@econova.com.mx",subject:`\u2705 Comprobante de Pago - ${l.name}`,html:`
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;">
              <h1 style="color: white; margin: 0; font-size: 24px;">\u{1F3E6} EcoNova - Comprobante de Pago</h1>
            </div>
            
            <div style="padding: 30px; background: #f8f9fa;">
              <h2 style="color: #333; margin-bottom: 20px;">Hola ${l.name},</h2>
              
              <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
                Te confirmamos que hemos realizado el pago correspondiente. Adjunto encontrar\xE1s el comprobante bancario.
              </p>
              
              <div style="background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); margin: 20px 0;">
                <h3 style="color: #333; margin-top: 0;">\u{1F4CB} Detalles del Pago</h3>
                <table style="width: 100%; border-collapse: collapse;">
                  <tr>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">Monto:</td>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; color: #333;">${I} $${h?.toLocaleString()}</td>
                  </tr>
                  <tr>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">Referencia:</td>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; color: #333;">${i}</td>
                  </tr>
                  <tr>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; font-weight: bold; color: #555;">Banco:</td>
                    <td style="padding: 8px 0; border-bottom: 1px solid #eee; color: #333;">${n}</td>
                  </tr>
                  <tr>
                    <td style="padding: 8px 0; font-weight: bold; color: #555;">Fecha:</td>
                    <td style="padding: 8px 0; color: #333;">${new Date().toLocaleDateString("es-MX")}</td>
                  </tr>
                </table>
              </div>

              ${l.requiresPaymentComplement?`
                <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 8px; margin: 20px 0;">
                  <h4 style="color: #856404; margin-top: 0;">\u26A0\uFE0F Complemento de Pago Requerido</h4>
                  <p style="color: #856404; margin-bottom: 0;">
                    Para completar el proceso, necesitamos que nos env\xEDes el complemento de pago correspondiente.
                    Te enviaremos un recordatorio en caso de que no lo recibamos.
                  </p>
                </div>
              `:`
                <div style="background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 8px; margin: 20px 0;">
                  <h4 style="color: #155724; margin-top: 0;">\u2705 Pago Completado</h4>
                  <p style="color: #155724; margin-bottom: 0;">
                    Este pago no requiere complemento adicional. El proceso ha sido completado exitosamente.
                  </p>
                </div>
              `}

              <div style="text-align: center; margin-top: 30px;">
                <p style="color: #666; font-size: 14px;">
                  Si tienes alguna pregunta, no dudes en contactarnos.
                </p>
                <p style="color: #999; font-size: 12px; margin-top: 20px;">
                  Este es un mensaje autom\xE1tico del sistema EcoNova.
                </p>
              </div>
            </div>
          </div>
        `};return await wt.send(r),await v.update(F).set({status:l.requiresPaymentComplement?"pendiente_complemento":"factura_pagada",updatedAt:new Date}).where(Re(F.id,t)),l.requiresPaymentComplement&&await this.scheduleComplementReminder(t,e),{success:!0,message:`Comprobante enviado a ${l.email}. ${l.requiresPaymentComplement?"Recordatorio programado.":"Pago completado."}`}}catch(c){return console.error("[Treasury Automation] Error sending receipt:",c),{success:!1,message:"Error al enviar comprobante"}}}static async scheduleComplementReminder(t,e){try{let s=[3,7,14];for(let c of s){let l=new Date;l.setDate(l.getDate()+c),console.log(`[Treasury Automation] Recordatorio programado para ${l.toISOString()}`)}}catch(s){console.error("[Treasury Automation] Error scheduling reminder:",s)}}static async sendComplementReminder(t,e){try{let s=await v.query.clients.findFirst({where:Re(Q.id,e)});if(!s||!s.email)return{success:!1,message:"Cliente sin email configurado"};let c=await v.query.paymentVouchers.findFirst({where:Re(F.id,t)});if(!c)return{success:!1,message:"Comprobante no encontrado"};if(c.status!=="pendiente_complemento")return{success:!1,message:"El complemento ya fue recibido"};let l={to:s.email,from:"noreply@econova.com.mx",subject:`\u23F0 Recordatorio: Complemento de Pago Pendiente - ${s.name}`,html:`
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <div style="background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); padding: 20px; text-align: center;">
              <h1 style="color: white; margin: 0; font-size: 24px;">\u23F0 Recordatorio - Complemento de Pago</h1>
            </div>
            
            <div style="padding: 30px; background: #f8f9fa;">
              <h2 style="color: #333; margin-bottom: 20px;">Hola ${s.name},</h2>
              
              <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
                Te recordamos que a\xFAn necesitamos el complemento de pago para completar el proceso.
              </p>
              
              <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 20px; border-radius: 8px; margin: 20px 0;">
                <h3 style="color: #856404; margin-top: 0;">\u{1F4CB} Acci\xF3n Requerida</h3>
                <p style="color: #856404; margin-bottom: 15px;">
                  Por favor, env\xEDa el complemento de pago correspondiente para que podamos finalizar el proceso.
                </p>
                <p style="color: #856404; margin-bottom: 0; font-weight: bold;">
                  Puedes enviarlo respondiendo a este correo o contact\xE1ndonos directamente.
                </p>
              </div>

              <div style="text-align: center; margin-top: 30px;">
                <p style="color: #666; font-size: 14px;">
                  Gracias por tu colaboraci\xF3n.
                </p>
                <p style="color: #999; font-size: 12px; margin-top: 20px;">
                  Este es un recordatorio autom\xE1tico del sistema EcoNova.
                </p>
              </div>
            </div>
          </div>
        `};return await wt.send(l),{success:!0,message:`Recordatorio enviado a ${s.email}`}}catch(s){return console.error("[Treasury Automation] Error sending reminder:",s),{success:!1,message:"Error al enviar recordatorio"}}}static async processAutomaticFlow(t,e,s){try{console.log(`\u{1F916} [TreasuryAutomation] Iniciando flujo autom\xE1tico para voucher ${t}, empresa ${s}`);let c=await v.query.clients.findFirst({where:Re(Q.id,e)});if(!c)return{success:!1,message:"Cliente no encontrado",nextStatus:"error"};if(c.companyId!==s)return console.error(`\u274C [TreasuryAutomation] Cliente ${e} no pertenece a empresa ${s}`),{success:!1,message:"Cliente no pertenece a la empresa seleccionada",nextStatus:"error"};let l=await this.sendPaymentReceiptToSupplier(t,e,s);if(!l.success)return{success:!1,message:l.message,nextStatus:"error"};let p=c.requiresPaymentComplement?"pendiente_complemento":"factura_pagada";return console.log(`\u2705 [TreasuryAutomation] Flujo autom\xE1tico completado para voucher ${t}, empresa ${s}`),{success:!0,message:`Comprobante enviado autom\xE1ticamente a ${c.name}. ${c.requiresPaymentComplement?"Recordatorios programados.":"Proceso completado."}`,nextStatus:p}}catch(c){return console.error("[Treasury Automation] Error in automatic flow:",c),{success:!1,message:"Error en el flujo autom\xE1tico",nextStatus:"error"}}}}});var $r={};se($r,{seedProductionData:()=>en});async function en(){try{console.log("\u{1F331} Iniciando seeding de datos de producci\xF3n...");let a=await v.select().from(z),t=await v.select().from(H),e=await v.select().from($);if(console.log(`\u{1F4CA} Estado actual: companies=${a.length}, areas=${t.length}, kpis=${e.length}`),a.length>=2&&t.length>=12&&e.length>=5)return console.log("\u2705 Base de datos ya tiene datos completos"),{success:!0,message:"Database already seeded",companies:a.length,areas:t.length,kpis:e.length};let s=a;if(a.length<2){console.log("\u{1F4CA} Insertando companies faltantes...");let h=a.some(n=>n.id===1),I=a.some(n=>n.id===2),i=[];h||i.push({id:1,name:"Dura International",description:"Empresa l\xEDder en la industria qu\xEDmica",sector:"Qu\xEDmica"}),I||i.push({id:2,name:"Grupo Orsega",description:"Empresa especializada en productos qu\xEDmicos",sector:"Qu\xEDmica"}),i.length>0&&await v.insert(z).values(i),s=await v.select().from(z)}if(t.length<12){console.log("\u{1F3E2} Insertando areas faltantes...");let h=[{id:1,name:"Ventas",description:"\xC1rea de Ventas para Dura International",companyId:1},{id:2,name:"Log\xEDstica",description:"\xC1rea de Log\xEDstica para Dura International",companyId:1},{id:3,name:"Contabilidad y Finanzas",description:"\xC1rea de Contabilidad y Finanzas para Dura International",companyId:1},{id:4,name:"Ventas",description:"\xC1rea de Ventas para Grupo Orsega",companyId:2},{id:5,name:"Log\xEDstica",description:"\xC1rea de Log\xEDstica para Grupo Orsega",companyId:2},{id:6,name:"Contabilidad y Finanzas",description:"\xC1rea de Contabilidad y Finanzas para Grupo Orsega",companyId:2},{id:7,name:"Compras",description:"\xC1rea de Compras para Dura International",companyId:1},{id:8,name:"Almac\xE9n",description:"\xC1rea de Almac\xE9n para Dura International",companyId:1},{id:9,name:"Tesorer\xEDa",description:"\xC1rea de Tesorer\xEDa para Dura International",companyId:1},{id:10,name:"Compras",description:"\xC1rea de Compras para Grupo Orsega",companyId:2},{id:11,name:"Almac\xE9n",description:"\xC1rea de Almac\xE9n para Grupo Orsega",companyId:2},{id:12,name:"Tesorer\xEDa",description:"\xC1rea de Tesorer\xEDa para Grupo Orsega",companyId:2}],I=t.map(n=>n.id),i=h.filter(n=>!I.includes(n.id));i.length>0&&await v.insert(H).values(i)}if(e.length<5){console.log("\u{1F4C8} Insertando KPIs faltantes de Grupo Orsega...");let h=[{id:2,name:"Precisi\xF3n en estados financieros",description:"Mide la exactitud de los estados financieros generados. Objetivo: cero errores en emisi\xF3n de informaci\xF3n financiera.",areaId:6,companyId:2,unit:"%",target:"100%",frequency:"monthly",calculationMethod:"Conteo de errores y salvedades",responsible:"Mario Reynoso",invertedMetric:!1},{id:4,name:"Velocidad de rotaci\xF3n de cuentas por cobrar",description:"Mide el tiempo promedio para cobrar cuentas pendientes",areaId:6,companyId:2,unit:"d\xEDas",target:"60 d\xEDas",frequency:"monthly",calculationMethod:"Promedio de d\xEDas para cobrar",responsible:"Mario Reynoso",invertedMetric:!0},{id:6,name:"Cumplimiento de obligaciones fiscales",description:"Monitoreo mediante checklist para la presentaci\xF3n de impuestos",areaId:6,companyId:2,unit:"%",target:"100%",frequency:"monthly",calculationMethod:"Checklist de obligaciones fiscales",responsible:"Mario Reynoso",invertedMetric:!1},{id:8,name:"Facturaci\xF3n sin errores",description:"Mide la precisi\xF3n en la generaci\xF3n de facturas",areaId:6,companyId:2,unit:"%",target:"100%",frequency:"weekly",calculationMethod:"(Facturas sin errores / Total de facturas) x 100",responsible:"Mario Reynoso",invertedMetric:!1},{id:10,name:"Volumen de ventas alcanzado",description:"Volumen de ventas en unidades",areaId:4,companyId:2,unit:"unidades",target:"10.300.476 unidades",frequency:"monthly",calculationMethod:"Suma de unidades vendidas en el per\xEDodo",responsible:"Omar Navarro",invertedMetric:!1}],I=e.map(n=>n.id),i=h.filter(n=>!I.includes(n.id));i.length>0&&await v.insert($).values(i)}let c=await v.select().from(z),l=await v.select().from(H),p=await v.select().from($);return console.log("\u2705 Seeding completado exitosamente!"),{success:!0,message:"Production database seeded successfully",companies:c.length,areas:l.length,kpis:p.length}}catch(a){return console.error("\u274C Error durante el seeding:",a),{success:!1,message:"Seeding failed",error:a instanceof Error?a.message:String(a)}}}var Cr=re(()=>{"use strict";pe();ie()});var Dr={};se(Dr,{analyzePaymentDocument:()=>rn});import tn from"openai";async function rn(a,t){let e=process.env.OPENAI_API_KEY;if(!e)throw new Error("OPENAI_API_KEY no est\xE1 configurado");let s=new tn({apiKey:e});console.log(`\u{1F50D} [Document Analyzer] Analizando documento tipo: ${t}`);try{let c=a.toString("base64"),l="image/jpeg";t.includes("png")&&(l="image/png"),t.includes("pdf")&&(l="application/pdf");let p=`data:${l};base64,${c}`,i=(await s.chat.completions.create({model:"gpt-4o",messages:[{role:"user",content:[{type:"text",text:`Analiza este comprobante de pago bancario y extrae la siguiente informaci\xF3n en formato JSON:

{
  "amount": n\xFAmero del monto total (solo n\xFAmero, sin s\xEDmbolos de moneda),
  "date": fecha del comprobante en formato ISO 8601 (YYYY-MM-DD),
  "bank": nombre del banco emisor,
  "reference": n\xFAmero de referencia, folio o n\xFAmero de operaci\xF3n,
  "currency": c\xF3digo de moneda (MXN, USD, etc.)
}

Si no puedes encontrar alg\xFAn dato, usa null para ese campo.
Responde SOLO con el JSON, sin texto adicional.`},{type:"image_url",image_url:{url:p}}]}],max_tokens:500,temperature:.1})).choices[0]?.message?.content||"";console.log("\u{1F4C4} [Document Analyzer] Respuesta de OpenAI:",i);let n;try{let o=i.match(/\{[\s\S]*\}/),d=o?o[0]:i;n=JSON.parse(d)}catch(o){console.error("\u274C [Document Analyzer] Error parseando JSON:",o);let d=i.match(/\$?[\d,]+\.?\d*/),u=i.match(/(banco|bank|bbva|santander|hsbc|banorte|banamex)/i),m=i.match(/(referencia|ref|folio|no\.?\s*\d+)/i);return{extractedAmount:d?parseFloat(d[0].replace(/[$,]/g,"")):null,extractedDate:null,extractedBank:u?u[0]:null,extractedReference:m?m[0]:null,extractedCurrency:"MXN",ocrConfidence:.3,rawResponse:i}}let r={extractedAmount:n.amount?parseFloat(n.amount):null,extractedDate:n.date?new Date(n.date):null,extractedBank:n.bank||null,extractedReference:n.reference||null,extractedCurrency:n.currency||null,ocrConfidence:on(n),rawResponse:i};return console.log("\u2705 [Document Analyzer] An\xE1lisis completado:",{amount:r.extractedAmount,bank:r.extractedBank,confidence:r.ocrConfidence}),r}catch(c){throw console.error("\u274C [Document Analyzer] Error en an\xE1lisis:",c),new Error(`Error al analizar documento: ${c}`)}}function on(a){let t=0,e=5;return a.amount!==null&&a.amount!==void 0&&t++,a.date!==null&&a.date!==void 0&&t++,a.bank!==null&&a.bank!==void 0&&t++,a.reference!==null&&a.reference!==void 0&&t++,a.currency!==null&&a.currency!==void 0&&t++,t/e}var kr=re(()=>{"use strict"});var Nt={};se(Nt,{importBanxicoHistoricalData:()=>jr,importSeptemberOctober2025:()=>sn});async function jr(a,t){let e=process.env.BANXICO_TOKEN;if(!e)throw new Error("BANXICO_TOKEN no est\xE1 configurado");let s=`${nn}/series/${Or}/datos/${a}/${t}`;console.log(`\u{1F4E5} [Banxico Import] Importando datos desde ${a} hasta ${t}...`);try{let c=await fetch(s,{headers:{"Bmx-Token":e}});if(!c.ok)throw new Error(`Error en API Banxico: ${c.status} ${c.statusText}`);let p=(await c.json()).bmx.series[0]?.datos||[];console.log(`\u{1F4CA} [Banxico Import] Recibidos ${p.length} registros`);let h=0,I=0;for(let i of p){let[n,r,o]=i.fecha.split("/"),d=`${o}-${r}-${n}`,u=parseFloat(i.dato),m=u.toFixed(4),E=u.toFixed(4);if(await v.query.exchangeRates.findFirst({where:(y,{and:S,eq:P})=>S(P(y.source,"DOF"),P(y.date,new Date(`${d}T09:00:00`)))})){I++;continue}await v.insert(G).values({buyRate:Number(m),sellRate:Number(E),source:"DOF",notes:`Importado de Banxico (Serie ${Or})`,date:new Date(`${d}T09:00:00`),createdBy:23}),h++}return console.log(`\u2705 [Banxico Import] Importados: ${h}, Omitidos (ya exist\xEDan): ${I}`),{success:!0,imported:h,skipped:I,total:p.length}}catch(c){throw console.error("\u274C [Banxico Import] Error:",c),c}}async function sn(){console.log("\u{1F680} [Banxico Import] Iniciando importaci\xF3n de Sept-Oct 2025...");let a=await jr("2025-09-01","2025-10-31");return console.log("\u{1F389} [Banxico Import] Importaci\xF3n completada:",a),a}var nn,Or,_t=re(()=>{"use strict";pe();ie();nn="https://www.banxico.org.mx/SieAPIRest/service/v1",Or="SF43718"});var Ur={};se(Ur,{IdrallParser:()=>xt});import*as Xe from"xlsx";import{z as ee}from"zod";var an,xt,Mr=re(()=>{"use strict";an=ee.object({fecha:ee.string().optional(),fecha_pago:ee.string().optional(),monto:ee.number().optional(),importe:ee.number().optional(),proveedor:ee.string().optional(),cliente:ee.string().optional(),concepto:ee.string().optional(),descripcion:ee.string().optional(),referencia:ee.string().optional(),banco:ee.string().optional(),cuenta:ee.string().optional(),moneda:ee.string().optional(),factura:ee.string().optional(),folio:ee.string().optional(),vencimiento:ee.string().optional(),status:ee.string().optional()}),xt=class{static async parseExcel(t){try{console.log(`\u{1F4CA} [IdrallParser] Procesando archivo: ${t}`);let e=Xe.readFile(t),s=e.SheetNames[0],c=e.Sheets[s],l=Xe.utils.sheet_to_json(c,{header:1});if(l.length<2)return{success:!1,payments:[],errors:["El archivo Excel est\xE1 vac\xEDo o no tiene datos"],totalRows:0};let p=l[0];console.log("\u{1F4CB} [IdrallParser] Headers encontrados:",p);let h=this.mapHeaders(p);console.log("\u{1F504} [IdrallParser] Mapeo de headers:",h);let I=[],i=[],n=0;for(let r=1;r<l.length;r++){let o=l[r];if(!(!o||o.length===0))try{let d=this.mapRowData(o,h,p),u=an.parse(d);(u.monto||u.importe)&&(I.push(u),n++)}catch(d){let u=`Fila ${r+1}: ${d instanceof Error?d.message:"Error desconocido"}`;i.push(u),console.warn(`\u26A0\uFE0F [IdrallParser] ${u}`)}}return console.log(`\u2705 [IdrallParser] Procesamiento completado: ${n} pagos v\xE1lidos, ${i.length} errores`),{success:n>0,payments:I,errors:i,totalRows:l.length-1}}catch(e){return console.error("\u274C [IdrallParser] Error procesando Excel:",e),{success:!1,payments:[],errors:[`Error procesando archivo: ${e instanceof Error?e.message:"Error desconocido"}`],totalRows:0}}}static mapHeaders(t){let e={};return t.forEach((s,c)=>{if(!s)return;let l=s.toLowerCase().trim();l.includes("fecha")&&l.includes("pago")?e[`col_${c}`]="fecha_pago":l.includes("fecha")?e[`col_${c}`]="fecha":l.includes("monto")||l.includes("importe")?e[`col_${c}`]="monto":l.includes("proveedor")||l.includes("supplier")?e[`col_${c}`]="proveedor":l.includes("cliente")||l.includes("client")?e[`col_${c}`]="cliente":l.includes("concepto")||l.includes("concept")?e[`col_${c}`]="concepto":l.includes("descripcion")||l.includes("description")?e[`col_${c}`]="descripcion":l.includes("referencia")||l.includes("reference")?e[`col_${c}`]="referencia":l.includes("banco")||l.includes("bank")?e[`col_${c}`]="banco":l.includes("cuenta")||l.includes("account")?e[`col_${c}`]="cuenta":l.includes("moneda")||l.includes("currency")?e[`col_${c}`]="moneda":l.includes("factura")||l.includes("invoice")?e[`col_${c}`]="factura":l.includes("folio")?e[`col_${c}`]="folio":l.includes("vencimiento")||l.includes("due")?e[`col_${c}`]="vencimiento":(l.includes("status")||l.includes("estado"))&&(e[`col_${c}`]="status")}),e}static mapRowData(t,e,s){let c={};return t.forEach((l,p)=>{let h=`col_${p}`,I=e[h];if(I&&l!==void 0&&l!==null&&l!=="")if(I==="monto"||I==="importe"){let i=parseFloat(String(l).replace(/[^0-9.-]/g,""));isNaN(i)||(c[I]=i)}else c[I]=String(l).trim()}),c}static async findMatchingClient(t,e){try{let{db:s}=await Promise.resolve().then(()=>(pe(),Jt)),{clients:c}=await Promise.resolve().then(()=>(ie(),ze)),{eq:l,and:p,or:h,ilike:I}=await import("drizzle-orm"),i=[t.proveedor,t.cliente,t.concepto,t.descripcion].filter(Boolean);if(i.length===0)return{found:!1,matchType:"none"};for(let n of i){let r=await s.query.clients.findFirst({where:p(l(c.companyId,e),I(c.name,`%${n}%`))});if(r)return{found:!0,client:r,matchType:"exact"}}for(let n of i){let r=await s.query.clients.findFirst({where:p(l(c.companyId,e),h(I(c.name,`%${n.split(" ")[0]}%`),I(c.email,`%${n}%`)))});if(r)return{found:!0,client:r,matchType:"partial"}}return{found:!1,matchType:"none"}}catch(s){return console.error("\u274C [IdrallParser] Error buscando cliente:",s),{found:!1,matchType:"none"}}}}});var jt={};se(jt,{log:()=>gn,serveStatic:()=>hn,setupVite:()=>yn});import un from"express";import Ze from"fs";import Ve from"path";import{nanoid as pn}from"nanoid";async function mn(){if(!kt||!Ot){let a=await import("vite");kt=a.createLogger(),Ot=a.createServer}return{viteLogger:kt,createViteServer:Ot}}function gn(a,t="express"){let e=new Date().toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",second:"2-digit",hour12:!0});console.log(`${e} [${t}] ${a}`)}async function yn(a,t){let{viteLogger:e,createViteServer:s}=await mn(),c;try{c=(await import("../vite.config.js")).default}catch{console.warn("\u26A0\uFE0F Could not load vite.config, using minimal config"),c={root:Ve.resolve(import.meta.dirname,"..","client"),server:{}}}let l={middlewareMode:!0,hmr:{server:t},allowedHosts:!0},p=await s({...c,configFile:!1,customLogger:{...e,error:(h,I)=>{e.error(h,I),process.exit(1)}},server:l,appType:"custom"});a.use((h,I,i)=>{if(h.path.startsWith("/api/"))return i();p.middlewares(h,I,i)}),a.use("*",async(h,I,i)=>{let n=h.originalUrl;if(n.startsWith("/api/"))return i();try{let r=Ve.resolve(import.meta.dirname,"..","client","index.html"),o=await Ze.promises.readFile(r,"utf-8");o=o.replace('src="/src/main.tsx"',`src="/src/main.tsx?v=${pn()}"`);let d=await p.transformIndexHtml(n,o);I.status(200).set({"Content-Type":"text/html"}).end(d)}catch(r){p.ssrFixStacktrace(r),i(r)}})}function hn(a){let t=Ve.resolve(import.meta.dirname,"public"),e=Ve.resolve(import.meta.dirname,"..","dist","public"),s=Ze.existsSync(t)?t:e;if(!Ze.existsSync(s)){console.error(`\u26A0\uFE0F WARNING: Could not find build directory at ${t} or ${e}`),console.error("\u26A0\uFE0F Static file serving disabled, but API and /health should still work");return}console.log(`\u2705 Serving static files from: ${s}`),a.use(un.static(s)),a.use("*",(c,l)=>{let p=Ve.resolve(s,"index.html");Ze.existsSync(p)?l.sendFile(p):l.status(200).json({message:"Server running but frontend not found",healthcheck:"Use /health endpoint"})})}var kt,Ot,Ut=re(()=>{"use strict";kt=null,Ot=null});import"dotenv/config";import et from"express";import{createServer as fn}from"http";import{fileURLToPath as En}from"url";je();import{hash as Ke}from"bcryptjs";import{z as M}from"zod";import At from"express-rate-limit";je();import er from"jsonwebtoken";import Ao from"bcrypt";if(!process.env.JWT_SECRET)throw new Error("FATAL: JWT_SECRET environment variable must be set. This is a critical security requirement. Application cannot start without it.");var tr=process.env.JWT_SECRET,Ro="7d";function $o(a){return er.sign({id:a.id,name:a.name,email:a.email,role:a.role,companyId:a.companyId},tr,{expiresIn:Ro})}function Co(a){try{return er.verify(a,tr)}catch(t){return console.error("[JWT] Error al verificar token:",t),null}}function w(a,t,e){let s=a.headers.authorization,c=s&&s.split(" ")[1];if(console.log("[JWT Auth] Checking token:",!!c),!c)return t.status(401).json({message:"Unauthorized",details:"No authentication token provided"});let l=Co(c);if(!l)return t.status(401).json({message:"Unauthorized",details:"Invalid or expired token"});a.user=l,console.log(`[JWT Auth] Authenticated user: ID=${l.id}, Role=${l.role}`),e()}function Ae(a,t,e){let s=a.user;if(!s||s.role!=="admin")return t.status(403).json({message:"Forbidden: Admin access required"});e()}async function Do(a,t){try{if(!t||!a)return console.error("[Auth] Password o stored password vac\xEDo"),!1;if(t.startsWith("$2a$")||t.startsWith("$2b$")||t.startsWith("$2y$")){console.log("[Auth] Comparando con bcrypt (hash detectado)");let s=await Ao.compare(a,t);return console.log(`[Auth] Resultado bcrypt.compare: ${s}`),s}console.log("[Auth] Comparando texto plano (fallback)");let e=a===t;return console.log(`[Auth] Resultado comparaci\xF3n texto plano: ${e} (supplied="${a}", stored="${t}")`),e}catch(e){return console.error("[Auth] Error comparando contrase\xF1as:",e),!1}}async function rr(a,t){try{console.log(`[Auth] Intento de login para: ${a}`);let e=await b.getUserByUsername(a);if(!e)return console.log(`[Auth] Usuario no encontrado: ${a}`),null;console.log(`[Auth] Usuario encontrado: ID=${e.id}, Email=${e.email}, Password hash starts with: ${e.password?.substring(0,10)}`);let s=await Do(t,e.password);if(console.log(`[Auth] Comparaci\xF3n de contrase\xF1a: ${s?"\u2705 MATCH":"\u274C NO MATCH"}`),!s)return console.log(`[Auth] Contrase\xF1a incorrecta para usuario: ${a}`),console.log(`[Auth] Detalles: Password proporcionada length=${t.length}, Stored password starts with=${e.password?.substring(0,10)}`),null;await b.updateUser(e.id,{lastLogin:new Date});let c=$o({id:e.id,name:e.name,email:e.email,role:e.role,companyId:e.companyId});console.log(`[Auth] Login exitoso para usuario: ${a}`);let{password:l,...p}=e;return{token:c,user:p}}catch(e){return console.error("[Auth] Error en login:",e),null}}ie();pe();import{eq as Qe}from"drizzle-orm";pe();ie();import{gte as or,eq as nr,and as sr}from"drizzle-orm";async function ar(a,t=30){let e=new Date;e.setDate(e.getDate()-t);let s=await v.select({date:G.date,buy:G.buyRate,sell:G.sellRate}).from(G).where(sr(nr(G.source,a),or(G.date,e))).orderBy(G.date),c=s.map(p=>({date:p.date.toISOString().split("T")[0],buy:p.buy,sell:p.sell})),l=s.length>0?s[s.length-1].date.toISOString().split("T")[0]:null;return{source:a,series:c,last_update:l}}function ko(a,t="sell"){if(a.length<2)return"N/D";let e=a[a.length-1],s=new Date(e.date);s.setDate(s.getDate()-7);let c=null,l=1/0;for(let h of a){let I=Math.abs(h.date.getTime()-s.getTime());I<l&&(l=I,c=h)}if(!c||c===e)return"N/D";let p=(e[t]-c[t])/c[t]*100;return p>=.5?"Alcista":p<=-.5?"Bajista":"Estable"}function Oo(a,t="sell"){if(a.length<3)return"N/D";let e=a.slice(-6);if(e.length<3)return"N/D";let s=[];for(let l=1;l<e.length;l++){let p=e[l-1][t],h=e[l][t];if(p!==0){let I=Math.abs((h-p)/p)*100;s.push(I)}}if(s.length<3)return"N/D";let c=s.reduce((l,p)=>l+p,0)/s.length;return c>1?"Alta":c>=.5?"Media":"Baja"}function jo(a){if(a.length<10)return"Datos insuficientes";let e=a.slice(-30).map(I=>I.sell-I.buy),s=e[e.length-1],c=e.reduce((I,i)=>I+i,0)/e.length,p=e.map(I=>Math.pow(I-c,2)).reduce((I,i)=>I+i,0)/e.length,h=Math.sqrt(p);return h===0?"Spread estable":s>c+2*h?"Por encima del promedio 30d":s<c-2*h?"Por debajo del promedio 30d":"Dentro del rango normal"}async function ir(a=30,t=25e3){let e=new Date;e.setDate(e.getDate()-a);let s=["MONEX","Santander","DOF"],c={};for(let E of s){let g=await v.select({date:G.date,buy:G.buyRate,sell:G.sellRate}).from(G).where(sr(nr(G.source,E),or(G.date,e))).orderBy(G.date);c[E]=g.map(y=>({date:y.date,buy:y.buy,sell:y.sell}))}let l={},p=null;for(let E of s){let g=c[E];if(g.length>0){let y=g[g.length-1];l[E]={buy:y.buy,sell:y.sell},(!p||y.date>p)&&(p=y.date)}else l[E]=null}let h=Object.entries(l).filter(([E,g])=>g!==null),I={source:"N/D",rate:0},i={source:"N/D",rate:0};if(h.length>0){let E=h.map(([y,S])=>({source:y,rate:S.buy})),g=h.map(([y,S])=>({source:y,rate:S.sell}));I=E.reduce((y,S)=>S.rate<y.rate?S:y),i=g.reduce((y,S)=>S.rate>y.rate?S:y)}let n=l.DOF,r=n?.buy??0,o=n?.sell??0;if(!n&&h.length>0){let E=h.reduce((y,[S,P])=>y+P.buy,0)/h.length,g=h.reduce((y,[S,P])=>y+P.sell,0)/h.length;r=E,o=g}let d=r>0?(r-I.rate)*t:0,u=o>0?(i.rate-o)*t:0,m=s.map(E=>{let g=c[E],y=l[E];if(!y||g.length===0)return{source:E,buy:0,sell:0,spread:0,spread_status:"Sin datos",trend_7d:"N/D",trend_pct:0,volatility_5d:"N/D"};let S=y.sell-y.buy,P=ko(g),k=Oo(g),A=jo(g),_=(()=>{if(g.length<2)return 0;let C=g[g.length-1],R=new Date(C.date);R.setDate(R.getDate()-7);let X=null,Pe=1/0;for(let qe of g){let Kt=Math.abs(qe.date.getTime()-R.getTime());Kt<Pe&&(Pe=Kt,X=qe)}return!X||X===C?0:(C.sell-X.sell)/X.sell*100})();return{source:E,buy:y.buy,sell:y.sell,spread:parseFloat(S.toFixed(4)),spread_status:A,trend_7d:P,trend_pct:parseFloat(_.toFixed(2)),volatility_5d:k}});return{as_of:p?p.toISOString():new Date().toISOString(),rates:l,best_buy:I,best_sell:i,baseline:{source:n?"DOF":"Promedio",buy:parseFloat(r.toFixed(4)),sell:parseFloat(o.toFixed(4))},savings_calculator:{if_buy_at_best_vs_baseline:parseFloat(d.toFixed(2)),if_sell_at_best_vs_baseline:parseFloat(u.toFixed(2))},spreads_analysis:m}}Ue();import{Resend as Uo}from"resend";var ht=class{constructor(){this.resend=null;this.isConfigured=!1;this.initialize()}initialize(){let t=process.env.RESEND_API_KEY;if(!t||t==="your-resend-api-key-here"){he.warn("RESEND_API_KEY no est\xE1 configurada. Emails deshabilitados."),this.isConfigured=!1;return}try{this.resend=new Uo(t),this.isConfigured=!0,he.info("Email service inicializado con Resend")}catch(e){he.error("Error inicializando email service:",{error:e}),this.isConfigured=!1}}async sendEmail(t,e="treasury"){if(!this.isConfigured||!this.resend)return he.warn("Email service no configurado. Simulando env\xEDo..."),{success:!0,messageId:"simulated-"+Date.now(),error:"Email service no configurado - modo simulaci\xF3n"};let s=process.env.USE_RESEND_TEST_EMAIL==="true"||!process.env.CLIENT_DOMAIN,c;if(s||t.from?.includes("resend.dev"))c=t.from||"onboarding@resend.dev",he.info("Usando email de prueba de Resend:",c);else{let l=process.env.CLIENT_DOMAIN||"grupoorsega.com";c=e==="treasury"?`Lolita - Tesorer\xEDa <dolores@${l}>`:`Thalia - Log\xEDstica <thalia@${l}>`,t.from&&(c=t.from)}try{he.info("Enviando email desde:",c,"a:",t.to);let l=await this.resend.emails.send({from:c,to:t.to,subject:t.subject,html:t.html});return he.info("Email enviado exitosamente",{to:t.to,from:c,messageId:l.data?.id}),{success:!0,messageId:l.data?.id}}catch(l){let p=l?.message||(l instanceof Error?l.message:String(l)),h=l?.response?.body||l?.response?.data||{};return he.error("Error enviando email:",{error:p,details:h,to:t.to,from:c}),p?.toLowerCase().includes("domain")||p?.toLowerCase().includes("verify")||p?.toLowerCase().includes("unauthorized")?{success:!1,error:`Error de dominio: ${p}. Para pruebas, configura USE_RESEND_TEST_EMAIL=true en .env para usar onboarding@resend.dev`}:{success:!1,error:p}}}async sendPaymentReminder(t,e,s,c){let l=`Recordatorio de Pago - ${e}`,p=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #2563eb;">Recordatorio de Pago</h2>
        <p>Estimado/a ${e},</p>
        <p>Le recordamos que tiene un pago pendiente por procesar:</p>
        <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <p><strong>Monto:</strong> $${s.toLocaleString("es-MX")} MXN</p>
          <p><strong>Fecha l\xEDmite:</strong> ${c}</p>
        </div>
        <p>Por favor, proceda con el pago correspondiente.</p>
        <p>Saludos cordiales,<br><strong>Lolita</strong><br>Equipo de Tesorer\xEDa - Econova</p>
      </div>
    `;return this.sendEmail({to:t,subject:l,html:p},"treasury")}async sendComplementRequest(t,e,s){let c=`Solicitud de Complemento de Pago - ${e}`,l=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #dc2626;">Solicitud de Complemento de Pago</h2>
        <p>Estimado/a ${e},</p>
        <p>Se requiere complemento de pago para el comprobante:</p>
        <div style="background-color: #fef2f2; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #dc2626;">
          <p><strong>ID de Comprobante:</strong> ${s}</p>
          <p><strong>Estado:</strong> Pendiente de complemento</p>
        </div>
        <p>Por favor, proporcione la documentaci\xF3n adicional requerida.</p>
        <p>Saludos cordiales,<br><strong>Lolita</strong><br>Equipo de Tesorer\xEDa - Econova</p>
      </div>
    `;return this.sendEmail({to:t,subject:c,html:l},"treasury")}async sendPaymentConfirmation(t,e,s,c){let l=`Confirmaci\xF3n de Pago - ${e}`,p=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #059669;">Pago Confirmado</h2>
        <p>Estimado/a ${e},</p>
        <p>Su pago ha sido procesado exitosamente:</p>
        <div style="background-color: #f0fdf4; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #059669;">
          <p><strong>Monto:</strong> $${s.toLocaleString("es-MX")} MXN</p>
          <p><strong>Referencia:</strong> ${c}</p>
          <p><strong>Estado:</strong> Procesado</p>
        </div>
        <p>Gracias por su pago puntual.</p>
        <p>Saludos cordiales,<br>Equipo de Tesorer\xEDa</p>
      </div>
    `;return this.sendEmail({to:t,subject:l,html:p})}async sendShipmentUpdate(t,e,s,c,l){let p=`Actualizaci\xF3n de Env\xEDo - ${e}`,h=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #059669;">Actualizaci\xF3n de Env\xEDo</h2>
        <p>Estimado/a ${e},</p>
        <p>Le informamos sobre el estado actual de su env\xEDo:</p>
        <div style="background-color: #f0fdf4; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #059669;">
          <p><strong>ID de Env\xEDo:</strong> ${s}</p>
          <p><strong>Estado:</strong> ${c}</p>
          ${l?`<p><strong>N\xFAmero de Rastreo:</strong> ${l}</p>`:""}
        </div>
        <p>Gracias por confiar en nuestros servicios log\xEDsticos.</p>
        <p>Saludos cordiales,<br><strong>Thalia</strong><br>Equipo de Log\xEDstica - Econova</p>
      </div>
    `;return this.sendEmail({to:t,subject:p,html:h},"logistics")}async sendDeliveryNotification(t,e,s,c){let l=`Notificaci\xF3n de Entrega - ${e}`,p=`
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #2563eb;">Notificaci\xF3n de Entrega</h2>
        <p>Estimado/a ${e},</p>
        <p>Su paquete est\xE1 programado para entrega:</p>
        <div style="background-color: #eff6ff; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #2563eb;">
          <p><strong>Fecha de Entrega:</strong> ${s}</p>
          <p><strong>Horario:</strong> ${c}</p>
        </div>
        <p>Por favor, aseg\xFArese de que alguien est\xE9 disponible para recibir el paquete.</p>
        <p>Saludos cordiales,<br><strong>Thalia</strong><br>Equipo de Log\xEDstica - Econova</p>
      </div>
    `;return this.sendEmail({to:t,subject:l,html:p},"logistics")}isEmailConfigured(){return this.isConfigured}},dr=new ht;je();function Mo(){let a=new Date,t=a.getDate(),e=Math.ceil(t/7),c=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"][a.getMonth()],l=a.getFullYear(),p=`Semana ${e}`,h=`${p} - ${c} ${l}`;return{weekNumber:e,weekText:p,month:c,year:l,period:h}}async function ur(a){try{if(!a||!a.value||!a.companyId)throw new Error("Faltan datos obligatorios: value y companyId son requeridos");console.log("[UpdateWeeklySales] Iniciando actualizaci\xF3n con datos:",a);let t;a.adminOverride&&a.weekNumber&&a.month&&a.year?(t={weekNumber:parseInt(a.weekNumber.replace("Semana ","")),weekText:a.weekNumber,month:a.month,year:a.year,period:`${a.weekNumber} - ${a.month} ${a.year}`},console.log("[UpdateWeeklySales] Modo ADMINISTRADOR - Per\xEDodo manual:",t)):(t=Mo(),console.log("[UpdateWeeklySales] Modo NORMAL - Per\xEDodo autom\xE1tico:",t));let e=await b.getKpis(),s=a.companyId,c=e.find(R=>R.name.includes("Volumen de ventas")&&R.companyId===s);if(!c)throw new Error(`No se encontr\xF3 el KPI de volumen de ventas para la compa\xF1\xEDa ID: ${s}`);console.log(`[UpdateWeeklySales] Encontrado KPI: ${c.name} (ID: ${c.id})`);let h=!!(await b.getKpiValuesByKpi(c.id)).find(R=>R.period===t.period);console.log(`[UpdateWeeklySales] ${h?"Actualizando":"Creando"} registro para: ${t.period}`);let I=parseFloat(c.target.replace(/[^0-9.,]/g,"").replace(",","")),i=Math.round(I/12),n=Math.round(i/4);console.log(`[UpdateWeeklySales] Objetivos - Anual: ${I}, Mensual: ${i}, Semanal: ${n}`);let r=new Intl.NumberFormat("es-MX").format(a.value),o=s===1?"KG":"unidades",d=`${r} ${o}`,u=a.value/n*100,m=u>=95?"complies":u>=85?"alert":"not_compliant",E={kpiId:c.id,userId:a.userId||1,value:d,period:t.period,compliancePercentage:`${u.toFixed(1)}%`,status:m,comments:`${h?"Actualizaci\xF3n":"Registro"} semanal autom\xE1tico`,updatedBy:a.userId||1};console.log("[UpdateWeeklySales] Creando nuevo registro semanal");let g=await b.createKpiValue(E),S=(await b.getKpiValuesByKpi(c.id)).filter(R=>R.period.includes(t.month)&&R.period.includes(t.year.toString())&&R.period.includes("Semana")),P=0;S.forEach(R=>{let X=parseFloat(R.value.replace(/[^0-9.,]+/g,"").replace(",","."));isNaN(X)||(P+=X)});let k=new Intl.NumberFormat("es-MX").format(P);console.log(`[UpdateWeeklySales] Total mensual recalculado: ${k} ${o} (${S.length} semanas)`);let A=P/i*100,_=A>=95?"complies":A>=85?"alert":"not_compliant",C=`Total mensual: ${k} ${o} de ${S.length} semanas (${A.toFixed(1)}% del objetivo)`;return console.log(`[UpdateWeeklySales] M\xE9tricas mensuales - Compliance: ${A.toFixed(1)}%, Status: ${_}`),console.log("[UpdateWeeklySales] \u2705 Proceso completado exitosamente"),{success:!0,message:`${h?"Actualizaci\xF3n":"Registro"} semanal completado exitosamente`,weeklyRecord:g,currentPeriod:t,monthlyPreview:{totalValue:P,formattedValue:`${k} ${o}`,compliancePercentage:`${A.toFixed(1)}%`,status:_,weekCount:S.length,comment:C}}}catch(t){return console.error("[UpdateWeeklySales] \u274C Error al procesar actualizaci\xF3n:",t),{success:!1,message:t?.message||"Error desconocido al actualizar ventas semanales"}}}async function ft(a,t,e){try{let s=new Date,c=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],l=t||(s.getMonth()===0?"Diciembre":c[s.getMonth()-1]),p=e||(s.getMonth()===0?s.getFullYear()-1:s.getFullYear());console.log(`[AutoCloseMonth] Cerrando mes ${l} ${p} para empresa ${a}`);let I=(await b.getKpis()).find(S=>S.name.includes("Volumen de ventas")&&S.companyId===a);if(!I)return console.error(`[AutoCloseMonth] No se encontr\xF3 KPI de volumen de ventas para empresa ${a}`),!1;let n=(await b.getKpiValuesByKpi(I.id)).filter(S=>S.period.includes(l)&&S.period.includes(p.toString())&&S.period.includes("Semana"));if(n.length===0)return console.log(`[AutoCloseMonth] No hay registros semanales para ${l} ${p}`),!1;let r=0;n.forEach(S=>{let P=parseFloat(S.value.replace(/[^0-9.,]+/g,"").replace(",","."));isNaN(P)||(r+=P)});let o=parseFloat(I.target.replace(/[^0-9.,]+/g,"").replace(",","")),d=Math.round(o/12),u=r/d*100,m=u>=95?"complies":u>=85?"alert":"not_compliant",E=a===1?"KG":"unidades",g=new Intl.NumberFormat("es-MX").format(r),y={kpiId:I.id,userId:n[n.length-1]?.userId||1,value:`${g} ${E}`,period:`${l} ${p}`,compliancePercentage:`${u.toFixed(1)}%`,status:m,comments:`Cierre autom\xE1tico mensual - suma de ${n.length} semanas`,updatedBy:null};return await b.createKpiValue(y),console.log(`[AutoCloseMonth] \u2705 Mes ${l} ${p} cerrado - Total: ${g} ${E}`),!0}catch(s){return console.error("[AutoCloseMonth] \u274C Error al cerrar mes:",s),!1}}import pr from"@sendgrid/mail";process.env.SENDGRID_API_KEY?pr.setApiKey(process.env.SENDGRID_API_KEY):console.log("\u26A0\uFE0F SENDGRID_API_KEY not set - email functionality disabled");async function Et(a){try{return await pr.send({to:a.to,from:a.from,subject:a.subject,text:a.text,html:a.html}),console.log(`[Email] Correo enviado exitosamente a ${a.to}`),!0}catch(t){return console.error("[Email] Error al enviar correo:",t),!1}}function mr(a,t,e,s,c,l){let p=l==="urgent"?"#ef4444":l==="high"?"#f59e0b":l==="normal"?"#3b82f6":"#6b7280",h=c==="success"?"\u2705":c==="warning"?"\u26A0\uFE0F":c==="error"?"\u274C":"\u2139\uFE0F",I=`
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Mensaje del Equipo - Econova</title>
      <style>
        body {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
          line-height: 1.6;
          color: #333;
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
          background-color: #f8fafc;
        }
        .container {
          background: white;
          border-radius: 12px;
          padding: 30px;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          border: 1px solid #e2e8f0;
        }
        .header {
          text-align: center;
          margin-bottom: 30px;
          padding-bottom: 20px;
          border-bottom: 2px solid #273949;
        }
        .logo {
          font-size: 24px;
          font-weight: bold;
          color: #273949;
          margin-bottom: 10px;
        }
        .subtitle {
          color: #64748b;
          font-size: 14px;
        }
        .message-header {
          display: flex;
          align-items: center;
          margin-bottom: 20px;
          padding: 15px;
          background: #f1f5f9;
          border-radius: 8px;
          border-left: 4px solid ${p};
        }
        .message-icon {
          font-size: 24px;
          margin-right: 15px;
        }
        .message-info {
          flex: 1;
        }
        .message-title {
          font-size: 18px;
          font-weight: 600;
          color: #1e293b;
          margin-bottom: 5px;
        }
        .message-meta {
          font-size: 14px;
          color: #64748b;
        }
        .message-content {
          background: #fefefe;
          padding: 25px;
          border-radius: 8px;
          border: 1px solid #e2e8f0;
          margin: 20px 0;
          font-size: 16px;
          line-height: 1.7;
        }
        .sender-info {
          margin-top: 25px;
          padding-top: 20px;
          border-top: 1px solid #e2e8f0;
          text-align: center;
        }
        .sender-name {
          font-weight: 600;
          color: #273949;
          margin-bottom: 5px;
        }
        .company-info {
          color: #64748b;
          font-size: 14px;
        }
        .footer {
          margin-top: 30px;
          padding-top: 20px;
          border-top: 1px solid #e2e8f0;
          text-align: center;
          color: #64748b;
          font-size: 12px;
        }
        .priority-badge {
          display: inline-block;
          padding: 4px 8px;
          border-radius: 12px;
          font-size: 12px;
          font-weight: 500;
          background: ${p};
          color: white;
          margin-left: 10px;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <div class="logo">ECONOVA</div>
          <div class="subtitle">Sistema de Gesti\xF3n de KPIs</div>
        </div>
        
        <div class="message-header">
          <div class="message-icon">${h}</div>
          <div class="message-info">
            <div class="message-title">
              ${e}
              <span class="priority-badge">${l==="urgent"?"Urgente":l==="high"?"Alta":l==="normal"?"Normal":"Baja"}</span>
            </div>
            <div class="message-meta">Mensaje del equipo para ${t}</div>
          </div>
        </div>
        
        <div class="message-content">
          ${s.replace(/\n/g,"<br>")}
        </div>
        
        <div class="sender-info">
          <div class="sender-name">Enviado por: Mario Reynoso (Gerente General)</div>
          <div class="company-info">Econova - Dura International & Grupo Orsega</div>
        </div>
        
        <div class="footer">
          <p>Este mensaje fue enviado desde el sistema de gesti\xF3n de KPIs de Econova.</p>
          <p>Para responder, inicia sesi\xF3n en el sistema o contacta directamente al remitente.</p>
        </div>
      </div>
    </body>
    </html>
  `,i=`
ECONOVA - Sistema de Gesti\xF3n de KPIs

${h} ${e}
Prioridad: ${l==="urgent"?"Urgente":l==="high"?"Alta":l==="normal"?"Normal":"Baja"}

Para: ${t}
De: Mario Reynoso (Gerente General)

Mensaje:
${s}

---
Este mensaje fue enviado desde el sistema de gesti\xF3n de KPIs de Econova.
Para responder, inicia sesi\xF3n en el sistema o contacta directamente al remitente.
  `.trim();return{html:I,text:i}}import{MailService as Ko}from"@sendgrid/mail";process.env.SENDGRID_API_KEY?new Ko().setApiKey(process.env.SENDGRID_API_KEY):console.log("\u26A0\uFE0F SENDGRID_API_KEY not set - SendGrid functionality disabled");async function gr(a){try{let t={to:a.to,from:a.from,subject:a.subject};return a.text&&(t.text=a.text),a.html&&(t.html=a.html),a.attachments&&(t.attachments=a.attachments),await mailService.send(t),!0}catch(t){return console.error("SendGrid email error:",t),!1}}function yr(a,t){let e=`Comprobantes de Pago - ${a.supplier_name}`,s=t.map(p=>`<li>${p.file_name} (${p.file_type.toUpperCase()})</li>`).join(""),c=`
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #273949; color: white; padding: 20px; text-align: center; }
        .content { background: #f9f9f9; padding: 20px; }
        .details { background: white; padding: 15px; margin: 15px 0; border-radius: 4px; }
        .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>Comprobantes de Pago</h1>
        </div>
        <div class="content">
          <p>Estimado proveedor,</p>
          <p>Le enviamos los siguientes comprobantes de pago:</p>
          <div class="details">
            <p><strong>Proveedor:</strong> ${a.supplier_name}</p>
            <p><strong>Monto:</strong> ${a.currency} ${a.amount}</p>
            <p><strong>Referencia:</strong> ${a.reference||"N/A"}</p>
          </div>
          <p><strong>Archivos adjuntos:</strong></p>
          <ul>
            ${s}
          </ul>
          <p>Saludos cordiales,<br>Equipo de Tesorer\xEDa ECONOVA</p>
        </div>
        <div class="footer">
          <p>Este es un correo autom\xE1tico. No responder.</p>
        </div>
      </div>
    </body>
    </html>
  `,l=`Comprobantes de Pago

Proveedor: ${a.supplier_name}
Monto: ${a.currency} ${a.amount}
Referencia: ${a.reference||"N/A"}

Archivos adjuntos:
${t.map(p=>`- ${p.file_name}`).join(`
`)}

Saludos,
Equipo de Tesorer\xEDa ECONOVA`;return{subject:e,html:c,text:l}}import{Router as Go}from"express";import{randomUUID as Nr}from"node:crypto";import{z as Jo}from"zod";import{Pool as Lo}from"pg";var Me=process.env.DATABASE_URL;if(!Me)throw new Error("DATABASE_URL no est\xE1 definida");var Vo=Me.includes("sslmode=")?Me:Me+(Me.includes("?")?"&":"?")+"sslmode=require",Fo=new Lo({connectionString:Vo,ssl:{rejectUnauthorized:!1},idleTimeoutMillis:3e4,connectionTimeoutMillis:1e4,max:8});async function L(a,t){let e=await Fo.connect();try{return await e.query(a,t)}finally{e.release()}}import{z as j}from"zod";var le=()=>j.string().uuid(),vt=j.coerce.number().int().positive(),It=j.string().email().optional().or(j.literal("").transform(()=>{})),qo=j.enum(["pendiente","asignando_transporte","confirmado","en_camino","retenido","entregado","cerrado"]),Bo=j.enum(["pickup","customs","delay","delivery","note"]),hr=j.object({id:vt,name:j.string().min(2),rfc:j.string().optional(),email:It,billingAddr:j.string().optional(),shippingAddr:j.string().optional(),isActive:j.boolean().default(!0),companyId:vt.optional()}),fr=hr.omit({id:!0}),Er=hr.partial().extend({id:vt}),vr=j.object({id:le(),name:j.string().min(2),email:It,phone:j.string().optional(),contactName:j.string().optional(),notes:j.string().optional(),rating:j.number().min(0).max(5).optional(),isActive:j.boolean().default(!0)}),is=vr.omit({id:!0}),cs=vr.partial().extend({id:le()}),Ho=j.object({id:le(),providerId:le(),type:j.enum(["email","api","portal"]),value:j.string().min(3),isDefault:j.boolean().default(!1)}),Ir=Ho.omit({id:!0}),br=j.object({id:le(),reference:j.string().min(2),clientId:le(),providerId:le().optional(),origin:j.string().min(2),destination:j.string().min(2),incoterm:j.string().optional(),status:qo.default("pendiente"),etd:j.string().datetime().optional(),eta:j.string().datetime().optional()}),Sr=br.omit({id:!0,status:!0}).extend({notifyClient:j.boolean().default(!1),customerEmail:It}),Pr=br.partial().extend({id:le()}),Wo=j.object({id:le(),shipmentId:le(),type:Bo,at:j.string().datetime(),lat:j.number().optional(),lng:j.number().optional(),notes:j.string().optional()}),wr=Wo.omit({id:!0}),zo=j.object({id:le(),shipmentId:le(),kind:j.enum(["bl","factura","foto","otro"]),fileUrl:j.string().url(),uploadedAt:j.string().datetime().optional(),uploadedBy:j.string().optional()}),Tr=zo.omit({id:!0});ie();var te=Go();te.get("/clients",async(a,t)=>{try{console.log("\u{1F535} [GET /clients] Endpoint llamado");let e=await L(`
      SELECT c.id, c.code, c.name, c.contact, c.email, c.company_id, c.is_active, c.notes, c.created_at, c.updated_at,
             comp.name as company_name
      FROM clients c
      LEFT JOIN companies comp ON c.company_id = comp.id
      WHERE c.is_active = TRUE 
      ORDER BY c.name
    `);console.log(`\u{1F4CA} [GET /clients] Retornando ${e.rows.length} clientes`),e.rows.length>0&&console.log("\u{1F4CB} Primer cliente:",JSON.stringify(e.rows[0],null,2)),t.json(e.rows)}catch(e){console.error("\u274C Error fetching clients:",e),t.status(500).json({error:"Failed to fetch clients"})}});te.post("/clients",async(a,t)=>{try{console.log("\u{1F535} [POST /clients] Creando nuevo cliente"),console.log("\u{1F4E5} Request body:",JSON.stringify(a.body,null,2));let{phone:e,...s}=a.body,c=fr.parse(s);console.log("\u2705 Validated data:",JSON.stringify(c,null,2));let l=c.billingAddr||c.shippingAddr||null,p=a.body.companyId;if(!p)return t.status(400).json({error:"companyId es requerido"});let h=parseInt(p),I=await L(`
      INSERT INTO clients (name, email, is_active, company_id)
      VALUES ($1, $2, $3, $4)
      RETURNING *
    `,[c.name,c.email||null,c.isActive??!0,h]);console.log(`\u2705 [POST /clients] Cliente creado: ${I.rows[0].name}`),t.status(201).json(I.rows[0])}catch(e){if(console.error("\u274C Error creating client:",e),console.error("\u274C Error details:",e instanceof Error?e.message:String(e)),e?.code&&(console.error("\u274C Database error code:",e.code),console.error("\u274C Database error detail:",e.detail)),e instanceof Jo.ZodError)return console.error("\u274C Validation errors:",JSON.stringify(e.errors,null,2)),t.status(400).json({error:"Validation failed",details:e.errors});t.status(400).json({error:"Failed to create client",message:e instanceof Error?e.message:String(e),details:e?.detail||void 0})}});te.patch("/clients/:id",async(a,t)=>{try{console.log(`\u{1F535} [PATCH /clients/${a.params.id}] Actualizando cliente`);let{phone:e,billingAddr:s,shippingAddr:c,...l}=a.body,p={...l,id:parseInt(a.params.id)};p.companyId!==void 0&&(p.companyId=parseInt(p.companyId));let h=Er.parse(p),I=s||c||void 0,i=[],n=[],r=1,o={name:"name",email:"email",isActive:"is_active",companyId:"company_id",contactPerson:"contact_person",paymentTerms:"payment_terms",requiresReceipt:"requires_receipt",reminderFrequency:"reminder_frequency",clientCode:"client_code",secondaryEmail:"secondary_email",postalCode:"postal_code",emailNotifications:"email_notifications",customerType:"customer_type",requiresPaymentComplement:"requires_payment_complement",notes:"notes"};if(Object.entries(h).forEach(([u,m])=>{if(u!=="id"&&m!==void 0){let E=o[u];if(!E)return;i.push(`${E} = $${r}`),n.push(m),r++}}),i.length===0)return t.status(400).json({error:"No fields to update"});n.push(parseInt(a.params.id));let d=await L(`
      UPDATE clients SET ${i.join(", ")}, updated_at = NOW()
      WHERE id = $${r}
      RETURNING *
    `,n);if(d.rows.length===0)return t.status(404).json({error:"Client not found"});console.log(`\u2705 [PATCH /clients/${a.params.id}] Cliente actualizado: ${d.rows[0].name}`),t.json(d.rows[0])}catch(e){console.error("\u274C Error updating client:",e),t.status(400).json({error:"Failed to update client",message:e instanceof Error?e.message:String(e),details:e?.detail||void 0})}});te.delete("/clients/:id",async(a,t)=>{try{console.log(`\u{1F535} [DELETE /clients/${a.params.id}] Eliminando cliente`);let e=await L(`
      UPDATE clients SET is_active = FALSE, updated_at = NOW()
      WHERE id = $1
      RETURNING *
    `,[a.params.id]);if(e.rows.length===0)return t.status(404).json({error:"Client not found"});console.log(`\u2705 [DELETE /clients/${a.params.id}] Cliente eliminado: ${e.rows[0].name}`),t.json({message:"Client deleted successfully",client:e.rows[0]})}catch(e){console.error("\u274C Error deleting client:",e),t.status(500).json({error:"Failed to delete client"})}});te.get("/providers",async(a,t)=>{try{console.log("\u{1F535} [GET /providers] Endpoint llamado");let e=await L(`
      SELECT * FROM provider 
      WHERE is_active = TRUE
      ORDER BY name
    `);console.log(`\u{1F4CA} [GET /providers] Retornando ${e.rows.length} proveedores`),e.rows.length>0&&console.log("\u{1F4CB} Primer proveedor:",JSON.stringify(e.rows[0],null,2)),t.json(e.rows)}catch(e){console.error("\u274C Error fetching providers:",e),t.status(500).json({error:"Failed to fetch providers"})}});te.post("/providers",async(a,t)=>{try{let{name:e,email:s,phone:c,contactName:l,notes:p,rating:h,isActive:I,shortName:i,companyId:n,location:r,requiresRep:o,repFrequency:d,reminderEmail:u}=a.body,m=Nr(),E=await L(`
      INSERT INTO provider (id, name, email, phone, contact_name, notes, rating, is_active, short_name, company_id, location, requires_rep, rep_frequency, reminder_email)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
      RETURNING *
    `,[m,e,s,c||null,l||null,p||null,h||null,I??!0,i||null,n||null,r||null,o??!0,d||7,u||null]);t.status(201).json(E.rows[0])}catch(e){console.error("Error creating provider:",e),t.status(400).json({error:"Failed to create provider"})}});te.patch("/providers/:id",async(a,t)=>{try{let{name:e,email:s,phone:c,contactName:l,notes:p,rating:h,isActive:I,shortName:i,companyId:n,location:r,requiresRep:o,repFrequency:d,reminderEmail:u}=a.body,m=[],E=[],g=1,y={name:"name",email:"email",phone:"phone",contactName:"contact_name",shortName:"short_name",companyId:"company_id",location:"location",requiresRep:"requires_rep",repFrequency:"rep_frequency",reminderEmail:"reminder_email",notes:"notes",rating:"rating",isActive:"is_active"};if(Object.entries({name:e,email:s,phone:c,contactName:l,shortName:i,companyId:n,location:r,requiresRep:o,repFrequency:d,reminderEmail:u,notes:p,rating:h,isActive:I}).forEach(([P,k])=>{if(k!==void 0){let A=y[P]||P;m.push(`${A} = $${g}`),E.push(k),g++}}),m.length===0)return t.status(400).json({error:"No fields to update"});E.push(a.params.id);let S=await L(`
      UPDATE provider SET ${m.join(", ")}, updated_at = NOW()
      WHERE id = $${g}
      RETURNING *
    `,E);if(S.rows.length===0)return t.status(404).json({error:"Provider not found"});t.json(S.rows[0])}catch(e){console.error("Error updating provider:",e),t.status(400).json({error:"Failed to update provider"})}});te.delete("/providers/:id",async(a,t)=>{try{let e=await L(`
      UPDATE provider SET is_active = FALSE, updated_at = NOW()
      WHERE id = $1
      RETURNING *
    `,[a.params.id]);if(e.rows.length===0)return t.status(404).json({error:"Provider not found"});t.json({message:"Provider deleted successfully",provider:e.rows[0]})}catch(e){console.error("Error deleting provider:",e),t.status(500).json({error:"Failed to delete provider"})}});te.post("/providers/:id/channels",async(a,t)=>{try{let e=Ir.parse({...a.body,providerId:a.params.id}),s=Nr(),c=await L(`
      INSERT INTO provider_channel (id, provider_id, type, value, is_default)
      VALUES ($1, $2, $3, $4, $5)
      RETURNING *
    `,[s,e.providerId,e.type,e.value,e.isDefault]);t.status(201).json(c.rows[0])}catch(e){console.error("Error creating provider channel:",e),t.status(400).json({error:"Failed to create provider channel"})}});te.get("/suppliers",async(a,t)=>{try{console.log("\u{1F535} [GET /suppliers] Endpoint llamado");let e=await L(`
      SELECT s.*, c.name as company_name
      FROM suppliers s
      LEFT JOIN companies c ON s.company_id = c.id
      ORDER BY s.company_id, s.name
    `);console.log(`\u{1F4CA} [GET /suppliers] Retornando ${e.rows.length} proveedores de tesorer\xEDa`),t.json(e.rows)}catch(e){console.error("\u274C Error fetching suppliers:",e),t.status(500).json({error:"Failed to fetch suppliers"})}});te.post("/suppliers",async(a,t)=>{try{console.log("\u{1F535} [POST /suppliers] Creando nuevo proveedor de tesorer\xEDa");let e=We.parse(a.body),s=await L(`
      INSERT INTO suppliers (
        name, short_name, email, location, requires_rep, 
        rep_frequency, company_id, is_active, notes
      ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
      RETURNING *
    `,[e.name,e.shortName,e.email,e.location,e.requiresRep,e.repFrequency,e.companyId,e.isActive,e.notes]);console.log(`\u2705 [POST /suppliers] Proveedor creado: ${s.rows[0].name}`),t.status(201).json(s.rows[0])}catch(e){console.error("\u274C Error creating supplier:",e),t.status(400).json({error:"Failed to create supplier"})}});te.patch("/suppliers/:id",async(a,t)=>{try{let{id:e}=a.params;console.log(`\u{1F535} [PATCH /suppliers/${e}] Actualizando proveedor`);let s=We.partial().parse(a.body),c=await L(`
      UPDATE suppliers 
      SET 
        name = COALESCE($1, name),
        short_name = COALESCE($2, short_name),
        email = COALESCE($3, email),
        location = COALESCE($4, location),
        requires_rep = COALESCE($5, requires_rep),
        rep_frequency = COALESCE($6, rep_frequency),
        company_id = COALESCE($7, company_id),
        is_active = COALESCE($8, is_active),
        notes = COALESCE($9, notes),
        updated_at = NOW()
      WHERE id = $10
      RETURNING *
    `,[s.name,s.shortName,s.email,s.location,s.requiresRep,s.repFrequency,s.companyId,s.isActive,s.notes,e]);if(c.rows.length===0)return t.status(404).json({error:"Supplier not found"});console.log(`\u2705 [PATCH /suppliers/${e}] Proveedor actualizado: ${c.rows[0].name}`),t.json(c.rows[0])}catch(e){console.error("\u274C Error updating supplier:",e),t.status(400).json({error:"Failed to update supplier"})}});te.delete("/suppliers/:id",async(a,t)=>{try{let{id:e}=a.params;console.log(`\u{1F535} [DELETE /suppliers/${e}] Eliminando proveedor`);let s=await L(`
      DELETE FROM suppliers 
      WHERE id = $1
      RETURNING name
    `,[e]);if(s.rows.length===0)return t.status(404).json({error:"Supplier not found"});console.log(`\u2705 [DELETE /suppliers/${e}] Proveedor eliminado: ${s.rows[0].name}`),t.json({message:"Supplier deleted successfully"})}catch(e){console.error("\u274C Error deleting supplier:",e),t.status(500).json({error:"Failed to delete supplier"})}});import{Router as Qo}from"express";import{randomUUID as ve}from"node:crypto";import{z as Zo}from"zod";Pt();var me=Qo();me.get("/shipments",async(a,t)=>{try{let{status:e,q:s,clientId:c,providerId:l,page:p="1",limit:h="20"}=a.query,I="1=1",i=[],n=1;e&&(I+=` AND s.status = $${n}`,i.push(e),n++),c&&(I+=` AND s.client_id = $${n}`,i.push(c),n++),l&&(I+=` AND s.provider_id = $${n}`,i.push(l),n++),s&&(I+=` AND (s.reference ILIKE $${n} OR s.origin ILIKE $${n} OR s.destination ILIKE $${n})`,i.push(`%${s}%`),n++);let r=(parseInt(p)-1)*parseInt(h);i.push(parseInt(h),r);let o=await L(`
      SELECT s.*,
        c.name as client_name,
        c.email as client_email,
        p.name as provider_name,
        p.email as provider_email
      FROM shipment s
      LEFT JOIN client c ON s.client_id = c.id
      LEFT JOIN provider p ON s.provider_id = p.id
      WHERE ${I}
      ORDER BY s.created_at DESC
      LIMIT $${n} OFFSET $${n+1}
    `,i);t.json(o.rows)}catch(e){console.error("Error fetching shipments:",e),t.status(500).json({error:"Failed to fetch shipments"})}});me.get("/shipments/:id",async(a,t)=>{try{let e=await L(`
      SELECT s.*,
        c.name as client_name, c.email as client_email,
        p.name as provider_name, p.email as provider_email
      FROM shipment s
      LEFT JOIN client c ON s.client_id = c.id
      LEFT JOIN provider p ON s.provider_id = p.id
      WHERE s.id = $1
    `,[a.params.id]);if(e.rows.length===0)return t.status(404).json({error:"Shipment not found"});let s=await L(`
      SELECT * FROM shipment_event 
      WHERE shipment_id = $1 
      ORDER BY at DESC
    `,[a.params.id]),c=await L(`
      SELECT * FROM shipment_doc 
      WHERE shipment_id = $1 
      ORDER BY uploaded_at DESC
    `,[a.params.id]),l=e.rows[0];l.events=s.rows,l.documents=c.rows,t.json(l)}catch(e){console.error("Error fetching shipment:",e),t.status(500).json({error:"Failed to fetch shipment"})}});me.post("/shipments",async(a,t)=>{try{console.log("[POST /api/shipments (logistics)] Datos recibidos:",JSON.stringify(a.body,null,2));let e=Sr.parse(a.body);console.log("[POST /api/shipments (logistics)] Datos validados:",JSON.stringify(e,null,2));let s=ve(),c=await L(`
      INSERT INTO shipment (id, reference, client_id, provider_id, origin, destination, incoterm, etd, eta)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
      RETURNING *
    `,[s,e.reference,e.clientId,e.providerId,e.origin,e.destination,e.incoterm,e.etd,e.eta]);console.log("[POST /api/shipments (logistics)] Env\xEDo creado exitosamente"),t.status(201).json(c.rows[0])}catch(e){if(console.error("[POST /api/shipments (logistics)] Error completo:",e),e instanceof Zo.ZodError)return console.error("[POST /api/shipments (logistics)] Errores de validaci\xF3n:",JSON.stringify(e.errors,null,2)),t.status(400).json({error:"Failed to create shipment",message:"Validation error",details:e.errors});console.error("[POST /api/shipments (logistics)] Error desconocido:",e),t.status(400).json({error:"Failed to create shipment",details:e.message})}});me.patch("/shipments/:id",async(a,t)=>{try{let e=Pr.parse({...a.body,id:a.params.id}),s=[],c=[],l=1;if(Object.entries(e).forEach(([h,I])=>{if(h!=="id"&&I!==void 0){let i=h==="clientId"?"client_id":h==="providerId"?"provider_id":h;s.push(`${i} = $${l}`),c.push(I),l++}}),s.length===0)return t.status(400).json({error:"No fields to update"});c.push(a.params.id);let p=await L(`
      UPDATE shipment SET ${s.join(", ")}, updated_at = NOW()
      WHERE id = $${l}
      RETURNING *
    `,c);if(p.rows.length===0)return t.status(404).json({error:"Shipment not found"});t.json(p.rows[0])}catch(e){console.error("Error updating shipment:",e),t.status(400).json({error:"Failed to update shipment"})}});me.post("/shipments/:id/events",async(a,t)=>{try{let e=wr.parse({...a.body,shipmentId:a.params.id}),s=ve(),c=await L(`
      INSERT INTO shipment_event (id, shipment_id, type, at, lat, lng, notes, created_by)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
      RETURNING *
    `,[s,e.shipmentId,e.type,e.at,e.lat,e.lng,e.notes,"system"]);t.status(201).json(c.rows[0])}catch(e){console.error("Error creating shipment event:",e),t.status(400).json({error:"Failed to create shipment event"})}});me.post("/shipments/:id/docs",async(a,t)=>{try{let e=Tr.parse({...a.body,shipmentId:a.params.id}),s=ve(),c=await L(`
      INSERT INTO shipment_doc (id, shipment_id, kind, file_url, uploaded_by)
      VALUES ($1, $2, $3, $4, $5)
      RETURNING *
    `,[s,e.shipmentId,e.kind,e.fileUrl,e.uploadedBy]);t.status(201).json(c.rows[0])}catch(e){console.error("Error creating shipment document:",e),t.status(400).json({error:"Failed to create shipment document"})}});me.post("/shipments/:id/request-transport",async(a,t)=>{try{let{providerId:e,pickupWindow:s,notes:c}=a.body,l=a.params.id;await L(`
      UPDATE shipment 
      SET status = 'asignando_transporte', provider_id = $1, updated_at = NOW()
      WHERE id = $2
    `,[e,l]);let p=await L(`
      SELECT s.*, c.name as client_name, p.name as provider_name, p.email as provider_email
      FROM shipment s
      JOIN client c ON s.client_id = c.id
      JOIN provider p ON s.provider_id = p.id
      WHERE s.id = $1
    `,[l]);if(p.rows.length===0)return t.status(404).json({error:"Shipment not found"});let h=p.rows[0],I=ve(),i=ve();try{await St({to:h.provider_email,shipment:h,confirmToken:I,rejectToken:i,pickupWindow:s,notes:c}),await L(`
        INSERT INTO shipment_event (id, shipment_id, type, at, notes, created_by)
        VALUES ($1, $2, 'note', NOW(), $3, 'system')
      `,[ve(),l,`Solicitud de transporte enviada a ${h.provider_name}`]),t.json({success:!0,message:"Transport request sent successfully"})}catch(n){console.error("Error sending email:",n),t.status(500).json({error:"Failed to send transport request"})}}catch(e){console.error("Error requesting transport:",e),t.status(500).json({error:"Failed to request transport"})}});me.post("/shipments/:id/confirm",async(a,t)=>{try{let{token:e,pickupAt:s}=a.query,c=a.params.id;if(!e)return t.status(400).json({error:"Invalid token"});await L(`
      UPDATE shipment 
      SET status = 'confirmado', updated_at = NOW()
      WHERE id = $1
    `,[c]),await L(`
      INSERT INTO shipment_event (id, shipment_id, type, at, notes, created_by)
      VALUES ($1, $2, 'pickup', $3, 'Transporte confirmado por proveedor', 'provider')
    `,[ve(),c,s||new Date().toISOString()]),t.json({success:!0,message:"Transport confirmed successfully"})}catch(e){console.error("Error confirming transport:",e),t.status(500).json({error:"Failed to confirm transport"})}});me.post("/shipments/:id/reject",async(a,t)=>{try{let{token:e,reason:s}=a.query,c=a.params.id;if(!e)return t.status(400).json({error:"Invalid token"});await L(`
      UPDATE shipment 
      SET status = 'pendiente', provider_id = NULL, updated_at = NOW()
      WHERE id = $1
    `,[c]),await L(`
      INSERT INTO shipment_event (id, shipment_id, type, at, notes, created_by)
      VALUES ($1, $2, 'note', NOW(), $3, 'provider')
    `,[ve(),c,`Transporte rechazado: ${s||"Sin raz\xF3n especificada"}`]),t.json({success:!0,message:"Transport rejected"})}catch(e){console.error("Error rejecting transport:",e),t.status(500).json({error:"Failed to reject transport"})}});import $e from"path";import Ie from"fs";import{neon as fe}from"@neondatabase/serverless";import Ce from"multer";function W(a){if(!a.user)throw new Error("Unauthorized");return a.user}var la=fe(process.env.DATABASE_URL);function Te(a){if(!a)return a;let{password:t,...e}=a;return e}function cn(a){return a.map(Te)}function Ne(a){if(!a||typeof a!="object")return a;let t=["password","token","authorization","apiKey","secret","jwt"],e=Array.isArray(a)?[]:{};for(let[s,c]of Object.entries(a))t.some(l=>s.toLowerCase().includes(l))?e[s]="[REDACTED]":typeof c=="object"&&c!==null?e[s]=Ne(c):e[s]=c;return e}function Rt(a){if(typeof a=="number")return a;if(typeof a!="string")return NaN;let t=a.replace(/[^0-9.-]/g,"");return parseFloat(t)}function ln(a){let t=["rotaci\xF3n de cuentas por cobrar","velocidad de rotaci\xF3n","tiempo de","d\xEDas de","plazo de","demora"],e=a.toLowerCase();return t.some(s=>e.includes(s)&&!e.includes("entrega"))}async function dn(a,t,e,s,c){try{if([{from:"complies",to:"not_compliant"},{from:"alert",to:"not_compliant"},{from:"not_compliant",to:"complies"}].some(h=>h.from===e&&h.to===s)){let h={complies:"En cumplimiento",alert:"En alerta",not_compliant:"No cumple"},I={userId:t.id,title:`Cambio de estado en KPI: ${a.name}`,message:`El KPI "${a.name}" ha cambiado de "${h[e]}" a "${h[s]}"`,type:s==="complies"?"success":"warning",isRead:!1};await c.createNotification(I),console.log(`[KPI Notification] Notificaci\xF3n creada para cambio de estado: ${a.name}`)}}catch(l){console.error("Error creating KPI status change notification:",l)}}function Kr(a){let t=a.listen;a.use("/api",te),a.use("/api/logistics-legacy",me);let e=At({windowMs:15*60*1e3,max:5,message:"Demasiados intentos de login. Por favor, intenta de nuevo en 15 minutos.",standardHeaders:!0,legacyHeaders:!1}),s=At({windowMs:60*60*1e3,max:3,message:"Demasiados intentos de registro. Por favor, intenta m\xE1s tarde.",standardHeaders:!0,legacyHeaders:!1}),c=At({windowMs:60*60*1e3,max:20,message:"L\xEDmite de uploads alcanzado. Por favor, intenta en 1 hora.",standardHeaders:!0,legacyHeaders:!1});a.get("/env-check",w,Ae,(i,n)=>{let r=process.env.NODE_ENV||"undefined",o=a.get("env"),d={cwd:process.cwd(),script_dir:import.meta.dirname,dist_index:$e.resolve(import.meta.dirname,"index.js"),dist_public:$e.resolve(import.meta.dirname,"public"),dist_public_index:$e.resolve(import.meta.dirname,"public","index.html")},u={dist_index_exists:!1,dist_public_exists:!1,dist_public_index_exists:!1};try{u.dist_index_exists=Ie.existsSync(d.dist_index),u.dist_public_exists=Ie.existsSync(d.dist_public),u.dist_public_index_exists=Ie.existsSync(d.dist_public_index)}catch{}let m=["DATABASE_URL","JWT_SECRET","SENDGRID_API_KEY","REPL_ID","REPL_SLUG"],E={};m.forEach(y=>{let S=!!process.env[y],P=process.env[y]?.length||0;E[y]={exists:S,length:S?P:0,status:S?"SET":"MISSING"}});let g={timestamp:new Date().toISOString(),environment:{NODE_ENV:r,express_env:o,is_production:o==="production"},paths:d,file_checks:u,env_variables:E,critical_issues:[]};E.JWT_SECRET?.exists||g.critical_issues.push("JWT_SECRET missing - auth will fail"),o==="production"&&!u.dist_public_index_exists&&g.critical_issues.push("dist/public/index.html missing in production"),n.json(g)}),a.get("/api/healthz",w,Ae,(i,n)=>{n.json({status:"ok",environment:process.env.NODE_ENV,timestamp:new Date().toISOString()})}),a.post("/api/admin/seed-clients",w,Ae,async(i,n)=>{try{let{seedClients:r}=await Promise.resolve().then(()=>(Rr(),Ar)),o=await r();n.json(o)}catch(r){console.error("[Admin] Error seeding clients:",r),n.status(500).json({success:!1,message:"Error seeding clients",error:r instanceof Error?r.message:String(r)})}}),a.post("/api/treasury/send-reminder",w,async(i,n)=>{try{let{voucherId:r,clientId:o}=i.body;if(!r||!o)return n.status(400).json({error:"voucherId y clientId son requeridos"});let{TreasuryAutomation:d}=await Promise.resolve().then(()=>(Ye(),Je)),u=await d.sendComplementReminder(r,o);u.success?n.json({success:!0,message:u.message}):n.status(400).json({error:u.message})}catch(r){console.error("[Treasury] Error sending reminder:",r),n.status(500).json({error:"Error interno del servidor"})}}),a.post("/api/treasury/resend-receipt",w,async(i,n)=>{try{let{voucherId:r,clientId:o,companyId:d}=i.body;if(!r||!o||!d)return n.status(400).json({error:"voucherId, clientId y companyId son requeridos"});let{TreasuryAutomation:u}=await Promise.resolve().then(()=>(Ye(),Je)),m=await u.sendPaymentReceiptToSupplier(r,o,d);m.success?n.json({success:!0,message:m.message}):n.status(400).json({error:m.message})}catch(r){console.error("[Treasury] Error resending receipt:",r),n.status(500).json({error:"Error interno del servidor"})}}),a.get("/api/spa-check",w,Ae,(i,n)=>{let r=$e.resolve(import.meta.dirname,"public","index.html"),o=Ie.existsSync(r);n.json({spaFallback:o?"OK":"FAIL",indexPath:r,exists:o})}),a.post("/api/login",e,async(i,n)=>{try{let{username:r,password:o}=i.body;if(!r||!o)return n.status(400).json({message:"Username and password are required"});let d=await rr(r,o);if(!d)return n.status(401).json({message:"Invalid username or password"});n.json(d)}catch(r){console.error("[POST /api/login] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.get("/api/user",w,async(i,n)=>{try{let r=W(i);n.json(r)}catch(r){console.error("Error getting user:",r),n.status(500).json({error:"Error interno del servidor"})}}),a.post("/api/admin/reset-user-password",w,Ae,async(i,n)=>{try{let{email:r,password:o}=i.body||{};if(!r||!o)return n.status(400).json({message:"email y password son requeridos"});let d=await b.getUserByEmail(r);if(!d)return n.status(404).json({message:"Usuario no encontrado"});let u=await Ke(o,10);if(!await b.updateUser(d.id,{password:u}))return n.status(500).json({message:"No fue posible actualizar la contrase\xF1a"});n.json({success:!0,userId:d.id})}catch(r){console.error("[POST /api/admin/reset-user-password] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.post("/api/register",s,async(i,n)=>{try{console.log("[POST /api/register] Datos recibidos:",JSON.stringify(Ne(i.body),null,2));let{area:r,...o}=i.body,d=o.companyId!=null?Number(o.companyId):void 0,u=null;r&&d&&(u={Sales:{1:1,2:4},Logistics:{1:2,2:5},Purchasing:{1:7,2:10},Accounting:{1:3,2:6}}[r]?.[d]||null,console.log(`[POST /api/register] \xC1rea mapeada: ${r} + Company ${d} = areaId ${u}`));let m=_e.safeParse({...o,companyId:d,areaId:u,email:o.email?.toLowerCase()});if(!m.success)return console.log("[POST /api/register] Error de validaci\xF3n:",m.error.issues),n.status(400).json({message:"Error de validaci\xF3n",code:"VALIDATION_ERROR",errors:m.error.issues});let E=m.data;console.log("[POST /api/register] Datos validados:",JSON.stringify(Ne(E),null,2));try{if(await b.getUserByUsername(E.email))return n.status(409).json({message:"El email ya est\xE1 registrado"})}catch{console.log("[POST /api/register] Email disponible")}if(!E.password)return n.status(400).json({message:"La contrase\xF1a es obligatoria"});E.password=await Ke(E.password,10),E.role||(E.role="collaborator"),console.log("[POST /api/register] Datos despu\xE9s del hash:",JSON.stringify({...E,password:"[HASHED]"},null,2));let g=await b.createUser(E);console.log("[POST /api/register] Usuario registrado exitosamente:",Te(g)),n.status(201).json({message:"Usuario registrado exitosamente",user:Te(g)})}catch(r){if(console.error("[POST /api/register] Error completo:",r),r instanceof Error&&(console.error("[POST /api/register] Stack trace:",r.stack),r.message.includes("duplicate key")||r.message.includes("unique constraint")))return n.status(409).json({message:"El email ya est\xE1 registrado",code:"EMAIL_EXISTS"});if(r instanceof M.ZodError)return console.error("[POST /api/register] Errores de validaci\xF3n:",r.errors),n.status(400).json({message:"Error de validaci\xF3n",code:"VALIDATION_ERROR",errors:r.errors});n.status(500).json({message:"Error interno del servidor",code:"INTERNAL_ERROR",details:r instanceof Error?r.message:"Unknown error"})}}),a.get("/api/user",w,async(i,n)=>{try{let r=i.user,o=await b.getUser(r.id);if(!o)return n.status(404).json({message:"User not found"});let{password:d,...u}=o;n.json(u)}catch{n.status(500).json({message:"Internal server error"})}}),a.get("/api/users",w,async(i,n)=>{try{let r=await b.getUsers();n.json(cn(r))}catch{n.status(500).json({message:"Internal server error"})}}),a.post("/api/users",w,async(i,n)=>{try{console.log("[POST /api/users] Datos recibidos:",JSON.stringify(Ne(i.body),null,2));let r=_e.parse(i.body);console.log("[POST /api/users] Datos validados:",JSON.stringify(Ne(r),null,2)),r.password&&(r.password=await Ke(r.password,10)),console.log("[POST /api/users] Datos despu\xE9s del hash:",JSON.stringify({...r,password:"[HASHED]"},null,2));let o=await b.createUser(r);console.log("[POST /api/users] Usuario creado:",o),n.status(201).json(Te(o))}catch(r){if(console.error("[POST /api/users] Error completo:",r),r instanceof Error&&console.error("[POST /api/users] Stack trace:",r.stack),r instanceof M.ZodError)return console.error("[POST /api/users] Errores de validaci\xF3n:",r.errors),n.status(400).json({message:"Validation error",errors:r.errors});n.status(500).json({message:"Internal server error",details:r instanceof Error?r.message:"Unknown error"})}}),a.put("/api/users/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id);console.log("[PUT /api/users/:id] Datos recibidos:",Ne(i.body));let o=_e.partial().parse(i.body);o.password&&(o.password=await Ke(o.password,10)),console.log("[PUT /api/users/:id] Datos validados:",Ne(o));let d=await b.updateUser(r,o);if(!d)return n.status(404).json({message:"User not found"});console.log("[PUT /api/users/:id] Usuario actualizado:",d),n.json(Te(d))}catch(r){if(console.error("[PUT /api/users/:id] Error:",r),r instanceof M.ZodError)return n.status(400).json({message:"Validation error",errors:r.errors});n.status(500).json({message:"Internal server error"})}}),a.delete("/api/users/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id);if(!await b.deleteUser(r))return n.status(404).json({message:"User not found"});n.json({message:"User deleted successfully"})}catch{n.status(500).json({message:"Internal server error"})}}),a.get("/api/companies",w,async(i,n)=>{try{let r=await b.getCompanies();n.json(r)}catch{n.status(500).json({message:"Internal server error"})}}),a.get("/api/companies/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.getCompany(r);if(!o)return n.status(404).json({message:"Company not found"});console.log(`[GET /api/companies/:id] Buscando empresa con ID: ${r}`),console.log(`[GET /api/companies/:id] Empresa encontrada: ${o?"S\xED":"No"}`),console.log(`[GET /api/companies/:id] Enviando empresa: { id: ${o.id}, name: '${o.name}' }`),n.json(o)}catch{n.status(500).json({message:"Internal server error"})}}),a.post("/api/companies",w,async(i,n)=>{try{let r=nt.parse(i.body),o=await b.createCompany(r);n.status(201).json(o)}catch(r){if(r instanceof M.ZodError)return n.status(400).json({message:r.errors});n.status(500).json({message:"Internal server error"})}}),a.get("/api/areas",w,async(i,n)=>{try{if(i.query.companyId&&i.query.companyId!=="undefined"&&i.query.companyId!=="null"){let r=parseInt(i.query.companyId);if(!isNaN(r)&&r>0){let o=await b.getAreasByCompany(r);n.json(o)}else{console.warn(`Invalid companyId received: ${i.query.companyId}`);let o=await b.getAreas();n.json(o)}}else{let r=await b.getAreas();n.json(r)}}catch(r){console.error("Error getting areas:",r),n.status(500).json({message:"Internal server error"})}}),a.get("/api/areas/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.getArea(r);if(!o)return n.status(404).json({message:"Area not found"});n.json(o)}catch{n.status(500).json({message:"Internal server error"})}}),a.post("/api/areas",w,async(i,n)=>{try{let r=st.parse(i.body),o=await b.createArea(r);n.status(201).json(o)}catch(r){if(r instanceof M.ZodError)return n.status(400).json({message:r.errors});n.status(500).json({message:"Internal server error"})}}),a.get("/api/kpis",w,async(i,n)=>{try{let r=W(i),o=i.query.companyId?parseInt(i.query.companyId):null;console.log("\u{1F535} [GET /api/kpis] Endpoint llamado"),console.log(`\u{1F4CA} Usuario: ${r.name}, Company ID: ${o}`);let d=fe(process.env.DATABASE_URL),u=[];if(o===1)u=await d(`
          SELECT 
            id,
            area,
            kpi_name as "kpiName",
            description,
            calculation_method as "calculationMethod",
            goal,
            unit,
            frequency,
            source,
            responsible,
            period,
            created_at as "createdAt",
            'Dura' as "company"
          FROM kpis_dura 
          ORDER BY area, kpi_name
        `);else if(o===2)u=await d(`
          SELECT 
            id,
            area,
            kpi_name as "kpiName",
            description,
            calculation_method as "calculationMethod",
            goal,
            unit,
            frequency,
            source,
            responsible,
            period,
            created_at as "createdAt",
            'Orsega' as "company"
          FROM kpis_orsega 
          ORDER BY area, kpi_name
        `);else{let m=await d(`
          SELECT 
            id,
            area,
            kpi_name as "kpiName",
            description,
            calculation_method as "calculationMethod",
            goal,
            unit,
            frequency,
            source,
            responsible,
            period,
            created_at as "createdAt",
            'Dura' as "company"
          FROM kpis_dura 
          ORDER BY area, kpi_name
        `),E=await d(`
          SELECT 
            id,
            area,
            kpi_name as "kpiName",
            description,
            calculation_method as "calculationMethod",
            goal,
            unit,
            frequency,
            source,
            responsible,
            period,
            created_at as "createdAt",
            'Orsega' as "company"
          FROM kpis_orsega 
          ORDER BY area, kpi_name
        `);u=[...m,...E]}console.log(`\u{1F4CA} [GET /api/kpis] Retornando ${u.length} KPIs`),n.json(u)}catch(r){console.error("\u274C Error fetching KPIs:",r),n.status(500).json({message:"Internal server error"})}}),a.post("/api/admin/fix-dura-kpi-goal",w,async(i,n)=>{try{if(W(i).role!=="admin")return n.status(403).json({message:"Solo administradores"});let{neon:o}=await import("@neondatabase/serverless"),d=o(process.env.DATABASE_URL),u=53480,m="KG",g=(await d`
        UPDATE kpis_dura
        SET goal = ${u}, unit = ${m}
        WHERE id = 39
        RETURNING id, kpi_name, goal, unit
      `).length;return g===0&&(g=(await d`
          UPDATE kpis_dura
          SET goal = ${u}, unit = ${m}
          WHERE lower(kpi_name) LIKE '%ventas%'
          RETURNING id, kpi_name, goal, unit
        `).length),n.json({ok:!0,updated:g})}catch(r){return console.error("[POST /api/admin/fix-dura-kpi-goal] Error:",r),n.status(500).json({ok:!1,error:"Error interno"})}}),a.get("/api/kpis/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.getKpi(r);if(!o)return n.status(404).json({message:"KPI not found"});let d=o.name.includes("Rotaci\xF3n de cuentas por cobrar")||o.name.includes("Velocidad de rotaci\xF3n")||o.name.includes("Tiempo")&&!o.name.includes("entrega");console.log(`[GET KPI/${r}] Calculando para "${o.name}". \xBFEs invertido?: ${d}`),n.json({...o,isLowerBetter:d})}catch{n.status(500).json({message:"Internal server error"})}}),a.post("/api/kpis",w,async(i,n)=>{try{let r=i;if(r.user?.role!=="admin"&&r.user?.role!=="manager")return n.status(403).json({message:"No tienes permisos para crear KPIs"});let o=at.parse(i.body),d=await b.createKpi(o);n.status(201).json(d)}catch(r){if(r instanceof M.ZodError)return n.status(400).json({message:r.errors});n.status(500).json({message:"Internal server error"})}}),a.put("/api/kpis/:id",w,async(i,n)=>{try{let r=i;if(r.user?.role!=="admin"&&r.user?.role!=="manager")return n.status(403).json({message:"No tienes permisos para actualizar KPIs"});let o=parseInt(i.params.id),d=it.parse(i.body);console.log(`[PUT /api/kpis/${o}] Datos validados:`,d);let u=await b.updateKpi(o,d);if(!u)return n.status(404).json({message:"KPI not found"});console.log(`[PUT /api/kpis/${o}] KPI actualizado:`,u),n.json(u)}catch(r){if(r instanceof M.ZodError)return console.error("[PUT /api/kpis] Error de validaci\xF3n:",r.errors),n.status(400).json({message:r.errors});console.error("[PUT /api/kpis] Error interno:",r),n.status(500).json({message:"Internal server error"})}}),a.delete("/api/kpis/:id",w,async(i,n)=>{try{let r=i;if(r.user?.role!=="admin"&&r.user?.role!=="manager")return n.status(403).json({message:"No tienes permisos para eliminar KPIs"});let o=parseInt(i.params.id);if(!await b.deleteKpi(o))return n.status(404).json({message:"KPI not found"});n.json({message:"KPI eliminado exitosamente"})}catch{n.status(500).json({message:"Internal server error"})}}),a.get("/api/kpis-dura",w,async(i,n)=>{try{console.log("\u{1F535} [GET /api/kpis-dura] Endpoint llamado");let o=await fe(process.env.DATABASE_URL)(`
        SELECT 
          id,
          area,
          kpi_name as "kpiName",
          description,
          calculation_method as "calculationMethod",
          goal,
          unit,
          frequency,
          source,
          responsible,
          period,
          created_at as "createdAt"
        FROM kpis_dura 
        ORDER BY area, kpi_name
      `);console.log(`\u{1F4CA} [GET /api/kpis-dura] Retornando ${o.length} KPIs de Dura`),n.json(o)}catch(r){console.error("\u274C Error fetching Dura KPIs:",r),n.status(500).json({error:"Failed to fetch Dura KPIs"})}}),a.get("/api/kpis-orsega",w,async(i,n)=>{try{console.log("\u{1F535} [GET /api/kpis-orsega] Endpoint llamado");let o=await fe(process.env.DATABASE_URL)(`
        SELECT 
          id,
          area,
          kpi_name as "kpiName",
          description,
          calculation_method as "calculationMethod",
          goal,
          unit,
          frequency,
          source,
          responsible,
          period,
          created_at as "createdAt"
        FROM kpis_orsega 
        ORDER BY area, kpi_name
      `);console.log(`\u{1F4CA} [GET /api/kpis-orsega] Retornando ${o.length} KPIs de Orsega`),n.json(o)}catch(r){console.error("\u274C Error fetching Orsega KPIs:",r),n.status(500).json({error:"Failed to fetch Orsega KPIs"})}}),a.get("/api/kpis-by-company/:companyId",w,async(i,n)=>{try{let r=parseInt(i.params.companyId);console.log(`\u{1F535} [GET /api/kpis-by-company/${r}] Endpoint llamado`);let o=fe(process.env.DATABASE_URL),d;if(r===1)d=await o(`
          SELECT 
            id,
            area,
            kpi_name as "kpiName",
            description,
            calculation_method as "calculationMethod",
            goal,
            unit,
            frequency,
            source,
            responsible,
            period,
            created_at as "createdAt",
            'Dura' as "company"
          FROM kpis_dura 
          ORDER BY area, kpi_name
        `);else if(r===2)d=await o(`
          SELECT 
            id,
            area,
            kpi_name as "kpiName",
            description,
            calculation_method as "calculationMethod",
            goal,
            unit,
            frequency,
            source,
            responsible,
            period,
            created_at as "createdAt",
            'Orsega' as "company"
          FROM kpis_orsega 
          ORDER BY area, kpi_name
        `);else return n.status(400).json({error:"Invalid company ID. Use 1 for Dura or 2 for Orsega"});console.log(`\u{1F4CA} [GET /api/kpis-by-company/${r}] Retornando ${d.length} KPIs`),n.json(d)}catch(r){console.error("\u274C Error fetching KPIs by company:",r),n.status(500).json({error:"Failed to fetch KPIs by company"})}}),a.get("/api/kpis-by-user/:userId",w,async(i,n)=>{try{let r=parseInt(i.params.userId);console.log(`\u{1F535} [GET /api/kpis-by-user/${r}] Endpoint llamado`);let o=await b.getUser(r);if(!o)return n.status(404).json({error:"User not found"});let d=fe(process.env.DATABASE_URL),u=[];if(o.name.toLowerCase().includes("omar")||o.name.toLowerCase().includes("thalia")){let m=await d(`
          SELECT 
            id,
            area,
            kpi_name as "kpiName",
            description,
            calculation_method as "calculationMethod",
            goal,
            unit,
            frequency,
            source,
            responsible,
            period,
            created_at as "createdAt",
            'Dura' as "company"
          FROM kpis_dura 
          WHERE responsible ILIKE '%${o.name.split(" ")[0]}%'
          ORDER BY area, kpi_name
        `),E=await d(`
          SELECT 
            id,
            area,
            kpi_name as "kpiName",
            description,
            calculation_method as "calculationMethod",
            goal,
            unit,
            frequency,
            source,
            responsible,
            period,
            created_at as "createdAt",
            'Orsega' as "company"
          FROM kpis_orsega 
          WHERE responsible ILIKE '%${o.name.split(" ")[0]}%'
          ORDER BY area, kpi_name
        `);u=[...m,...E]}console.log(`\u{1F4CA} [GET /api/kpis-by-user/${r}] Retornando ${u.length} KPIs para ${o.name}`),n.json(u)}catch(r){console.error("\u274C Error fetching KPIs by user:",r),n.status(500).json({error:"Failed to fetch KPIs by user"})}}),a.delete("/api/user-kpis/:kpiId",w,async(i,n)=>{try{let r=W(i),o=parseInt(i.params.kpiId);if(!await b.getKpi(o))return n.status(404).json({message:"KPI not found"});if(!await b.deleteKpiValuesByUser(r.id,o))return n.json({message:"No hab\xEDa valores de KPI para este usuario (ya estaba eliminado)"});n.json({message:"KPI eliminado para el usuario espec\xEDfico"})}catch(r){console.error("Error eliminating user-specific KPI:",r),n.status(500).json({message:"Internal server error"})}}),a.get("/api/top-performers",w,async(i,n)=>{try{let{companyId:r}=i.query;if(!r)return n.status(400).json({message:"companyId es requerido"});let d=await l(`
        SELECT 
          a.name as area_name,
          a.id as area_id,
          COUNT(k.id) as total_kpis,
          COUNT(CASE WHEN kv.status = 'complies' THEN 1 END) as compliant_kpis,
          COALESCE(ROUND(COUNT(CASE WHEN kv.status = 'complies' THEN 1 END) * 100.0 / NULLIF(COUNT(k.id), 0), 2), 0) as compliance_percentage
        FROM areas a 
        LEFT JOIN kpis k ON a.id = k.area_id 
        LEFT JOIN kpi_values kv ON k.id = kv.kpi_id 
        WHERE k.company_id = $1
        GROUP BY a.id, a.name 
        HAVING COUNT(k.id) > 0
        ORDER BY compliance_percentage DESC, total_kpis DESC
        LIMIT 5
      `,[r]);n.json(d)}catch(r){console.error("Error fetching top performers:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/kpi-values",w,async(i,n)=>{try{let r=W(i);if(i.query.kpiId){let o=parseInt(i.query.kpiId);if(!await b.getKpi(o))return n.status(404).json({message:"KPI not found"});if(r.role==="collaborator"){let m=(await b.getKpiValuesByKpi(o)).filter(E=>E.userId===r.id);n.json(m)}else{let u=await b.getKpiValuesByKpi(o);n.json(u)}}else{let o=fe(process.env.DATABASE_URL),d=[],u=await b.getKpiValues();d.push(...u);let m=await o`
          SELECT 
            id,
            kpi_id as "kpiId",
            NULL as "userId",
            value::text,
            created_at as "date",
            month || ' ' || year as "period",
            NULL as "compliancePercentage",
            NULL as "status",
            NULL as "comments",
            NULL as "updatedBy"
          FROM kpi_values_orsega
          ORDER BY year DESC,
            CASE month
              WHEN 'ENERO' THEN 1 WHEN 'FEBRERO' THEN 2 WHEN 'MARZO' THEN 3
              WHEN 'ABRIL' THEN 4 WHEN 'MAYO' THEN 5 WHEN 'JUNIO' THEN 6
              WHEN 'JULIO' THEN 7 WHEN 'AGOSTO' THEN 8 WHEN 'SEPTIEMBRE' THEN 9
              WHEN 'OCTUBRE' THEN 10 WHEN 'NOVIEMBRE' THEN 11 WHEN 'DICIEMBRE' THEN 12
              ELSE 13
            END DESC
          LIMIT 100
        `;d.push(...m);let E=await o`
          SELECT 
            id,
            kpi_id as "kpiId",
            NULL as "userId",
            value::text,
            created_at as "date",
            month || ' ' || year as "period",
            NULL as "compliancePercentage",
            NULL as "status",
            NULL as "comments",
            NULL as "updatedBy"
          FROM kpi_values_dura
          ORDER BY year DESC,
            CASE month
              WHEN 'ENERO' THEN 1 WHEN 'FEBRERO' THEN 2 WHEN 'MARZO' THEN 3
              WHEN 'ABRIL' THEN 4 WHEN 'MAYO' THEN 5 WHEN 'JUNIO' THEN 6
              WHEN 'JULIO' THEN 7 WHEN 'AGOSTO' THEN 8 WHEN 'SEPTIEMBRE' THEN 9
              WHEN 'OCTUBRE' THEN 10 WHEN 'NOVIEMBRE' THEN 11 WHEN 'DICIEMBRE' THEN 12
              ELSE 13
            END DESC
          LIMIT 100
        `;if(d.push(...E),console.log(`[GET /api/kpi-values] Retornando ${d.length} valores (${u.length} antiguos + ${m.length} orsega + ${E.length} dura)`),d.length>0&&console.log("[GET /api/kpi-values] Primeros 3 valores de ejemplo:",d.slice(0,3).map(g=>({kpiId:g.kpiId,value:g.value,period:g.period}))),r.role==="collaborator"){let g=d.filter(y=>y.userId===r.id);n.json(g)}else n.json(d)}}catch(r){console.error("[GET /api/kpi-values] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.post("/api/kpi-values",w,async(i,n)=>{try{let r=W(i),o=He.parse({...i.body,userId:r.id});console.log(`[POST /api/kpi-values] Actualizando KPI ${o.kpiId} para usuario ${r.id}`);let d=await b.getKpi(o.kpiId),u="kpis";if(!d&&typeof v<"u")try{let g=await v.select().from(De).where(Qe(De.id,o.kpiId)).limit(1);if(g.length>0)d={id:g[0].id,name:g[0].kpiName,description:g[0].description,target:g[0].goal,unit:g[0].unit,frequency:g[0].frequency,calculationMethod:g[0].calculationMethod,responsible:g[0].responsible,area:g[0].area,company:"Dura"},u="kpis_dura",console.log(`[POST /api/kpi-values] KPI encontrado en kpis_dura: ${d.name}`);else{let y=await v.select().from(ke).where(Qe(ke.id,o.kpiId)).limit(1);y.length>0&&(d={id:y[0].id,name:y[0].kpiName,description:y[0].description,target:y[0].goal,unit:y[0].unit,frequency:y[0].frequency,calculationMethod:y[0].calculationMethod,responsible:y[0].responsible,area:y[0].area,company:"Orsega"},u="kpis_orsega",console.log(`[POST /api/kpi-values] KPI encontrado en kpis_orsega: ${d.name}`))}}catch(g){console.error("[POST /api/kpi-values] Error buscando en tablas antiguas:",g)}if(!d)return console.error(`[POST /api/kpi-values] KPI ${o.kpiId} no encontrado en ninguna tabla`),n.status(404).json({message:"KPI not found"});let m=null;if(u==="kpis"){let g=await b.getLatestKpiValues(o.kpiId,1);m=g.length>0?g[0].status:null}if(d.target||d.goal){let g=o.value,y=d.target||d.goal,S=Rt(g),P=Rt(y);if(!isNaN(S)&&!isNaN(P)){let k,A=ln(d.name||d.kpiName||"");console.log(`[KPI Calculation] Calculando para "${d.name||d.kpiName}". \xBFEs invertido?: ${A}`),A?(k=Math.min(P/S*100,100),S<=P?o.status="complies":S<=P*1.1?o.status="alert":o.status="not_compliant"):(k=Math.min(S/P*100,100),S>=P?o.status="complies":S>=P*.9?o.status="alert":o.status="not_compliant"),o.compliancePercentage=`${k.toFixed(1)}%`}}let E;if(u==="kpis_dura"||u==="kpis_orsega"){let g=o.period.match(/Semana\s+\d+\s+-\s+(\w+)\s+(\d{4})/);g||(g=o.period.match(/(\w+)\s+(\d{4})/));let y,S;if(g)y=g[1],S=parseInt(g[2]);else{let C=new Date;y=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"][C.getMonth()],S=C.getFullYear(),console.log(`[POST /api/kpi-values] No se pudo parsear per\xEDodo "${o.period}", usando per\xEDodo actual: ${y} ${S}`)}let P=Rt(o.value);if(isNaN(P))return n.status(400).json({message:"El valor debe ser num\xE9rico"});let k={enero:"ENERO",febrero:"FEBRERO",marzo:"MARZO",abril:"ABRIL",mayo:"MAYO",junio:"JUNIO",julio:"JULIO",agosto:"AGOSTO",septiembre:"SEPTIEMBRE",octubre:"OCTUBRE",noviembre:"NOVIEMBRE",diciembre:"DICIEMBRE"},A=y.toLowerCase(),_=k[A]||y.toUpperCase();if(u==="kpis_dura"){let C=await l`
            SELECT * FROM kpi_values_dura 
            WHERE kpi_id = ${o.kpiId} 
            AND month = ${_} 
            AND year = ${S}
            LIMIT 1
          `;if(C.length>0){let R=await l`
              UPDATE kpi_values_dura 
              SET value = ${P}, created_at = NOW()
              WHERE id = ${C[0].id}
              RETURNING *
            `;E={id:R[0].id,kpiId:R[0].kpi_id,value:R[0].value.toString(),period:`${y.charAt(0).toUpperCase()+y.slice(1).toLowerCase()} ${S}`,date:R[0].created_at,compliancePercentage:o.compliancePercentage,status:o.status,comments:o.comments,updatedBy:r.id}}else{let R=await l`
              INSERT INTO kpi_values_dura (kpi_id, month, year, value, created_at)
              VALUES (${o.kpiId}, ${_}, ${S}, ${P}, NOW())
              RETURNING *
            `;E={id:R[0].id,kpiId:R[0].kpi_id,value:R[0].value.toString(),period:`${y.charAt(0).toUpperCase()+y.slice(1).toLowerCase()} ${S}`,date:R[0].created_at,compliancePercentage:o.compliancePercentage,status:o.status,comments:o.comments,updatedBy:r.id}}}else{let C=await l`
            SELECT * FROM kpi_values_orsega 
            WHERE kpi_id = ${o.kpiId} 
            AND month = ${_} 
            AND year = ${S}
            LIMIT 1
          `;if(C.length>0){let R=await l`
              UPDATE kpi_values_orsega 
              SET value = ${P}, created_at = NOW()
              WHERE id = ${C[0].id}
              RETURNING *
            `;E={id:R[0].id,kpiId:R[0].kpi_id,value:R[0].value.toString(),period:`${y.charAt(0).toUpperCase()+y.slice(1).toLowerCase()} ${S}`,date:R[0].created_at,compliancePercentage:o.compliancePercentage,status:o.status,comments:o.comments,updatedBy:r.id}}else{let R=await l`
              INSERT INTO kpi_values_orsega (kpi_id, month, year, value, created_at)
              VALUES (${o.kpiId}, ${_}, ${S}, ${P}, NOW())
              RETURNING *
            `;E={id:R[0].id,kpiId:R[0].kpi_id,value:R[0].value.toString(),period:`${y.charAt(0).toUpperCase()+y.slice(1).toLowerCase()} ${S}`,date:R[0].created_at,compliancePercentage:o.compliancePercentage,status:o.status,comments:o.comments,updatedBy:r.id}}}console.log(`[POST /api/kpi-values] Valor guardado en ${u}:`,E)}else{let g={...o,updatedBy:r.id};if(g.period)try{let S=(await b.getKpiValuesByKpi(g.kpiId)).find(P=>P.period===g.period);if(S){let{id:P}=S;if(typeof v<"u"){let[k]=await v.update(x).set({value:g.value,period:g.period,compliancePercentage:g.compliancePercentage??null,status:g.status??null,comments:g.comments??null,updatedBy:g.updatedBy??null,date:new Date}).where(Qe(x.id,P)).returning();E=k}else await b.createKpiValue({...g}),E={...S,...g}}else E=await b.createKpiValue(g)}catch{E=await b.createKpiValue(g)}else E=await b.createKpiValue(g);m&&o.status&&m!==o.status&&await dn(d,r,m,o.status,b)}n.status(201).json(E)}catch(r){if(r instanceof M.ZodError)return n.status(400).json({message:r.errors});console.error("Error creating KPI value:",r),n.status(500).json({message:"Internal server error"})}}),a.post("/api/sales/weekly-update",w,async(i,n)=>{try{console.log("[POST /api/sales/weekly-update] SIMPLIFICADO - Recibida solicitud:",i.body);let{value:r,companyId:o,weekNumber:d,month:u,year:m,adminOverride:E}=i.body,g=W(i);if(!r||!o)return n.status(400).json({message:"Datos insuficientes. Se requiere value y companyId"});let y={value:parseFloat(r),companyId:parseInt(o||"1"),userId:g.id};g.role==="admin"&&E&&d&&u&&m?(y.adminOverride=!0,y.weekNumber=d,y.month=u,y.year=parseInt(m),console.log(`[POST /api/sales/weekly-update] ADMIN OVERRIDE - Per\xEDodo manual: ${d} - ${u} ${m}`)):console.log("[POST /api/sales/weekly-update] Modo normal - detecci\xF3n autom\xE1tica");let S,P;if(y.adminOverride&&y.month&&y.year)S=y.month,P=y.year;else{let _=new Date;S=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"][_.getMonth()],P=_.getFullYear()}if(!(g.role==="admin"&&y.adminOverride)){let C=(await b.getKpis()).find(R=>R.name.includes("Volumen de ventas")&&R.companyId===y.companyId);if(C){let X=(await b.getKpiValuesByKpi(C.id)).find(Pe=>Pe.period===`${S} ${P}`&&!Pe.period.includes("Semana"));if(X)return console.log(`[POST /api/sales/weekly-update] \u274C ACCESO DENEGADO - Mes ${S} ${P} ya est\xE1 cerrado`),n.status(409).json({success:!1,message:`El mes ${S} ${P} ya est\xE1 cerrado y no se pueden hacer m\xE1s actualizaciones.`,monthStatus:{closed:!0,period:`${S} ${P}`,closedValue:X.value,closedDate:X.date},suggestion:"Contacta a un administrador si necesitas actualizar este per\xEDodo."})}}else console.log(`[POST /api/sales/weekly-update] \u{1F513} ADMIN OVERRIDE - Permitiendo actualizaci\xF3n en per\xEDodo ${S} ${P}`);let A=await ur(y);A.success?(console.log("[POST /api/sales/weekly-update] \u2705 Actualizaci\xF3n exitosa:",{period:A.currentPeriod?.period,monthlyPreview:A.monthlyPreview?.formattedValue}),n.status(200).json({success:!0,message:A.message||"Ventas actualizadas exitosamente",weeklyRecord:A.weeklyRecord,currentPeriod:A.currentPeriod,monthlyPreview:A.monthlyPreview})):(console.error("[POST /api/sales/weekly-update] \u274C Error:",A.message),n.status(400).json({success:!1,message:A.message||"Error al actualizar datos de ventas"}))}catch(r){console.error("[POST /api/sales/weekly-update] \u274C Error cr\xEDtico:",r),n.status(500).json({success:!1,message:"Error interno del servidor"})}}),a.post("/api/sales/update-month",w,async(i,n)=>{try{console.log("[POST /api/sales/update-month] Recibida solicitud:",i.body);let{value:r,companyId:o,month:d,year:u,period:m}=i.body,E=W(i);if(!r||!o||!d||!u)return n.status(400).json({success:!1,message:"Faltan datos requeridos: valor, compa\xF1\xEDa, mes y a\xF1o"});let g=o===1?39:10,y=m||`${d} ${u}`;console.log(`[POST /api/sales/update-month] Actualizando KPI ${g} para per\xEDodo: ${y}`);let P=(await b.getKpiValuesByKpi(g)).find(_=>_.period===y);P&&(await v.delete(x).where(Qe(x.id,P.id)),console.log(`[POST /api/sales/update-month] Registro anterior eliminado: ${y}`)),await b.createKpiValue({kpiId:g,value:r.toString(),period:y,userId:E.id}),console.log(`[POST /api/sales/update-month] \u2705 Registro creado: ${y} = ${r}`);let k=o===1?55620:858373,A=Math.round(r/k*100);n.status(200).json({success:!0,message:`Ventas de ${y} actualizadas correctamente`,data:{period:y,value:r,monthlyTarget:k,compliance:A}})}catch(r){console.error("[POST /api/sales/update-month] \u274C Error:",r),n.status(500).json({success:!1,message:r.message||"Error al actualizar ventas mensuales"})}}),a.post("/api/sales/auto-close-month",w,async(i,n)=>{try{console.log("[POST /api/sales/auto-close-month] Iniciando auto-cierre mensual:",i.body);let{companyId:r,month:o,year:d}=i.body;if(W(i).role!=="admin")return n.status(403).json({success:!1,message:"Solo los administradores pueden ejecutar el auto-cierre mensual"});let m=r?[parseInt(r)]:[1,2];console.log("[POST /api/sales/auto-close-month] Procesando empresas:",m);let E=[];for(let S of m)try{console.log(`[POST /api/sales/auto-close-month] Procesando empresa ${S}...`);let P=await ft(S,o,d);E.push({companyId:S,success:P,message:P?"Mes cerrado exitosamente":"No hay datos para cerrar o ya est\xE1 cerrado"})}catch(P){console.error(`[POST /api/sales/auto-close-month] Error para empresa ${S}:`,P),E.push({companyId:S,success:!1,message:P.message||"Error al cerrar mes"})}let g=E.every(S=>S.success),y=E.filter(S=>S.success).length;console.log(`[POST /api/sales/auto-close-month] \u2705 Completado - ${y}/${E.length} empresas procesadas`),n.status(200).json({success:g,message:`Auto-cierre completado: ${y}/${E.length} empresas procesadas`,results:E,timestamp:new Date().toISOString()})}catch(r){console.error("[POST /api/sales/auto-close-month] \u274C Error cr\xEDtico:",r),n.status(500).json({success:!1,message:"Error interno del servidor durante el auto-cierre"})}}),a.post("/api/sales/monthly-close",w,async(i,n)=>{try{console.log("[POST /api/sales/monthly-close] CIERRE MANUAL iniciado:",i.body);let{companyId:r,month:o,year:d,override:u=!1}=i.body,m=W(i);if(m.role!=="admin")return n.status(403).json({success:!1,message:"Solo los administradores pueden cerrar meses manualmente"});if(!r||!o||!d)return n.status(400).json({success:!1,message:"Par\xE1metros requeridos: companyId, month, year"});let E=`${o} ${d}`,y=(await b.getKpis()).find(A=>A.name.includes("Volumen de ventas")&&A.companyId===parseInt(r));if(!y)return n.status(404).json({success:!1,message:`No se encontr\xF3 KPI de volumen de ventas para la compa\xF1\xEDa ${r}`});let P=(await b.getKpiValuesByKpi(y.id)).find(A=>A.period===E&&!A.period.includes("Semana"));if(P&&!u)return n.status(409).json({success:!1,message:`El mes ${o} ${d} ya est\xE1 cerrado. Usa override=true para volver a cerrar.`,existingRecord:{id:P.id,value:P.value,date:P.date,period:P.period}});if(console.log(`[POST /api/sales/monthly-close] Ejecutando cierre para empresa ${r}, per\xEDodo: ${E}`),await ft(parseInt(r),o,parseInt(d))){console.log(`[POST /api/sales/monthly-close] \u2705 Cierre manual exitoso para compa\xF1\xEDa ${r}`);let A=P&&u?"actualizado":"cerrado";n.status(200).json({success:!0,message:`Mes ${o} ${d} ${A} exitosamente`,companyId:parseInt(r),period:E,wasOverride:!!(P&&u),closedBy:m.name||m.id})}else console.error(`[POST /api/sales/monthly-close] \u274C Error en cierre manual para compa\xF1\xEDa ${r}`),n.status(500).json({success:!1,message:`Error al cerrar el mes ${o} ${d} - posiblemente no hay datos semanales suficientes`})}catch(r){console.error("[POST /api/sales/monthly-close] \u274C Error cr\xEDtico:",r),n.status(500).json({success:!1,message:"Error interno del servidor durante cierre manual",error:r.message})}}),a.get("/api/sales/monthly-status",w,async(i,n)=>{try{let{companyId:r,month:o,year:d}=i.query;if(!r||!o||!d)return n.status(400).json({success:!1,message:"Par\xE1metros requeridos: companyId, month, year"});let u=`${o} ${d}`,E=(await b.getKpis()).find(P=>P.name.includes("Volumen de ventas")&&P.companyId===parseInt(r));if(!E)return n.status(404).json({success:!1,message:`No se encontr\xF3 KPI de volumen de ventas para la compa\xF1\xEDa ${r}`});let g=await b.getKpiValuesByKpi(E.id),y=g.find(P=>P.period===u&&!P.period.includes("Semana")),S=g.filter(P=>P.period.includes(o)&&P.period.includes(d)&&P.period.includes("Semana"));n.status(200).json({success:!0,closed:!!y,period:u,monthlyRecord:y||null,weeklyRecordsCount:S.length,weeklyRecords:S.map(P=>({period:P.period,value:P.value,date:P.date}))})}catch(r){console.error("[GET /api/sales/monthly-status] Error:",r),n.status(500).json({success:!1,message:"Error al consultar estado del mes"})}}),a.get("/api/shipments",w,async(i,n)=>{try{let{companyId:r,status:o,limit:d="50",page:u="1",since:m}=i.query,E=parseInt(d),g=parseInt(u),y=(g-1)*E,S;if(m){let _=m;if(_.endsWith("d")){let C=parseInt(_.replace("d",""));S=new Date,S.setDate(S.getDate()-C)}else S=new Date(_)}let P;if(r){let _=parseInt(r);P=await b.getShipmentsByCompany(_)}else P=await b.getShipments();o&&(P=P.filter(_=>_.status===o)),S&&(P=P.filter(_=>new Date(_.actualDeliveryDate||_.updatedAt||_.createdAt)>=S)),P.sort((_,C)=>{let R=new Date(_.actualDeliveryDate||_.updatedAt||_.createdAt);return new Date(C.actualDeliveryDate||C.updatedAt||C.createdAt).getTime()-R.getTime()});let k=P.length,A=P.slice(y,y+E);n.json({shipments:A,pagination:{page:g,limit:E,total:k,totalPages:Math.ceil(k/E),hasMore:y+E<k}})}catch(r){console.error("[GET /api/shipments] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.get("/api/shipments/products",w,async(i,n)=>{try{let r=W(i),{companyId:o}=i.query;console.log("[GET /api/shipments/products] Usuario:",r.name,"Empresa filtro:",o);let d=["product IS NOT NULL AND product != ''"],u=[],m=0,g=`
        SELECT DISTINCT product 
        FROM shipments 
        ${`WHERE ${d.join(" AND ")}`}
        ORDER BY product ASC
      `,S=(await l(g,u)).map(P=>P.product);console.log(`[GET /api/shipments/products] Encontrados ${S.length} productos \xFAnicos`),n.json(S)}catch(r){console.error("[GET /api/shipments/products] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.get("/api/shipments/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.getShipment(r);if(!o)return n.status(404).json({message:"Shipment not found"});let d=await b.getShipmentItems(r);n.json({...o,items:d})}catch{n.status(500).json({message:"Internal server error"})}}),a.get("/api/shipments/tracking/:trackingCode",w,async(i,n)=>{try{let r=i.params.trackingCode,o=await b.getShipmentByTrackingCode(r);if(!o)return n.status(404).json({message:"Shipment not found"});n.json(o)}catch{n.status(500).json({message:"Internal server error"})}}),a.post("/api/shipments",w,async(i,n)=>{try{console.log("[POST /api/shipments] Datos recibidos:",JSON.stringify(i.body,null,2));let{items:r,...o}=i.body,d={...o,estimatedDeliveryDate:o.estimatedDeliveryDate?new Date(o.estimatedDeliveryDate):null,departureDate:o.departureDate?new Date(o.departureDate):null,actualDeliveryDate:o.actualDeliveryDate?new Date(o.actualDeliveryDate):null};console.log("[POST /api/shipments] Datos transformados:",JSON.stringify(d,null,2));let u=ct.parse(d);console.log("[POST /api/shipments] Datos validados:",JSON.stringify(u,null,2));let m=await b.createShipment(u);if(console.log("[POST /api/shipments] Env\xEDo creado:",m),r&&Array.isArray(r)&&r.length>0){let g=r.map(y=>({shipmentId:m.id,product:y.product,quantity:y.quantity,unit:y.unit,description:y.description||null}));await b.createShipmentItems(g),console.log("[POST /api/shipments] Items creados:",g.length)}let E=await b.getShipmentItems(m.id);n.status(201).json({...m,items:E})}catch(r){if(console.error("[POST /api/shipments] Error completo:",r),console.error("[POST /api/shipments] Stack trace:",r?.stack),r instanceof M.ZodError)return console.error("[POST /api/shipments] \u274C Errores de validaci\xF3n:"),r.errors.forEach(o=>{console.error(`  - Campo: ${o.path.join(".")}, Error: ${o.message}`)}),n.status(400).json({error:"Validation error",message:"Los datos enviados no son v\xE1lidos",errors:r.errors,details:r.errors.map(o=>({field:o.path.join("."),message:o.message}))});r?.code&&console.error("[POST /api/shipments] \u274C Error de base de datos:",r.code,r.detail),n.status(500).json({error:"Internal server error",message:r.message||"Error al crear el embarque. Por favor, verifica los datos e intenta nuevamente."})}}),a.patch("/api/shipments/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id);if(!await b.getShipment(r))return n.status(404).json({message:"Shipment not found"});let u={...i.body||{}};typeof u.estimatedDeliveryDate=="string"&&(u.estimatedDeliveryDate=u.estimatedDeliveryDate?new Date(u.estimatedDeliveryDate):null),typeof u.departureDate=="string"&&(u.departureDate=u.departureDate?new Date(u.departureDate):null),typeof u.actualDeliveryDate=="string"&&(u.actualDeliveryDate=u.actualDeliveryDate?new Date(u.actualDeliveryDate):null);let m=await b.updateShipment(r,u);if(!m)return n.status(500).json({message:"Failed to update shipment"});n.json(m)}catch(r){console.error("[PATCH /api/shipments/:id] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.get("/api/shipments/:id/items",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.getShipmentItems(r);n.json(o)}catch{n.status(500).json({message:"Internal server error"})}}),a.post("/api/shipments/:id/items",w,async(i,n)=>{try{let r=parseInt(i.params.id);if(!await b.getShipment(r))return n.status(404).json({message:"Shipment not found"});let{product:d,quantity:u,unit:m,description:E}=i.body||{};if(!d||!u||!m)return n.status(400).json({message:"product, quantity y unit son requeridos"});let g=await b.createShipmentItem({shipmentId:r,product:d,quantity:u,unit:m,description:E||null});n.status(201).json(g)}catch(r){console.error("[POST /api/shipments/:id/items] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.delete("/api/shipments/:id/items/:itemId",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=parseInt(i.params.itemId);if(!await b.getShipment(r))return n.status(404).json({message:"Shipment not found"});if(!await b.deleteShipmentItem(o))return n.status(404).json({message:"Item not found"});n.json({success:!0})}catch(r){console.error("[DELETE /api/shipments/:id/items/:itemId] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.post("/api/shipments/:id/items",w,async(i,n)=>{try{let o={shipmentId:parseInt(i.params.id),product:i.body.product,quantity:i.body.quantity,unit:i.body.unit,description:i.body.description||null},d=await b.createShipmentItem(o);n.status(201).json(d)}catch(r){console.error("[POST /api/shipments/:id/items] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.patch("/api/shipments/:id/items/:itemId",w,async(i,n)=>{try{let r=parseInt(i.params.itemId),o=await b.updateShipmentItem(r,i.body);if(!o)return n.status(404).json({message:"Item not found"});n.json(o)}catch(r){console.error("[PATCH /api/shipments/:id/items/:itemId] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.delete("/api/shipments/:id/items/:itemId",w,async(i,n)=>{try{let r=parseInt(i.params.itemId);if(!await b.deleteShipmentItem(r))return n.status(404).json({message:"Item not found"});n.json({success:!0})}catch(r){console.error("[DELETE /api/shipments/:id/items/:itemId] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.get("/api/shipments/:id/updates",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.getShipmentUpdates(r);n.json(o)}catch{n.status(500).json({message:"Internal server error"})}}),a.get("/api/action-plans",w,async(i,n)=>{try{if(i.query.kpiId){let r=parseInt(i.query.kpiId),o=await b.getActionPlansByKpi(r);n.json(o)}else n.json([])}catch{n.status(500).json({message:"Internal server error"})}}),a.get("/api/action-plans/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.getActionPlan(r);if(!o)return n.status(404).json({message:"Action plan not found"});n.json(o)}catch{n.status(500).json({message:"Internal server error"})}}),a.get("/api/notifications",w,async(i,n)=>{try{let r=W(i),o=await b.getNotificationsForUser(r.id);n.json(o)}catch{n.status(500).json({message:"Internal server error"})}}),a.post("/api/notifications",w,async(i,n)=>{try{let r=W(i),o={...i.body,fromUserId:r.id};console.log("[POST /api/notifications] Creando notificaci\xF3n:",o);let d=await b.createNotification(o),u=await b.getUser(o.toUserId);if(u&&u.email){console.log("[POST /api/notifications] Enviando correo a:",u.email);let{html:m,text:E}=mr(r.name,u.name,o.title,o.message,o.type||"info",o.priority||"normal");await Et({to:u.email,from:"Mario Reynoso <marioreynoso@grupoorsega.com>",subject:`[Econova] ${o.title}`,html:m,text:E})?console.log("[POST /api/notifications] Correo enviado exitosamente"):console.error("[POST /api/notifications] Error al enviar correo")}else console.warn("[POST /api/notifications] Destinatario no encontrado o sin email");n.status(201).json(d)}catch(r){console.error("[POST /api/notifications] Error:",r),n.status(500).json({message:"Internal server error"})}}),a.put("/api/notifications/:id/read",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=W(i),d=await b.markNotificationAsRead(r,o.id);if(!d)return n.status(404).json({message:"Notification not found"});n.json(d)}catch{n.status(500).json({message:"Internal server error"})}}),a.delete("/api/notifications/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=W(i);if(!await b.deleteNotification(r,o.id))return n.status(404).json({message:"Notification not found"});n.json({message:"Notification deleted successfully"})}catch{n.status(500).json({message:"Internal server error"})}}),a.get("/api/team-activity",w,async(i,n)=>{try{console.log("[GET /api/team-activity] Obteniendo resumen de actividad del equipo");let r=await b.getTeamActivitySummary();console.log("[GET /api/team-activity] Resumen obtenido:",r),n.json(r)}catch(r){console.error("Error getting team activity:",r),n.status(500).json({message:"Internal server error"})}}),a.get("/api/users/:id/last-kpi-update",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.getLastKpiUpdateByUser(r);n.json(o)}catch(r){console.error("Error getting last KPI update:",r),n.status(500).json({message:"Internal server error"})}}),a.patch("/api/shipments/:id/status",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=W(i),d=lt.parse(i.body);console.log("[PATCH /api/shipments/:id/status] Actualizando estado del env\xEDo:",{shipmentId:r,data:d});let u=await b.getShipment(r);if(!u)return n.status(404).json({message:"Env\xEDo no encontrado"});if(d.status==="in_transit"&&!(d.invoiceNumber||u.invoiceNumber))return n.status(400).json({message:"N\xFAmero de factura requerido",error:"Para mover un env\xEDo a 'En Tr\xE1nsito' es necesario proporcionar el n\xFAmero de factura.",requiresInvoiceNumber:!0});let m=u.status!==d.status,E={status:d.status,updatedAt:new Date};d.invoiceNumber&&(E.invoiceNumber=d.invoiceNumber);let g=await b.updateShipment(r,E);if(!g)return n.status(404).json({message:"Error al actualizar el env\xEDo"});let y=await b.createShipmentUpdate({shipmentId:r,status:d.status,location:d.location||null,comments:d.comments||null,updatedBy:o.id});try{await b.recalculateShipmentCycleTime(r),console.log(`[Cycle Times] Recalculated for shipment ${r}`)}catch(k){console.error(`[Cycle Times] Error recalculating for shipment ${r}:`,k)}let S=!1,P=null;if(m&&d.sendNotification!==!1)try{let k=null,A=!0,_=null;if(g.customerId){let C=await l("SELECT id, email, email_notifications FROM clients WHERE id = $1 LIMIT 1",[g.customerId]);if(C.length>0){let R=C[0];k=R.email,A=R.email_notifications!==!1,_=R.id,console.log(`[Notification] Cliente encontrado: ${k}, notificaciones: ${A}`)}}if(!k&&g.customerEmail&&(k=g.customerEmail,A=!0,console.log(`[Notification] Usando customerEmail legacy: ${k}`)),k&&A)if((await l(`SELECT id FROM shipment_notifications 
               WHERE shipment_id = $1 AND shipment_status = $2 AND status = 'sent' LIMIT 1`,[r,d.status])).length>0)console.log(`[Notification] Ya existe notificaci\xF3n enviada para estado ${d.status}, omitiendo duplicado`),P="Notificaci\xF3n ya enviada previamente para este estado";else{let{sendShipmentStatusNotification:R}=await Promise.resolve().then(()=>(Pt(),_r)),X=await R({to:k,shipment:g,status:d.status});await b.createShipmentNotification({shipmentId:r,emailTo:k,subject:`Actualizaci\xF3n de Env\xEDo - ${d.status}`,status:"sent",sentBy:o.id,shipmentStatus:d.status,errorMessage:null}),S=!0,console.log(`[Notification] Email enviado exitosamente a ${k} (${X.provider})`)}else k?A||(P="Cliente tiene notificaciones deshabilitadas",console.log(`[Notification] Cliente ${k} tiene notificaciones deshabilitadas`)):(P="No hay email de cliente configurado",console.log("[Notification] Sin email de cliente para enviar notificaci\xF3n"))}catch(k){if(console.error("[Notification] Error al enviar notificaci\xF3n:",k),P=k instanceof Error?k.message:"Error desconocido",g.customerEmail)try{await b.createShipmentNotification({shipmentId:r,emailTo:g.customerEmail,subject:`Actualizaci\xF3n de Env\xEDo - ${d.status}`,status:"failed",sentBy:o.id,shipmentStatus:d.status,errorMessage:P})}catch(A){console.error("[Notification] Error al registrar fallo:",A)}}n.json({shipment:g,update:y,emailNotificationSent:S,emailWarning:P})}catch(r){if(console.error("[PUT /api/shipments/:id/status] Error:",r),r instanceof M.ZodError)return n.status(400).json({message:"Datos inv\xE1lidos",errors:r.errors});n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/shipments/:id/notifications",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.getShipmentNotificationsByShipment(r);n.json(o)}catch(r){console.error("[GET /api/shipments/:id/notifications] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/shipments/:id/cycle-times",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await b.recalculateShipmentCycleTime(r);if(!o)return n.status(404).json({message:"Env\xEDo no encontrado"});n.json(o)}catch(r){console.error("[GET /api/shipments/:id/cycle-times] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/metrics/cycle-times",w,async(i,n)=>{try{let r=i.query.companyId?parseInt(i.query.companyId):void 0,o=i.query.startDate,d=i.query.endDate,u=await b.getAggregateCycleTimes(r,o,d);n.json(u)}catch(r){console.error("[GET /api/metrics/cycle-times] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/job-profiles/:userId",w,async(i,n)=>{try{let r=parseInt(i.params.userId),o=await b.getJobProfileWithDetails(r);if(!o)return n.status(404).json({message:"Perfil de trabajo no encontrado"});n.json(o)}catch(r){console.error("[GET /api/job-profiles/:userId] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/user-kpis/:userId",w,async(i,n)=>{try{let r=parseInt(i.params.userId),o=await b.getUserKpis(r);n.json(o)}catch(r){console.error("[GET /api/user-kpis/:userId] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/kpi-overview",w,async(i,n)=>{try{let r=await b.getKPIOverview();n.json(r)}catch(r){console.error("[GET /api/kpi-overview] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/kpi-history/:kpiId",w,async(i,n)=>{try{let r=parseInt(i.params.kpiId),o=parseInt(i.query.months)||12,d=await b.getKPIHistory(r,o);n.json(d)}catch(r){console.error("[GET /api/kpi-history/:kpiId] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/user-kpi-history/:userId",async(i,n)=>{try{let r=parseInt(i.params.userId),o=parseInt(i.query.months)||6;console.log(`[GET /api/user-kpi-history/:userId] Requested userId: ${r}, months: ${o}`);let d=await b.getUserKPIHistory(r,o);console.log(`[GET /api/user-kpi-history/:userId] Returning ${d?.length||0} records for user ${r}`),n.json(d)}catch(r){console.error("[GET /api/user-kpi-history/:userId] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/kpi-history-by-users/:kpiId",w,async(i,n)=>{try{let r=parseInt(i.params.kpiId),o=parseInt(i.query.months)||6,d=await b.getKPIHistoryByUsers(r,o);if(!d)return n.status(404).json({message:"KPI no encontrado"});n.json(d)}catch(r){console.error("[GET /api/kpi-history-by-users/:kpiId] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/check-kpi-duplicates",w,async(i,n)=>{try{if(i.user.role!=="admin")return n.status(403).json({message:"No autorizado"});let d=await fe(process.env.DATABASE_URL)`
        SELECT kpi_id, period, COUNT(*) as count, ARRAY_AGG(id ORDER BY id DESC) as ids
        FROM kpi_values
        WHERE user_id IS NULL
        GROUP BY kpi_id, period
        HAVING COUNT(*) > 1
      `;console.log("[CHECK KPI DUPLICATES] Found:",d),n.json({duplicatesFound:d,totalDuplicateGroups:d.length})}catch(r){console.error("[GET /api/check-kpi-duplicates] Error:",r),n.status(500).json({message:"Error interno del servidor",error:String(r)})}}),a.post("/api/fix-kpi-duplicates",w,async(i,n)=>{try{if(i.user.role!=="admin")return n.status(403).json({message:"No autorizado"});let o=fe(process.env.DATABASE_URL),d={duplicatesFound:[],duplicatesDeleted:0,indexesCreated:[],errors:[]},u=await o`
        SELECT kpi_id, period, COUNT(*) as count, ARRAY_AGG(id ORDER BY id DESC) as ids
        FROM kpi_values
        WHERE user_id IS NULL
        GROUP BY kpi_id, period
        HAVING COUNT(*) > 1
      `;d.duplicatesFound=u;for(let m of u){let E=m.ids.slice(1);if(E.length>0){let g=`{${E.join(",")}}`,y=await o`
            DELETE FROM kpi_values
            WHERE id = ANY(${g}::integer[])
          `;d.duplicatesDeleted+=E.length}}try{await o`
          CREATE UNIQUE INDEX IF NOT EXISTS user_kpi_unique 
          ON kpi_values (kpi_id, user_id, period) 
          WHERE user_id IS NOT NULL
        `,d.indexesCreated.push("user_kpi_unique")}catch(m){d.errors.push({index:"user_kpi_unique",error:m.message})}try{await o`
          CREATE UNIQUE INDEX IF NOT EXISTS company_kpi_unique 
          ON kpi_values (kpi_id, period) 
          WHERE user_id IS NULL
        `,d.indexesCreated.push("company_kpi_unique")}catch(m){d.errors.push({index:"company_kpi_unique",error:m.message})}console.log("[FIX KPI DUPLICATES] Results:",d),n.json({success:!0,message:"Duplicados eliminados e \xEDndices creados correctamente",details:d})}catch(r){console.error("[POST /api/fix-kpi-duplicates] Error:",r),n.status(500).json({message:"Error interno del servidor",error:String(r)})}});let l=fe(process.env.DATABASE_URL);a.get("/api/clients-db",w,async(i,n)=>{try{let{companyId:r,search:o}=i.query,d="WHERE is_active = true",u=[],m=1;o&&(d+=` AND (name ILIKE $${m} OR email ILIKE $${m} OR client_code ILIKE $${m})`,u.push(`%${o}%`),m++);let E=await l(`
        SELECT 
          id, name, email, phone, contact_person, company, address,
          company_id as "companyId", client_code as "clientCode", city, state, postal_code, country,
          requires_receipt as "requiresReceipt", email_notifications as "emailNotifications", customer_type as "customerType",
          payment_terms as "paymentTerms", is_active as "isActive", created_at as "createdAt"
        FROM clients 
        ${d}
        ORDER BY name
      `,u);n.json(E)}catch(r){console.error("Error fetching clients from database:",r),n.status(500).json({error:"Failed to fetch clients"})}}),a.get("/api/clients-db/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await l(`
        SELECT 
          id, name, email, phone, contact_person, company, address,
          company_id as "companyId", client_code as "clientCode", city, state, postal_code, country,
          requires_receipt as "requiresReceipt", email_notifications as "emailNotifications", customer_type as "customerType",
          payment_terms as "paymentTerms", is_active as "isActive", notes, created_at as "createdAt", updated_at as "updatedAt"
        FROM clients 
        WHERE id = $1 AND is_active = true
      `,[r]);if(o.length===0)return n.status(404).json({error:"Client not found"});n.json(o[0])}catch(r){console.error("Error fetching client:",r),n.status(500).json({error:"Failed to fetch client"})}}),a.get("/api/clients",w,async(i,n)=>{try{let r=await l(`
        SELECT 
          id, name, email, phone, contact_person as contact_name,
          address as billing_addr, address as shipping_addr,
          client_code as rfc, is_active, company_id,
          email_notifications
        FROM clients 
        WHERE is_active = true
        ORDER BY name
      `);n.json(r)}catch(r){console.error("Error fetching clients for logistics:",r),n.status(500).json({error:"Failed to fetch clients"})}}),a.get("/api/products",w,async(i,n)=>{try{let{companyId:r}=i.query;console.log("\u{1F535} [GET /api/products] companyId recibido:",r);let o="WHERE is_active = true",d=[];if(r){let m=parseInt(r);o+=" AND company_id = $1",d.push(m),console.log(`\u{1F535} [GET /api/products] Filtrando por company_id = ${m}`)}else console.log("\u26A0\uFE0F  [GET /api/products] No se recibi\xF3 companyId, retornando todos los productos activos");let u=await l(`
        SELECT id, name, company_id, is_active
        FROM products 
        ${o}
        ORDER BY name
      `,d);console.log(`\u{1F4CA} [GET /api/products] Retornando ${u.length} productos`),n.json(u)}catch(r){console.error("Error fetching products:",r),n.status(500).json({error:"Failed to fetch products"})}}),a.post("/api/clients",w,async(i,n)=>{try{let r=dt.parse(i.body),o=await l(`
        INSERT INTO clients (
          name, email, phone, contact_person, company, address,
          payment_terms, requires_receipt, reminder_frequency, is_active,
          notes, company_id, client_code, secondary_email, city, state,
          postal_code, country, email_notifications, customer_type
        ) VALUES (
          $1, $2, $3, $4, $5, $6, $7, $8, $9, $10,
          $11, $12, $13, $14, $15, $16, $17, $18, $19, $20
        )
        RETURNING *
      `,[r.name,r.email||null,r.phone||null,r.contactPerson||null,r.company||null,r.address||null,r.paymentTerms||null,r.requiresReceipt??!0,r.reminderFrequency||null,r.isActive??!0,r.notes||null,r.companyId||null,r.clientCode||null,r.secondaryEmail||null,r.city||null,r.state||null,r.postalCode||null,r.country||"M\xE9xico",r.emailNotifications??!0,r.customerType||null]);n.status(201).json(o[0])}catch(r){if(console.error("Error creating client:",r),r instanceof M.ZodError)return n.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});n.status(500).json({error:"Failed to create client"})}}),a.post("/api/admin/send-activation-emails",w,async(i,n)=>{try{if(W(i).role!=="admin")return n.status(403).json({message:"Solo administradores pueden enviar emails de activaci\xF3n masiva"});let o=await b.getUsers(),d=0,u=0;for(let m of o)try{let E=await b.createActivationToken(m.email),y=`${process.env.NODE_ENV==="production"?`https://${process.env.REPL_SLUG}.${process.env.REPL_OWNER||"user"}.replit.app`:"http://localhost:5000"}/activate/${E.token}`;await Et({to:m.email,from:"daniel@econova.com.mx",subject:"\u{1F510} Activa tu cuenta en ECONOVA KPI Dashboard",html:`
              <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background: #f8f9fa;">
                <div style="background: linear-gradient(135deg, #273949 0%, #b5e951 100%); color: white; padding: 30px; text-align: center; border-radius: 10px;">
                  <h1 style="margin: 0; font-size: 28px;">\xA1Bienvenido a ECONOVA!</h1>
                  <p style="margin: 10px 0 0 0; font-size: 16px;">KPI Dashboard - Sistema de Gesti\xF3n</p>
                </div>
                
                <div style="background: white; padding: 30px; border-radius: 10px; margin: 20px 0; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
                  <h2 style="color: #273949; margin-top: 0;">Hola ${m.name},</h2>
                  
                  <p>Tu cuenta ha sido creada en el Sistema ECONOVA KPI Dashboard. Para completar la configuraci\xF3n y acceder al sistema, necesitas establecer tu contrase\xF1a personal.</p>
                  
                  <div style="background: #e3f2fd; border-left: 4px solid #2196f3; padding: 15px; margin: 20px 0;">
                    <h3 style="margin: 0 0 10px 0; color: #1976d2;">\u{1F4E7} Tu informaci\xF3n de acceso:</h3>
                    <p style="margin: 0;"><strong>Email:</strong> ${m.email}</p>
                    <p style="margin: 5px 0 0 0;"><strong>Rol:</strong> ${m.role}</p>
                  </div>
                  
                  <div style="text-align: center; margin: 30px 0;">
                    <a href="${y}" style="background: linear-gradient(135deg, #273949 0%, #b5e951 100%); color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-size: 16px; font-weight: bold; display: inline-block;">
                      \u{1F510} Activar mi cuenta
                    </a>
                  </div>
                  
                  <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 20px 0;">
                    <h4 style="margin: 0 0 10px 0; color: #856404;">\u26A0\uFE0F Informaci\xF3n importante:</h4>
                    <ul style="margin: 0; padding-left: 20px; color: #856404;">
                      <li>Este enlace es v\xE1lido por <strong>24 horas</strong></li>
                      <li>Solo puedes usarlo <strong>una vez</strong></li>
                      <li>Elige una contrase\xF1a segura (m\xEDnimo 8 caracteres)</li>
                      <li>Nunca compartas tus credenciales de acceso</li>
                    </ul>
                  </div>
                  
                  <p style="color: #666; font-size: 14px;">Si no puedes hacer clic en el bot\xF3n, copia y pega este enlace en tu navegador:</p>
                  <p style="word-break: break-all; background: #f5f5f5; padding: 10px; border-radius: 5px; font-size: 12px; color: #666;">${y}</p>
                </div>
                
                <div style="text-align: center; color: #666; font-size: 12px;">
                  <p>\xA9 2025 ECONOVA - KPI Dashboard</p>
                  <p>Sistema de Gesti\xF3n de Indicadores de Rendimiento</p>
                </div>
              </div>
            `})?d++:u++}catch(E){console.error(`Error sending activation email to ${m.email}:`,E),u++}await b.deleteExpiredTokens(),n.json({message:"Emails de activaci\xF3n enviados",totalUsers:o.length,successful:d,failed:u})}catch(r){console.error("[POST /api/admin/send-activation-emails] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.get("/api/activate/:token",async(i,n)=>{try{let{token:r}=i.params,o=await b.getActivationToken(r);if(!o)return n.status(404).json({error:"Token no v\xE1lido",message:"El enlace de activaci\xF3n no es v\xE1lido o ha expirado"});if(new Date>o.expiresAt)return n.status(400).json({error:"Token expirado",message:"El enlace de activaci\xF3n ha expirado. Solicita uno nuevo al administrador"});if(o.used)return n.status(400).json({error:"Token ya utilizado",message:"Este enlace de activaci\xF3n ya fue utilizado"});let d=await b.getUserByEmail(o.email);if(!d)return n.status(404).json({error:"Usuario no encontrado",message:"No se encontr\xF3 un usuario asociado a este token"});n.json({valid:!0,email:o.email,user:Te(d),expiresAt:o.expiresAt})}catch(r){console.error("[GET /api/activate/:token] Error:",r),n.status(500).json({error:"Error interno",message:"Error interno del servidor"})}}),a.post("/api/activate/:token",async(i,n)=>{try{let{token:r}=i.params,{password:o}=i.body;if(!o||o.length<8)return n.status(400).json({message:"La contrase\xF1a debe tener al menos 8 caracteres"});let d=await b.getActivationToken(r);if(!d)return n.status(404).json({message:"Token no v\xE1lido o expirado"});if(new Date>d.expiresAt)return n.status(400).json({message:"El enlace de activaci\xF3n ha expirado"});if(d.used)return n.status(400).json({message:"Este enlace de activaci\xF3n ya fue utilizado"});let u=await b.getUserByEmail(d.email);if(!u)return n.status(404).json({message:"Usuario no encontrado"});let m=await Ke(o,10);await b.updateUser(u.id,{password:m}),await b.markTokenAsUsed(r),await b.deleteExpiredTokens(),n.json({message:"\xA1Contrase\xF1a establecida exitosamente! Ya puedes iniciar sesi\xF3n",user:Te(u)})}catch(r){console.error("[POST /api/activate/:token] Error:",r),n.status(500).json({message:"Error interno del servidor"})}}),a.post("/api/seed-production",async(i,n)=>{try{let{seedProductionData:r}=await Promise.resolve().then(()=>(Cr(),$r)),o=await r();n.json(o)}catch(r){n.status(500).json({success:!1,message:"Seeding failed",error:r instanceof Error?r.message:String(r)})}}),a.get("/api/debug-database",async(i,n)=>{try{let r=await b.getCompanies(),o=await b.getAreas(),d=await b.getKpis();n.json({companies:r,areas:o,kpis:d,totalCompanies:r.length,totalAreas:o.length,totalKpis:d.length})}catch(r){n.status(500).json({error:r instanceof Error?r.message:String(r)})}}),a.get("/api/treasury/payments",w,async(i,n)=>{try{let{companyId:r,status:o}=i.query,d="WHERE 1=1",u=[],m=1;r&&(d+=` AND company_id = $${m}`,u.push(parseInt(r)),m++),o&&(d+=` AND status = $${m}`,u.push(o),m++);let E=await l(`
        SELECT * FROM scheduled_payments
        ${d}
        ORDER BY due_date ASC
      `,u);n.json(E)}catch(r){console.error("Error fetching payments:",r),n.status(500).json({error:"Failed to fetch payments"})}}),a.post("/api/treasury/payments",w,async(i,n)=>{try{let r=W(i),o={...i.body,createdBy:r.id},d=await l(`
        INSERT INTO scheduled_payments (
          company_id, supplier_name, amount, currency, due_date,
          status, reference, notes, created_by
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
        RETURNING *
      `,[o.companyId,o.supplierName,o.amount,o.currency||"MXN",o.dueDate,o.status||"pending",o.reference||null,o.notes||null,o.createdBy]);n.status(201).json(d[0])}catch(r){console.error("Error creating payment:",r),n.status(500).json({error:"Failed to create payment"})}}),a.put("/api/treasury/payments/:id/pay",w,async(i,n)=>{try{let r=W(i),o=parseInt(i.params.id),d=await l(`
        UPDATE scheduled_payments
        SET status = 'paid', paid_at = NOW(), paid_by = $1, updated_at = NOW()
        WHERE id = $2
        RETURNING *
      `,[r.id,o]);if(d.length===0)return n.status(404).json({error:"Payment not found"});n.json(d[0])}catch(r){console.error("Error marking payment as paid:",r),n.status(500).json({error:"Failed to mark payment as paid"})}}),a.get("/api/treasury/exchange-rates",w,async(i,n)=>{try{let{limit:r=30}=i.query,o=await l(`
        SELECT 
          er.*,
          u.name as created_by_name,
          u.email as created_by_email
        FROM exchange_rates er
        LEFT JOIN users u ON er.created_by = u.id
        ORDER BY er.date DESC
        LIMIT $1
      `,[parseInt(r)]);n.json(o)}catch(r){console.error("Error fetching exchange rates:",r),n.status(500).json({error:"Failed to fetch exchange rates"})}}),a.post("/api/treasury/exchange-rates",w,async(i,n)=>{try{let r=W(i),{buyRate:o,sellRate:d,source:u,notes:m}=i.body,E=await l(`
        INSERT INTO exchange_rates (buy_rate, sell_rate, source, notes, created_by)
        VALUES ($1, $2, $3, $4, $5)
        RETURNING *
      `,[o,d,u||null,m||null,r.id]);n.status(201).json(E[0])}catch(r){console.error("Error creating exchange rate:",r),n.status(500).json({error:"Failed to create exchange rate"})}});let p=Ce({storage:Ce.diskStorage({destination:(i,n,r)=>{let o=$e.join(process.cwd(),"uploads","receipts");Ie.existsSync(o)||Ie.mkdirSync(o,{recursive:!0}),r(null,o)},filename:(i,n,r)=>{let o=Date.now()+"-"+Math.round(Math.random()*1e9);r(null,o+"-"+n.originalname)}}),fileFilter:(i,n,r)=>{["application/pdf","application/xml","text/xml"].includes(n.mimetype)||n.originalname.endsWith(".xml")?r(null,!0):r(new Error("Solo se permiten archivos PDF y XML"))},limits:{fileSize:10*1024*1024}});a.post("/api/treasury/payments/:id/receipts",w,p.single("file"),async(i,n)=>{try{let r=W(i),o=parseInt(i.params.id),d=i.file;if(!d)return n.status(400).json({error:"No file uploaded"});let u=`/uploads/receipts/${d.filename}`,m=d.mimetype.includes("pdf")?"pdf":"xml",E=await l(`
        INSERT INTO payment_receipts (payment_id, file_name, file_url, file_type, uploaded_by)
        VALUES ($1, $2, $3, $4, $5)
        RETURNING *
      `,[o,d.originalname,u,m,r.id]);n.status(201).json(E[0])}catch(r){console.error("Error uploading receipt:",r),n.status(500).json({error:"Failed to upload receipt"})}}),a.get("/api/treasury/payments/:id/receipts",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=await l(`
        SELECT * FROM payment_receipts
        WHERE payment_id = $1
        ORDER BY uploaded_at DESC
      `,[r]);n.json(o)}catch(r){console.error("Error fetching receipts:",r),n.status(500).json({error:"Failed to fetch receipts"})}}),a.post("/api/treasury/receipts/send",w,async(i,n)=>{try{let{receiptIds:r,emails:o}=i.body;if(!r||!o||o.length===0)return n.status(400).json({error:"receiptIds and emails are required"});let d=await l(`
        SELECT pr.*, sp.supplier_name, sp.amount, sp.currency, sp.reference
        FROM payment_receipts pr
        JOIN scheduled_payments sp ON pr.payment_id = sp.id
        WHERE pr.id = ANY($1)
      `,[r]);if(d.length===0)return n.status(404).json({error:"No receipts found"});let u=[];for(let g of d){let y=$e.join(process.cwd(),g.file_url);if(Ie.existsSync(y)){let P=Ie.readFileSync(y).toString("base64");u.push({content:P,filename:g.file_name,type:g.file_type==="pdf"?"application/pdf":"application/xml",disposition:"attachment"})}}let m=d[0],E=yr(m,d);for(let g of o)await gr({to:g,from:"marioreynoso@grupoorsega.com",subject:E.subject,html:E.html,text:E.text,attachments:u});await l(`
        UPDATE payment_receipts
        SET sent_to = $1, sent_at = NOW()
        WHERE id = ANY($2)
      `,[o,r]),n.json({success:!0,message:`Comprobantes enviados a ${o.join(", ")}`})}catch(r){console.error("Error sending receipts:",r),n.status(500).json({error:"Failed to send receipts"})}}),a.get("/api/treasury/complements",w,async(i,n)=>{try{let{companyId:r,status:o}=i.query,d="WHERE 1=1",u=[],m=1;r&&(d+=` AND company_id = $${m}`,u.push(parseInt(r)),m++),o&&(d+=` AND status = $${m}`,u.push(o),m++);let E=await l(`
        SELECT * FROM payment_complements
        ${d}
        ORDER BY created_at DESC
      `,u);n.json(E)}catch(r){console.error("Error fetching complements:",r),n.status(500).json({error:"Failed to fetch complements"})}}),a.post("/api/treasury/complements",w,async(i,n)=>{try{let r=W(i),{companyId:o,clientName:d,invoiceReference:u,amount:m,currency:E}=i.body,g=await l(`
        INSERT INTO payment_complements (
          company_id, client_name, invoice_reference, amount, currency, created_by
        ) VALUES ($1, $2, $3, $4, $5, $6)
        RETURNING *
      `,[o,d,u,m,E||"MXN",r.id]);n.status(201).json(g[0])}catch(r){console.error("Error creating complement:",r),n.status(500).json({error:"Failed to create complement"})}}),a.put("/api/treasury/complements/:id/generate",w,async(i,n)=>{try{let r=parseInt(i.params.id),o=`/uploads/complements/complement-${r}.pdf`,d=await l(`
        UPDATE payment_complements
        SET status = 'generated', generated_at = NOW(), complement_url = $1
        WHERE id = $2
        RETURNING *
      `,[o,r]);if(d.length===0)return n.status(404).json({error:"Complement not found"});n.json(d[0])}catch(r){console.error("Error generating complement:",r),n.status(500).json({error:"Failed to generate complement"})}}),a.get("/api/payment-vouchers",w,async(i,n)=>{try{let{companyId:r,status:o}=i.query,d;o&&r?d=await b.getPaymentVouchersByStatus(o,parseInt(r)):r?d=await b.getPaymentVouchersByCompany(parseInt(r)):o?d=await b.getPaymentVouchersByStatus(o):d=await b.getPaymentVouchers(),n.json(d)}catch(r){console.error("Error fetching payment vouchers:",r),n.status(500).json({error:"Failed to fetch payment vouchers"})}});let h=Ce({storage:Ce.diskStorage({destination:(i,n,r)=>{r(null,"uploads/payment-vouchers/")},filename:(i,n,r)=>{let o=Date.now()+"-"+Math.round(Math.random()*1e9);r(null,`voucher-${o}-${n.originalname}`)}}),fileFilter:(i,n,r)=>{["application/pdf","image/png","image/jpeg","image/jpg"].includes(n.mimetype)?r(null,!0):r(new Error("Solo se permiten archivos PDF, PNG, JPG, JPEG"))},limits:{fileSize:10*1024*1024}});a.post("/api/payment-vouchers/upload",w,c,h.single("voucher"),async(i,n)=>{try{let r=W(i),o=i.file;if(!o)return n.status(400).json({error:"No se subi\xF3 ning\xFAn archivo"});let u=M.object({companyId:M.string().transform(_=>{let C=Number(_);if(!C||C<=0)throw new Error("CompanyId inv\xE1lido");return C}),clientId:M.string().transform(_=>{let C=Number(_);if(!C||C<=0)throw new Error("ClientId inv\xE1lido");return C}),scheduledPaymentId:M.string().optional().transform(_=>_?Number(_):void 0),notes:M.string().optional()}).parse(i.body);console.log(`\u{1F4E4} [Upload] Procesando comprobante: ${o.originalname}`);let m=await b.getClient(u.clientId);if(!m)return n.status(404).json({error:"Cliente no encontrado"});let{analyzePaymentDocument:E}=await Promise.resolve().then(()=>(kr(),Dr)),y=(await import("fs")).readFileSync(o.path),S=await E(y,o.mimetype),P=m.requiresPaymentComplement?"pendiente_complemento":"factura_pagada",k={companyId:u.companyId,clientId:u.clientId,clientName:m.name,scheduledPaymentId:u.scheduledPaymentId||null,status:P,voucherFileUrl:o.path,voucherFileName:o.originalname,voucherFileType:o.mimetype,extractedAmount:S.extractedAmount,extractedDate:S.extractedDate,extractedBank:S.extractedBank,extractedReference:S.extractedReference,extractedCurrency:S.extractedCurrency,ocrConfidence:S.ocrConfidence,notes:u.notes||null,uploadedBy:r.id},A=await b.createPaymentVoucher(k);try{let{TreasuryAutomation:_}=await Promise.resolve().then(()=>(Ye(),Je)),C=await _.processAutomaticFlow(A.id,u.clientId,u.companyId);console.log(`\u{1F916} [Automation] Flujo autom\xE1tico: ${C.message}`);let R=["factura_pagada","pendiente_complemento","complemento_recibido","cierre_contable"];C.nextStatus!==P&&R.includes(C.nextStatus)&&(await b.updatePaymentVoucherStatus(A.id,C.nextStatus),A.status=C.nextStatus)}catch(_){console.error("\u{1F916} [Automation] Error en flujo autom\xE1tico:",_)}console.log(`\u2705 [Upload] Comprobante creado con ID: ${A.id}, estado: ${A.status}`),n.status(201).json({voucher:A,analysis:S,autoStatus:P,requiresComplement:m.requiresPaymentComplement})}catch(r){if(console.error("Error uploading payment voucher:",r),r instanceof M.ZodError)return n.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});n.status(500).json({error:"Error al subir comprobante"})}}),a.put("/api/payment-vouchers/:id/status",w,async(i,n)=>{try{let r=parseInt(i.params.id),d=M.object({status:M.enum(["factura_pagada","pendiente_complemento","complemento_recibido","cierre_contable"])}).parse(i.body),u=await b.updatePaymentVoucherStatus(r,d.status);if(!u)return n.status(404).json({error:"Payment voucher not found"});n.json(u)}catch(r){if(console.error("Error updating payment voucher status:",r),r instanceof M.ZodError)return n.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});n.status(500).json({error:"Failed to update payment voucher status"})}}),a.put("/api/payment-vouchers/:id",w,async(i,n)=>{try{let r=parseInt(i.params.id),d=M.object({invoiceFileUrl:M.string().optional(),invoiceFileName:M.string().optional(),invoiceFileType:M.string().optional(),complementFileUrl:M.string().optional(),complementFileName:M.string().optional(),complementFileType:M.string().optional(),notes:M.string().optional()}).parse(i.body);if(Object.keys(d).length===0)return n.status(400).json({error:"No fields to update"});let u=await b.updatePaymentVoucher(r,d);if(!u)return n.status(404).json({error:"Payment voucher not found"});n.json(u)}catch(r){if(console.error("Error updating payment voucher:",r),r instanceof M.ZodError)return n.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});n.status(500).json({error:"Failed to update payment voucher"})}}),a.get("/api/fx/source-series",w,async(i,n)=>{try{let r=i.query.source||"MONEX",o=parseInt(i.query.days)||30,d=await ar(r,o);n.json(d)}catch(r){console.error("Error fetching source series:",r),n.status(500).json({error:"Failed to fetch source series"})}}),a.get("/api/fx/compare",w,async(i,n)=>{try{let r=parseInt(i.query.days)||30,o=parseFloat(i.query.usd_monthly)||25e3,d=await ir(r,o);n.json(d)}catch(r){console.error("Error fetching comparison:",r),n.status(500).json({error:"Failed to fetch comparison"})}}),a.post("/api/fx/import-historical",w,async(i,n)=>{try{let{importBanxicoHistoricalData:r}=await Promise.resolve().then(()=>(_t(),Nt)),{startDate:o,endDate:d}=i.body;if(!o||!d)return n.status(400).json({error:"startDate and endDate are required"});let u=await r(o,d);n.json(u)}catch(r){console.error("Error importing historical data:",r),n.status(500).json({error:"Failed to import historical data"})}}),a.post("/api/admin/seed-fx-rates",w,async(i,n)=>{try{if(W(i).role!=="admin")return n.status(403).json({error:"Solo administradores pueden ejecutar este endpoint"});let{startDate:o,endDate:d}=i.body,u=o||"2025-09-01",m=d||"2025-10-31";console.log(`\u{1F4E5} Importando tipos de cambio de Banxico: ${u} a ${m}`);let{importBanxicoHistoricalData:E}=await Promise.resolve().then(()=>(_t(),Nt)),g=await E(u,m);console.log(`\u2705 Importaci\xF3n completada: ${g.imported} registros nuevos`),n.json({message:`Importados ${g.imported} tipos de cambio (${g.skipped} ya exist\xEDan)`,...g})}catch(r){console.error("\u274C Error al importar tipos de cambio:",r),n.status(500).json({error:"Error al importar tipos de cambio",details:r instanceof Error?r.message:String(r)})}});let I=Ce({storage:Ce.diskStorage({destination:(i,n,r)=>{r(null,"uploads/idrall/")},filename:(i,n,r)=>{let o=Date.now()+"-"+Math.round(Math.random()*1e9);r(null,`idrall-${o}-${n.originalname}`)}}),fileFilter:(i,n,r)=>{["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.ms-excel","text/csv"].includes(n.mimetype)||n.originalname.endsWith(".xlsx")||n.originalname.endsWith(".xls")?r(null,!0):r(new Error("Solo se permiten archivos Excel (.xlsx, .xls) o CSV"))},limits:{fileSize:10*1024*1024}});return a.post("/api/idrall/upload",w,I.single("excel"),async(i,n)=>{try{let r=W(i),o=i.file;if(!o)return n.status(400).json({error:"No se subi\xF3 ning\xFAn archivo Excel"});let u=M.object({companyId:M.string().transform(_=>{let C=Number(_);if(!C||C<=0)throw new Error("CompanyId inv\xE1lido");return C}),createAsPending:M.string().optional().transform(_=>_==="true")}).parse(i.body);console.log(`\u{1F4CA} [IdrallUpload] Procesando Excel: ${o.originalname} para empresa ${u.companyId}`);let m=await import("fs"),g=(await import("path")).join(process.cwd(),"uploads","idrall");m.existsSync(g)||m.mkdirSync(g,{recursive:!0});let{IdrallParser:y}=await Promise.resolve().then(()=>(Mr(),Ur)),S=await y.parseExcel(o.path);if(!S.success)return n.status(400).json({error:"Error procesando archivo Excel",details:S.errors,totalRows:S.totalRows});console.log(`\u2705 [IdrallUpload] Excel procesado: ${S.payments.length} pagos v\xE1lidos`);let{storage:P}=await Promise.resolve().then(()=>(je(),Zt)),k=[],A=[];for(let _ of S.payments)try{let C=await y.findMatchingClient(_,u.companyId),R=null,X=_.proveedor||_.cliente||"Proveedor IDRALL";C.found?(R=C.client.id,X=C.client.name,console.log(`\u{1F517} [IdrallUpload] Cliente encontrado: ${X} (${C.matchType})`)):console.log(`\u26A0\uFE0F [IdrallUpload] Cliente no encontrado para: ${X}`);let Pe={companyId:u.companyId,clientId:R,clientName:X,amount:_.monto||_.importe||0,currency:_.moneda||"MXN",description:_.concepto||_.descripcion||"Pago IDRALL",dueDate:_.fecha_pago||_.fecha?new Date(_.fecha_pago||_.fecha||new Date):new Date,reference:_.referencia||_.factura||_.folio||"",bank:_.banco||"",account:_.cuenta||"",status:u.createAsPending?"pending":"scheduled",source:"idrall",originalData:_,createdBy:r.id},qe=await P.createScheduledPayment(Pe);k.push(qe)}catch(C){let R=`Error creando pago para ${_.proveedor||_.cliente}: ${C instanceof Error?C.message:"Error desconocido"}`;A.push(R),console.error(`\u274C [IdrallUpload] ${R}`)}try{m.unlinkSync(o.path)}catch(_){console.warn("\u26A0\uFE0F [IdrallUpload] Error limpiando archivo temporal:",_)}console.log(`\u{1F389} [IdrallUpload] Procesamiento completado: ${k.length} pagos creados, ${A.length} errores`),n.json({success:!0,message:"Excel procesado exitosamente",summary:{totalRows:S.totalRows,validPayments:S.payments.length,createdPayments:k.length,errors:A.length},createdPayments:k.map(_=>({id:_.id,clientName:_.clientName,amount:_.amount,dueDate:_.dueDate,status:_.status})),errors:A})}catch(r){if(console.error("\u274C [IdrallUpload] Error procesando Excel:",r),r instanceof M.ZodError)return n.status(400).json({error:"Validaci\xF3n fallida",details:r.errors});n.status(500).json({error:"Error procesando archivo Excel de IDRALL",details:r instanceof Error?r.message:String(r)})}}),a.post("/api/test-email",w,async(i,n)=>{try{let{to:r,department:o="treasury",useTestEmail:d=!0}=i.body;if(!r)return n.status(400).json({error:"Email destination required"});let u=d?"onboarding@resend.dev":void 0;console.log(`[TEST EMAIL] Enviando prueba a ${r} desde ${u||"dominio configurado"}`);let m=await dr.sendEmail({to:r,from:u,subject:"Prueba de Email - Sistema Econova",html:`
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #2563eb;">\u2705 Email de Prueba Exitoso</h2>
            <p>Este es un email de prueba del sistema de Econova.</p>
            <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
              <p><strong>Departamento:</strong> ${o}</p>
              <p><strong>Remitente:</strong> ${u||"Dominio configurado"}</p>
              <p><strong>Timestamp:</strong> ${new Date().toLocaleString("es-MX")}</p>
              <p><strong>Estado:</strong> \u2705 Funcionando correctamente</p>
            </div>
            <p>El sistema de emails est\xE1 configurado y funcionando.</p>
            <p>Saludos,<br>Equipo de Desarrollo - Econova</p>
          </div>
        `},o);m.success||console.error("[TEST EMAIL] Error:",m.error),n.json({success:m.success,message:m.success?"Email enviado exitosamente. Revisa tu bandeja de entrada (y spam).":`Error enviando email: ${m.error}`,messageId:m.messageId,error:m.error,from:u||"dominio configurado"})}catch(r){console.error("[TEST EMAIL] Error en test de email:",r),n.status(500).json({success:!1,error:`Error interno del servidor: ${r?.message||String(r)}`})}}),console.log("\u2705 All routes have been configured successfully"),a}pe();ie();import $t from"node-cron";var Ct=23;async function Dt(){try{console.log("\u{1F504} [DOF Scheduler] Obteniendo tipo de cambio del DOF...");let a=await fetch("https://www.banxico.org.mx/SieAPIRest/service/v1/series/SF43718/datos/oportuno",{headers:{"Bmx-Token":process.env.BANXICO_TOKEN||""}});if(!a.ok){console.warn("\u26A0\uFE0F  [DOF Scheduler] No se pudo obtener el tipo de cambio oficial, usando valores estimados");let l=18.35+(Math.random()*.2-.1),p=Number(l.toFixed(4)),h=Number((l+.04).toFixed(4));await v.insert(G).values({buyRate:p,sellRate:h,source:"DOF",notes:"Actualizaci\xF3n autom\xE1tica (estimado)",date:new Date,createdBy:Ct}),console.log(`\u2705 [DOF Scheduler] Tipo de cambio insertado: Compra ${p}, Venta ${h}`);return}let t=await a.json(),e=parseFloat(t.bmx.series[0].datos[0].dato),s=Number(e.toFixed(4)),c=Number(e.toFixed(4));await v.insert(G).values({buyRate:s,sellRate:c,source:"DOF",notes:"Actualizaci\xF3n autom\xE1tica desde Banxico",date:new Date,createdBy:Ct}),console.log(`\u2705 [DOF Scheduler] Tipo de cambio insertado desde Banxico: Compra ${s}, Venta ${c}`)}catch(a){console.error("\u274C [DOF Scheduler] Error al obtener tipo de cambio:",a);let t=18.35+(Math.random()*.2-.1),e=Number(t.toFixed(4)),s=Number((t+.04).toFixed(4));await v.insert(G).values({buyRate:e,sellRate:s,source:"DOF",notes:"Actualizaci\xF3n autom\xE1tica (fallback)",date:new Date,createdBy:Ct}),console.log(`\u2705 [DOF Scheduler] Tipo de cambio insertado (fallback): Compra ${e}, Venta ${s}`)}}function Lr(){$t.schedule("0 9 * * *",async()=>{console.log("\u23F0 [DOF Scheduler] Ejecutando actualizaci\xF3n de 9:00 AM"),await Dt()},{timezone:"America/Mexico_City"}),$t.schedule("0 12 * * *",async()=>{console.log("\u23F0 [DOF Scheduler] Ejecutando actualizaci\xF3n de 12:00 PM"),await Dt()},{timezone:"America/Mexico_City"}),$t.schedule("0 17 * * *",async()=>{console.log("\u23F0 [DOF Scheduler] Ejecutando actualizaci\xF3n de 5:00 PM"),await Dt()},{timezone:"America/Mexico_City"}),console.log("\u{1F4C5} [DOF Scheduler] Programador de tipo de cambio DOF inicializado"),console.log("\u23F0 Actualizaciones programadas: 9:00 AM, 12:00 PM y 5:00 PM (Hora de M\xE9xico)")}function Vr(a,t,e){try{let c=a.user;if(!c)return e();let l=a.query.companyId?parseInt(a.query.companyId):a.body?.companyId;l&&c.companyId&&l!==c.companyId&&(console.log("\u{1F6A8} [SECURITY ALERT] Cross-company access attempt:"),console.log(`   User: ${c.name} (ID: ${c.id}, Company: ${c.companyId})`),console.log(`   Requested Company: ${l}`),console.log(`   Endpoint: ${a.method} ${a.path}`),console.log(`   IP: ${a.ip}`),console.log(`   User-Agent: ${a.get("User-Agent")}`),console.log(`   Timestamp: ${new Date().toISOString()}`),console.log("   ---")),c.role==="admin"&&l&&console.log(`\u{1F7E1} [ADMIN ACCESS] Admin ${c.name} accessing company ${l}`),l&&c.companyId===l&&console.log(`\u{1F7E2} [NORMAL ACCESS] User ${c.name} accessing own company data`),e()}catch(s){console.error("[SECURITY MONITOR ERROR]:",s),e()}}function Fr(a,t,e){let s=a.ip,c=a.body?.email;console.log(`\u{1F510} [LOGIN ATTEMPT] IP: ${s}, Email: ${c}, Time: ${new Date().toISOString()}`),e()}function qr(a,t,e){let s=a.user,c=a.file;c&&console.log(`\u{1F4C1} [FILE UPLOAD] User: ${s?.name}, File: ${c.originalname}, Size: ${c.size} bytes`),e()}function Br(a,t,e){let s=a.user,c=a.path;["/api/users","/api/companies","/api/kpis","/api/shipments","/api/clients"].some(p=>c.includes(p))&&console.log(`\u{1F50D} [API ACCESS] User: ${s?.name}, Endpoint: ${c}, Method: ${a.method}`),e()}pe();var Le={debug:(a,t)=>{try{let{logger:e}=(Ue(),rt(Ge));e.debug(a,t)}catch{console.log(`[DEBUG] ${a}`,t||"")}},error:(a,t)=>{try{let{logger:e}=(Ue(),rt(Ge));e.error(a,t)}catch{console.error(`[ERROR] ${a}`,t||"")}},info:(a,t)=>{try{let{logger:e}=(Ue(),rt(Ge));e.info(a,t)}catch{console.log(`[INFO] ${a}`,t||"")}}};async function Hr(a,t){let e=Date.now(),s={status:"healthy",timestamp:new Date().toISOString(),services:{database:"down",openai:"not_configured",sendgrid:"not_configured"},metrics:{uptime:process.uptime(),memoryUsage:process.memoryUsage(),version:process.env.npm_package_version||"1.0.0"}};try{try{let I=v.execute("SELECT 1"),i=new Promise((n,r)=>setTimeout(()=>r(new Error("Database check timeout")),2e3));await Promise.race([I,i]),s.services.database="up",Le.debug("Database health check passed")}catch(I){s.services.database="down",s.status==="healthy"&&(s.status="degraded"),Le.error("Database health check failed",{error:I instanceof Error?I.message:String(I)})}process.env.OPENAI_API_KEY&&process.env.OPENAI_API_KEY!=="your-openai-api-key-here"?s.services.openai="up":(s.services.openai="not_configured",s.status==="healthy"&&(s.status="degraded"));let c=process.env.SENDGRID_API_KEY&&process.env.SENDGRID_API_KEY!=="your-sendgrid-api-key",l=process.env.RESEND_API_KEY&&process.env.RESEND_API_KEY!=="your-resend-api-key";c||l?s.services.sendgrid="up":(s.services.sendgrid="not_configured",s.status==="healthy"&&(s.status="degraded"));let p=Date.now()-e;Le.info("Health check completed",{status:s.status,responseTime:`${p}ms`,services:s.services}),t.status(200).json(s)}catch(c){Le.error("Health check failed",{error:c instanceof Error?c.message:String(c)}),s.status="unhealthy",t.status(200).json(s)}}async function Wr(a,t){try{let e=v.execute("SELECT 1"),s=new Promise((c,l)=>setTimeout(()=>l(new Error("Database readiness check timeout")),2e3));await Promise.race([e,s]),t.status(200).json({status:"ready"})}catch(e){Le.error("Readiness check failed",{error:e instanceof Error?e.message:String(e)}),t.status(200).json({status:"not_ready",message:e instanceof Error?e.message:String(e)})}}async function zr(a,t){t.status(200).json({status:"alive",timestamp:new Date().toISOString(),uptime:process.uptime()})}import be from"path";import Fe from"fs";function vn(){try{let a=process.env.NODE_ENV||"undefined",t=process.env.NODE_ENV==="production"?"production":"development";console.log(`
\u{1F50D} === BOOT DIAGNOSTICS ===`),console.log(`\u{1F4CA} NODE_ENV: ${a}`),console.log(`\u{1F4CA} Express env will be: ${t}`),console.log(`\u{1F4CA} Current working directory: ${process.cwd()}`);let e=import.meta.url,s=be.dirname(En(e));console.log(`\u{1F4CA} Script directory: ${s}`);let c=be.resolve(s,"index.js"),l=be.resolve(s,"public"),p=be.resolve(l,"index.html"),h=be.resolve(s,"..","server","dist","index.js"),I=be.resolve(s,"..","dist","public"),i=be.resolve(I,"index.html");console.log(`\u{1F4C2} Expected dist/index.js: ${c}`),console.log(`\u{1F4C2} Expected dist/public: ${l}`),console.log(`\u{1F4C2} Expected dist/public/index.html: ${p}`),console.log(`\u2705 dist/index.js exists: ${Fe.existsSync(c)} (expected for production)`),console.log(`\u2705 dist/public exists: ${Fe.existsSync(l)} (expected for production)`),console.log(`\u2705 dist/public/index.html exists: ${Fe.existsSync(p)} (expected for production)`),console.log("\u{1F4E6} Build artifacts in current locations:"),console.log(`   backend (server/dist/index.js): ${Fe.existsSync(h)}`),console.log(`   frontend (dist/public/index.html): ${Fe.existsSync(i)}`);let n=["DATABASE_URL","JWT_SECRET","SENDGRID_API_KEY","REPL_ID","REPL_SLUG"];console.log("\u{1F512} Environment variables status:"),n.forEach(r=>{let o=!!process.env[r],d=process.env[r]?.length||0;console.log(`   ${r}: ${o?"\u2705 SET":"\u274C MISSING"} ${o?`(${d} chars)`:""}`)}),console.log(`=== END BOOT DIAGNOSTICS ===
`)}catch(a){console.error("\u26A0\uFE0F Error in boot diagnostics:",a),console.log(`Continuing server startup...
`)}}try{vn()}catch(a){console.error("\u26A0\uFE0F Boot diagnostics failed (non-critical):",a)}var J=et();process.env.NODE_ENV==="production"&&J.set("trust proxy",1);J.get("/health",(a,t)=>{t.status(200).json({status:"healthy",service:"kpis-grupo-orsega"})});J.head("/health",(a,t)=>{t.status(200).end()});J.get("/healthz",(a,t)=>{t.status(200).json({status:"ok"})});J.head("/healthz",(a,t)=>{t.status(200).end()});J.use(et.json());J.use(et.urlencoded({extended:!1}));J.use("/api",Vr);J.use("/api/login",Fr);J.use("/api/upload",qr);J.use("/api",Br);J.use((a,t,e)=>{if(a.path==="/health"||a.path==="/healthz")return e();t.setHeader("X-Frame-Options","DENY"),t.setHeader("X-Content-Type-Options","nosniff"),t.setHeader("X-XSS-Protection","1; mode=block"),t.setHeader("Referrer-Policy","strict-origin-when-cross-origin"),t.setHeader("Content-Security-Policy","default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"),e()});J.use(et.static(be.join(process.cwd(),"public")));function Gr(a){if(!a||typeof a!="object")return a;let t=["password","token","authorization","apiKey","secret","jwt"],e=Array.isArray(a)?[]:{};for(let[s,c]of Object.entries(a))t.some(l=>s.toLowerCase().includes(l))?e[s]="[REDACTED]":typeof c=="object"&&c!==null?e[s]=Gr(c):e[s]=c;return e}J.use((a,t,e)=>{if(a.path==="/health"||a.path==="/healthz")return e();let s=Date.now(),c=a.path,l,p=t.json;t.json=function(h,...I){return l=h,p.apply(t,[h,...I])},t.on("finish",()=>{let h=Date.now()-s;if(c.startsWith("/api")){let I=`${a.method} ${c} ${t.statusCode} in ${h}ms`;if(l){let i=Gr(l);I+=` :: ${JSON.stringify(i)}`}I.length>80&&(I=I.slice(0,79)+"\u2026"),console.log(I)}}),e()});var Mt=fn(J),Se=process.env.PORT?parseInt(process.env.PORT,10):8080;(!Se||isNaN(Se))&&(console.error("\u274C ERROR: Invalid PORT value:",process.env.PORT),process.exit(1));try{Mt.listen(Se,"0.0.0.0",()=>{console.log(`\u2705 Server listening on port ${Se}`),console.log(`\u{1F310} Accessible on 0.0.0.0:${Se}`),console.log(`\u{1F4CA} NODE_ENV: ${process.env.NODE_ENV||"not set"}`),console.log(`\u{1F5C4}\uFE0F DATABASE_URL exists: ${!!process.env.DATABASE_URL}`),console.log(`\u{1F511} JWT_SECRET exists: ${!!process.env.JWT_SECRET}`),console.log(`\u{1F3E5} Healthcheck available at: http://0.0.0.0:${Se}/health`),console.log(`\u{1F3E5} Healthcheck alternative: http://0.0.0.0:${Se}/healthz`),console.log("\u2705 Railway healthcheck should work now!")}),Mt.on("error",a=>{a.code==="EADDRINUSE"?(console.error(`\u274C ERROR: Port ${Se} is already in use`),process.exit(1)):console.error("\u274C Server error:",a)})}catch(a){console.error("\u274C CRITICAL: Failed to start server:",a),process.exit(1)}J.use((a,t,e,s)=>{let c=a.status||a.statusCode||500,l=a.message||"Internal Server Error";t.path!=="/health"&&t.path!=="/healthz"&&(console.error(`[Server Error ${c}]:`,a.message),c>=500&&console.error("Full error stack:",a.stack)),e.status(c).json({message:l})});process.on("unhandledRejection",(a,t)=>{console.error("\u274C Unhandled Rejection at:",t,"reason:",a)});process.on("uncaughtException",a=>{console.error("\u274C Uncaught Exception:",a),(a.message.includes("EADDRINUSE")||a.message.includes("PORT"))&&process.exit(1)});(async()=>{try{console.log("\u{1F504} Starting async initialization..."),J.get("/api/health",Hr),J.get("/api/health/ready",Wr),J.get("/api/health/live",zr),console.log("\u2705 Health check endpoints registered");try{Kr(J),console.log("\u2705 API routes registered")}catch(t){console.error("\u26A0\uFE0F Warning: Error registering routes (server still running):",t)}let a=J.get("env");if(console.log(`\u{1F680} Express environment detected: ${a}`),a==="development"){console.log("\u{1F527} Setting up Vite middleware for development...");try{let{setupVite:t}=await Promise.resolve().then(()=>(Ut(),jt));await t(J,Mt),console.log("\u2705 Vite middleware configured")}catch(t){console.error("\u274C Failed to load Vite middleware (non-critical):",t)}}else{console.log("\u{1F4E6} Setting up static file serving for production...");try{let{serveStatic:t}=await Promise.resolve().then(()=>(Ut(),jt));t(J),console.log("\u2705 Static file serving configured")}catch(t){console.error("\u26A0\uFE0F Warning: Failed to setup static files (non-critical):",t)}}console.log("\u23F8\uFE0F  Auto-cierre autom\xE1tico DESACTIVADO - cierre manual requerido"),console.log("\u2705 Sistema configurado para cierre manual");try{Lr(),console.log("\u2705 DOF scheduler initialized")}catch(t){console.error("\u26A0\uFE0F Warning: Failed to initialize DOF scheduler (non-critical):",t)}console.log("\u2705 All server initialization completed")}catch(a){console.error("\u26A0\uFE0F CRITICAL: Error during async initialization:",a),console.error("\u26A0\uFE0F But server is still running and /health should work")}})();
